using System;
using ILNumerics.BuiltInFunctions;
using ILNumerics.Misc;
using ILNumerics.Test;
using ILNumerics.Native; 

namespace ILNumerics.Test {
public partial class TEST_ILMath_fft2_Amn {


private static void TEST_FFT_double_complex_1() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000};
A.Reshape(new ILDimension(1,1));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{1.000000000000000,1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{0.500000000000000,0.500000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{0.500000000000000,0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{1.000000000000000,1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{0.500000000000000,0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{0.500000000000000,0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{1.000000000000000,1.000000000000000,1.000000000000000,1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{0.250000000000000,0.250000000000000,0.250000000000000,0.250000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{0.250000000000000,0.250000000000000,0.250000000000000,0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
}
private static void TEST_FFT_double_complex_2() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000};
A.Reshape(new ILDimension(3,1));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{1.000000000000000,1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{0.500000000000000,0.500000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{0.500000000000000,0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new double[]{0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new double[]{0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
}
private static void TEST_FFT_double_complex_3() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000};
A.Reshape(new ILDimension(1,3));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{1.000000000000000,1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{0.500000000000000,0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{0.500000000000000,0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,3.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{6.000000000000000,6.000000000000000,-2.000000000000000,-2.000000000000000,2.000000000000000,2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-2.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,0.250000000000000,0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,0.250000000000000,0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
}
private static void TEST_FFT_double_complex_4() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000};
A.Reshape(new ILDimension(2,3));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{4.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{2.000000000000000,-1.000000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{2.000000000000000,-1.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{9.000000000000000,-3.000000000000000,-3.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new double[]{3.000000000000000,-1.000000000000000,-1.000000000000000};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new double[]{3.000000000000000,-1.000000000000000,-1.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.577350269189626,0.577350269189626};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{9.000000000000000,-4.000000000000000,3.000000000000000,-4.000000000000000};
ResultI = new double[]{0.000000000000000,-3.000000000000000,0.000000000000000,3.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new double[]{2.250000000000000,-1.000000000000000,0.750000000000000,-1.000000000000000};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new double[]{2.250000000000000,-1.000000000000000,0.750000000000000,-1.000000000000000};
ResIAI = new double[]{0.000000000000000,0.750000000000000,0.000000000000000,-0.750000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-4.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-1.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-1.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{21.000000000000000,-3.000000000000000,-6.000000000000000,0.000000000000000,-6.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,3.464101615137754,0.000000000000000,-3.464101615137754,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new double[]{3.500000000000000,-0.500000000000000,-1.000000000000000,0.000000000000000,-1.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new double[]{3.500000000000000,-0.500000000000000,-1.000000000000000,0.000000000000000,-1.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.577350269189626,0.000000000000000,0.577350269189626,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{21.000000000000000,-3.000000000000000,-8.000000000000000,0.000000000000000,7.000000000000000,-1.000000000000000,-8.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-7.000000000000000,1.000000000000000,0.000000000000000,0.000000000000000,7.000000000000000,-1.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new double[]{2.625000000000000,-0.375000000000000,-1.000000000000000,0.000000000000000,0.875000000000000,-0.125000000000000,-1.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new double[]{2.625000000000000,-0.375000000000000,-1.000000000000000,0.000000000000000,0.875000000000000,-0.125000000000000,-1.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.875000000000000,-0.125000000000000,0.000000000000000,0.000000000000000,-0.875000000000000,0.125000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{3.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,-1.732050807568877,1.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new double[]{1.000000000000000,-0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new double[]{1.000000000000000,-0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.577350269189626,-0.577350269189626};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{10.000000000000000,1.000000000000000,1.000000000000000,-4.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,-5.196152422706632,5.196152422706632,0.000000000000000,1.732050807568877,-1.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new double[]{1.666666666666667,0.166666666666667,0.166666666666667,-0.666666666666667,-0.166666666666667,-0.166666666666667};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new double[]{1.666666666666667,0.166666666666667,0.166666666666667,-0.666666666666667,-0.166666666666667,-0.166666666666667};
ResIAI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{21.000000000000000,3.000000000000000,3.000000000000000,-6.000000000000000,0.000000000000000,-3.000000000000000,-6.000000000000000,-3.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,-10.392304845413262,10.392304845413262,3.464101615137754,3.464101615137754,-1.732050807568877,-3.464101615137754,1.732050807568877,-3.464101615137754};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new double[]{2.333333333333334,0.333333333333333,0.333333333333333,-0.666666666666667,0.000000000000000,-0.333333333333333,-0.666666666666667,-0.333333333333333,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new double[]{2.333333333333334,0.333333333333333,0.333333333333333,-0.666666666666667,0.000000000000000,-0.333333333333333,-0.666666666666667,-0.333333333333333,0.000000000000000};
ResIAI = new double[]{0.000000000000000,1.154700538379252,-1.154700538379252,-0.384900179459750,-0.384900179459751,0.192450089729875,0.384900179459750,-0.192450089729875,0.384900179459750};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{21.000000000000000,3.000000000000000,3.000000000000000,-8.000000000000000,-5.464101615137754,1.464101615137754,7.000000000000000,1.000000000000000,1.000000000000000,-8.000000000000000,1.464101615137754,-5.464101615137754};
ResultI = new double[]{0.000000000000000,-10.392304845413264,10.392304845413264,-7.000000000000000,2.464101615137755,-4.464101615137755,0.000000000000000,-3.464101615137754,3.464101615137754,7.000000000000000,4.464101615137755,-2.464101615137755};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4));
ResRA = new double[]{1.750000000000000,0.250000000000000,0.250000000000000,-0.666666666666667,-0.455341801261480,0.122008467928146,0.583333333333333,0.083333333333333,0.083333333333333,-0.666666666666667,0.122008467928146,-0.455341801261480};
ResRA.Reshape(new ILDimension(3,4));
ResIAR = new double[]{1.750000000000000,0.250000000000000,0.250000000000000,-0.666666666666667,-0.455341801261480,0.122008467928146,0.583333333333333,0.083333333333333,0.083333333333333,-0.666666666666667,0.122008467928146,-0.455341801261480};
ResIAI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.583333333333333,-0.205341801261480,0.372008467928146,0.000000000000000,0.288675134594813,-0.288675134594813,-0.583333333333333,-0.372008467928146,0.205341801261480};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
}
private static void TEST_FFT_double_complex_5() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000};
A.Reshape(new ILDimension(3,2));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{5.000000000000000,-3.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{2.500000000000000,-1.500000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{2.500000000000000,-1.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{5.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,-3.464101615137754,3.464101615137754};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new double[]{1.666666666666667,-0.333333333333333,-0.333333333333333};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new double[]{1.666666666666667,-0.333333333333333,-0.333333333333333};
ResIAI = new double[]{0.000000000000000,1.154700538379252,-1.154700538379252};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{12.000000000000000,-2.000000000000000,-6.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{12.000000000000000,-2.000000000000000,-1.500000000000000,-0.500000000000000,-1.500000000000000,-0.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-7.794228634059947,0.866025403784439,7.794228634059947,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new double[]{2.000000000000000,-0.333333333333333,-0.250000000000000,-0.083333333333333,-0.250000000000000,-0.083333333333333};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new double[]{2.000000000000000,-0.333333333333333,-0.250000000000000,-0.083333333333333,-0.250000000000000,-0.083333333333333};
ResIAI = new double[]{0.000000000000000,0.000000000000000,1.299038105676658,-0.144337567297406,-1.299038105676658,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{21.000000000000000,-3.000000000000000,-3.000000000000000,-9.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new double[]{3.500000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new double[]{3.500000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{21.000000000000000,-3.000000000000000,-3.000000000000000,-1.500000000000000,-0.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,-12.990381056766578,1.732050807568877,0.866025403784439,12.990381056766578,-0.866025403784439,-1.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new double[]{2.333333333333334,-0.333333333333333,-0.333333333333333,-0.166666666666667,-0.000000000000000,-0.166666666666667,-0.166666666666667,-0.166666666666667,-0.000000000000000};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new double[]{2.333333333333334,-0.333333333333333,-0.333333333333333,-0.166666666666667,-0.000000000000000,-0.166666666666667,-0.166666666666667,-0.166666666666667,-0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.192450089729875,0.192450089729875,1.443375672974064,-0.192450089729875,-0.096225044864938,-1.443375672974064,0.096225044864938,0.192450089729875};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{21.000000000000000,-4.000000000000000,7.000000000000000,-4.000000000000000,-9.000000000000000,0.000000000000000,-3.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,-7.000000000000000,0.000000000000000,7.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-3.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new double[]{2.625000000000000,-0.500000000000000,0.875000000000000,-0.500000000000000,-1.125000000000000,0.000000000000000,-0.375000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new double[]{2.625000000000000,-0.500000000000000,0.875000000000000,-0.500000000000000,-1.125000000000000,0.000000000000000,-0.375000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.875000000000000,0.000000000000000,-0.875000000000000,0.000000000000000,-0.375000000000000,0.000000000000000,0.375000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{21.000000000000000,-4.000000000000000,7.000000000000000,-4.000000000000000,-1.500000000000000,-5.330127018922193,-0.500000000000000,3.330127018922193,-1.500000000000000,3.330127018922193,-0.500000000000000,-5.330127018922193};
ResultI = new double[]{0.000000000000000,-7.000000000000000,0.000000000000000,7.000000000000000,-12.990381056766578,2.232050807568877,-4.330127018922193,1.232050807568877,12.990381056766578,-1.232050807568877,4.330127018922193,-2.232050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3));
ResRA = new double[]{1.750000000000000,-0.333333333333333,0.583333333333333,-0.333333333333333,-0.125000000000000,-0.444177251576849,-0.041666666666667,0.277510584910183,-0.125000000000000,0.277510584910183,-0.041666666666667,-0.444177251576849};
ResRA.Reshape(new ILDimension(4,3));
ResIAR = new double[]{1.750000000000000,-0.333333333333333,0.583333333333333,-0.333333333333333,-0.125000000000000,-0.444177251576849,-0.041666666666667,0.277510584910183,-0.125000000000000,0.277510584910183,-0.041666666666667,-0.444177251576849};
ResIAI = new double[]{0.000000000000000,0.583333333333333,0.000000000000000,-0.583333333333333,1.082531754730548,-0.186004233964073,0.360843918243516,-0.102670900630740,-1.082531754730548,0.102670900630740,-0.360843918243516,0.186004233964073};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
}
private static void TEST_FFT_double_complex_6() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000};
A.Reshape(new ILDimension(2,2));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{4.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{2.000000000000000,-1.000000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{2.000000000000000,-1.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{4.000000000000000,-0.500000000000000,-0.500000000000000};
ResultI = new double[]{0.000000000000000,-2.598076211353316,2.598076211353316};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new double[]{1.333333333333333,-0.166666666666667,-0.166666666666667};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new double[]{1.333333333333333,-0.166666666666667,-0.166666666666667};
ResIAI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-4.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-1.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-1.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-6.062177826491070,0.866025403784439,6.062177826491070,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new double[]{1.666666666666667,-0.333333333333333,-0.083333333333333,-0.083333333333333,-0.083333333333333,-0.083333333333333};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new double[]{1.666666666666667,-0.333333333333333,-0.083333333333333,-0.083333333333333,-0.083333333333333,-0.083333333333333};
ResIAI = new double[]{0.000000000000000,0.000000000000000,1.010362971081845,-0.144337567297406,-1.010362971081845,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{3.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,-1.732050807568877,1.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new double[]{1.000000000000000,-0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new double[]{1.000000000000000,-0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.577350269189626,-0.577350269189626};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{10.000000000000000,1.000000000000000,1.000000000000000,-4.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,-5.196152422706632,5.196152422706632,0.000000000000000,1.732050807568877,-1.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new double[]{1.666666666666667,0.166666666666667,0.166666666666667,-0.666666666666667,-0.166666666666667,-0.166666666666667};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new double[]{1.666666666666667,0.166666666666667,0.166666666666667,-0.666666666666667,-0.166666666666667,-0.166666666666667};
ResIAI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{10.000000000000000,1.000000000000000,1.000000000000000,-0.500000000000000,-3.500000000000000,2.500000000000000,-0.500000000000000,2.500000000000000,-3.500000000000000};
ResultI = new double[]{0.000000000000000,-5.196152422706632,5.196152422706632,-6.062177826491070,-0.866025403784439,-0.866025403784439,6.062177826491070,0.866025403784439,0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new double[]{1.111111111111111,0.111111111111111,0.111111111111111,-0.055555555555556,-0.388888888888889,0.277777777777778,-0.055555555555556,0.277777777777778,-0.388888888888889};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new double[]{1.111111111111111,0.111111111111111,0.111111111111111,-0.055555555555556,-0.388888888888889,0.277777777777778,-0.055555555555556,0.277777777777778,-0.388888888888889};
ResIAI = new double[]{0.000000000000000,0.577350269189626,-0.577350269189626,0.673575314054563,0.096225044864938,0.096225044864938,-0.673575314054563,-0.096225044864938,-0.096225044864938};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
}
private static void TEST_FFT_double_complex_7() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000};
A.Reshape(new ILDimension(4,5,2));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{6.000000000000000,8.000000000000000,10.000000000000000,12.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,46.000000000000000,48.000000000000000,50.000000000000000,52.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{15.000000000000000,18.000000000000000,21.000000000000000,24.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,75.000000000000000,78.000000000000000,81.000000000000000,84.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,3.464101615137754,3.464101615137754,3.464101615137754,-3.464101615137754,-3.464101615137754,-3.464101615137754,-3.464101615137754,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,3.464101615137754,3.464101615137754,3.464101615137754,-3.464101615137754,-3.464101615137754,-3.464101615137754,-3.464101615137754};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,13.763819204711734,13.763819204711734,13.763819204711734,3.249196962329064,3.249196962329064,3.249196962329064,3.249196962329064,-3.249196962329064,-3.249196962329064,-3.249196962329064,-3.249196962329064,-13.763819204711734,-13.763819204711734,-13.763819204711734,-13.763819204711734,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,13.763819204711734,13.763819204711734,13.763819204711734,3.249196962329064,3.249196962329064,3.249196962329064,3.249196962329064,-3.249196962329064,-3.249196962329064,-3.249196962329064,-3.249196962329064,-13.763819204711734,-13.763819204711734,-13.763819204711734,-13.763819204711734};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{45.000000000000000,50.000000000000000,55.000000000000000,60.000000000000000,-22.500000000000000,-23.000000000000000,-23.500000000000000,-24.000000000000000,-1.500000000000000,-1.000000000000000,-0.500000000000000,0.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,-1.500000000000000,-1.000000000000000,-0.500000000000000,0.000000000000000,-22.500000000000000,-23.000000000000000,-23.500000000000000,-24.000000000000000,145.000000000000000,150.000000000000000,155.000000000000000,160.000000000000000,-32.500000000000000,-33.000000000000000,-33.500000000000000,-34.000000000000000,8.500000000000000,9.000000000000000,9.500000000000000,10.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,8.500000000000000,9.000000000000000,9.500000000000000,10.000000000000000,-32.500000000000000,-33.000000000000000,-33.500000000000000,-34.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,1.732050807568877,0.866025403784439,0.000000000000000,-11.258330249197702,-12.124355652982141,-12.990381056766578,-13.856406460551018,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,11.258330249197702,12.124355652982141,12.990381056766578,13.856406460551018,-2.598076211353316,-1.732050807568877,-0.866025403784439,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-14.722431864335457,-15.588457268119894,-16.454482671904334,-17.320508075688771,-28.578838324886473,-29.444863728670914,-30.310889132455351,-31.176914536239789,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.578838324886473,29.444863728670914,30.310889132455351,31.176914536239789,14.722431864335457,15.588457268119894,16.454482671904334,17.320508075688771};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,6,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,6,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,6);
ResultR = new double[]{1.000000000000000,5.000000000000000,9.000000000000000,13.000000000000000,17.000000000000000,21.000000000000000,25.000000000000000,29.000000000000000,33.000000000000000,37.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,21.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,2));
ResRA = new double[]{1.000000000000000,21.000000000000000};
ResRA.Reshape(new ILDimension(1,1,2));
ResIAR = new double[]{1.000000000000000,21.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{6.000000000000000,-4.000000000000000,46.000000000000000,-4.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,2));
ResRA = new double[]{3.000000000000000,-2.000000000000000,23.000000000000000,-2.000000000000000};
ResRA.Reshape(new ILDimension(1,2,2));
ResIAR = new double[]{3.000000000000000,-2.000000000000000,23.000000000000000,-2.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{15.000000000000000,-6.000000000000000,-6.000000000000000,75.000000000000000,-6.000000000000000,-6.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,0.000000000000000,3.464101615137754,-3.464101615137754};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,2));
ResRA = new double[]{5.000000000000000,-2.000000000000000,-2.000000000000000,25.000000000000000,-2.000000000000000,-2.000000000000000};
ResRA.Reshape(new ILDimension(1,3,2));
ResIAR = new double[]{5.000000000000000,-2.000000000000000,-2.000000000000000,25.000000000000000,-2.000000000000000,-2.000000000000000};
ResIAI = new double[]{0.000000000000000,-1.154700538379252,1.154700538379252,0.000000000000000,-1.154700538379252,1.154700538379252};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{28.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,108.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,2));
ResRA = new double[]{7.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,27.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResRA.Reshape(new ILDimension(1,4,2));
ResIAR = new double[]{7.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,27.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResIAI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{45.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,145.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,2));
ResRA = new double[]{9.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,29.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResRA.Reshape(new ILDimension(1,5,2));
ResIAR = new double[]{9.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,29.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResIAI = new double[]{0.000000000000000,-2.752763840942347,-0.649839392465813,0.649839392465813,2.752763840942347,0.000000000000000,-2.752763840942347,-0.649839392465813,0.649839392465813,2.752763840942347};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{45.000000000000000,-22.500000000000000,-1.500000000000000,9.000000000000000,-1.500000000000000,-22.500000000000000,145.000000000000000,-32.500000000000000,8.500000000000000,29.000000000000000,8.500000000000000,-32.500000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-11.258330249197702,0.000000000000000,11.258330249197702,-2.598076211353316,0.000000000000000,-14.722431864335457,-28.578838324886473,0.000000000000000,28.578838324886473,14.722431864335457};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,6,2));
ResRA = new double[]{7.500000000000000,-3.750000000000000,-0.250000000000000,1.500000000000000,-0.250000000000000,-3.750000000000000,24.166666666666668,-5.416666666666667,1.416666666666667,4.833333333333333,1.416666666666667,-5.416666666666667};
ResRA.Reshape(new ILDimension(1,6,2));
ResIAR = new double[]{7.500000000000000,-3.750000000000000,-0.250000000000000,1.500000000000000,-0.250000000000000,-3.750000000000000,24.166666666666668,-5.416666666666667,1.416666666666667,4.833333333333333,1.416666666666667,-5.416666666666667};
ResIAI = new double[]{0.000000000000000,-0.433012701892219,1.876388374866284,0.000000000000000,-1.876388374866284,0.433012701892219,0.000000000000000,2.453738644055910,4.763139720814412,0.000000000000000,-4.763139720814412,-2.453738644055910};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,6);
ResultR = new double[]{3.000000000000000,-1.000000000000000,11.000000000000000,-1.000000000000000,19.000000000000000,-1.000000000000000,27.000000000000000,-1.000000000000000,35.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,51.000000000000000,-1.000000000000000,59.000000000000000,-1.000000000000000,67.000000000000000,-1.000000000000000,75.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,2));
ResRA = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,2));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{14.000000000000000,-2.000000000000000,-8.000000000000000,0.000000000000000,94.000000000000000,-2.000000000000000,-8.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,2));
ResRA = new double[]{3.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,23.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2,2));
ResIAR = new double[]{3.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,23.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{33.000000000000000,-3.000000000000000,-12.000000000000000,0.000000000000000,-12.000000000000000,0.000000000000000,153.000000000000000,-3.000000000000000,-12.000000000000000,0.000000000000000,-12.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,6.928203230275509,0.000000000000000,-6.928203230275509,0.000000000000000,0.000000000000000,0.000000000000000,6.928203230275509,0.000000000000000,-6.928203230275509,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,2));
ResRA = new double[]{5.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3,2));
ResIAR = new double[]{5.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-1.154700538379252,0.000000000000000,1.154700538379252,0.000000000000000,0.000000000000000,0.000000000000000,-1.154700538379252,0.000000000000000,1.154700538379252,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{60.000000000000000,-4.000000000000000,-16.000000000000000,0.000000000000000,-16.000000000000000,0.000000000000000,-16.000000000000000,0.000000000000000,220.000000000000000,-4.000000000000000,-16.000000000000000,0.000000000000000,-16.000000000000000,0.000000000000000,-16.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,16.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-16.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,16.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-16.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,2));
ResRA = new double[]{7.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4,2));
ResIAR = new double[]{7.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{95.000000000000000,-5.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,295.000000000000000,-5.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,27.527638409423467,0.000000000000000,6.498393924658127,0.000000000000000,-6.498393924658127,0.000000000000000,-27.527638409423467,0.000000000000000,0.000000000000000,0.000000000000000,27.527638409423467,0.000000000000000,6.498393924658127,0.000000000000000,-6.498393924658127,0.000000000000000,-27.527638409423467,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,2));
ResRA = new double[]{9.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,5,2));
ResIAR = new double[]{9.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-2.752763840942347,0.000000000000000,-0.649839392465813,0.000000000000000,0.649839392465813,0.000000000000000,2.752763840942347,0.000000000000000,0.000000000000000,0.000000000000000,-2.752763840942347,0.000000000000000,-0.649839392465813,0.000000000000000,0.649839392465813,0.000000000000000,2.752763840942347,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{95.000000000000000,-5.000000000000000,-45.500000000000000,0.500000000000000,-2.500000000000000,-0.500000000000000,19.000000000000000,-1.000000000000000,-2.500000000000000,-0.500000000000000,-45.500000000000000,0.500000000000000,295.000000000000000,-5.000000000000000,-65.500000000000000,0.500000000000000,17.500000000000000,-0.500000000000000,59.000000000000000,-1.000000000000000,17.500000000000000,-0.500000000000000,-65.500000000000000,0.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,4.330127018922193,0.866025403784439,-23.382685902179844,0.866025403784439,0.000000000000000,0.000000000000000,23.382685902179844,-0.866025403784439,-4.330127018922193,-0.866025403784439,0.000000000000000,0.000000000000000,-30.310889132455351,0.866025403784437,-58.023702053557386,0.866025403784441,0.000000000000000,0.000000000000000,58.023702053557386,-0.866025403784441,30.310889132455351,-0.866025403784437};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,6,2));
ResRA = new double[]{7.916666666666667,-0.416666666666667,-3.791666666666667,0.041666666666667,-0.208333333333333,-0.041666666666667,1.583333333333334,-0.083333333333333,-0.208333333333333,-0.041666666666667,-3.791666666666667,0.041666666666667,24.583333333333336,-0.416666666666666,-5.458333333333334,0.041666666666667,1.458333333333334,-0.041666666666667,4.916666666666666,-0.083333333333333,1.458333333333334,-0.041666666666667,-5.458333333333334,0.041666666666667};
ResRA.Reshape(new ILDimension(2,6,2));
ResIAR = new double[]{7.916666666666667,-0.416666666666667,-3.791666666666667,0.041666666666667,-0.208333333333333,-0.041666666666667,1.583333333333334,-0.083333333333333,-0.208333333333333,-0.041666666666667,-3.791666666666667,0.041666666666667,24.583333333333336,-0.416666666666666,-5.458333333333334,0.041666666666667,1.458333333333334,-0.041666666666667,4.916666666666666,-0.083333333333333,1.458333333333334,-0.041666666666667,-5.458333333333334,0.041666666666667};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.360843918243516,-0.072168783648703,1.948557158514987,-0.072168783648703,0.000000000000000,0.000000000000000,-1.948557158514987,0.072168783648703,0.360843918243516,0.072168783648703,0.000000000000000,0.000000000000000,2.525907427704612,-0.072168783648703,4.835308504463116,-0.072168783648703,0.000000000000000,0.000000000000000,-4.835308504463116,0.072168783648703,-2.525907427704612,0.072168783648703};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,6);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,18.000000000000000,-1.500000000000000,-1.500000000000000,30.000000000000000,-1.500000000000000,-1.500000000000000,42.000000000000000,-1.500000000000000,-1.500000000000000,54.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,78.000000000000000,-1.500000000000000,-1.500000000000000,90.000000000000000,-1.500000000000000,-1.500000000000000,102.000000000000000,-1.500000000000000,-1.500000000000000,114.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,2));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1,2));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{24.000000000000000,-3.000000000000000,-3.000000000000000,-12.000000000000000,0.000000000000000,0.000000000000000,144.000000000000000,-3.000000000000000,-3.000000000000000,-12.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,2));
ResRA = new double[]{4.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2,2));
ResIAR = new double[]{4.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{54.000000000000000,-4.500000000000000,-4.500000000000000,-18.000000000000000,0.000000000000000,0.000000000000000,-18.000000000000000,0.000000000000000,0.000000000000000,234.000000000000000,-4.500000000000000,-4.500000000000000,-18.000000000000000,0.000000000000000,0.000000000000000,-18.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316,10.392304845413264,0.000000000000000,0.000000000000000,-10.392304845413264,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,10.392304845413264,0.000000000000000,0.000000000000000,-10.392304845413264,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,2));
ResRA = new double[]{6.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,26.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3,2));
ResIAR = new double[]{6.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,26.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-1.154700538379252,0.000000000000000,0.000000000000000,1.154700538379252,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.154700538379252,0.000000000000000,0.000000000000000,1.154700538379252,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{96.000000000000000,-6.000000000000000,-6.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,336.000000000000000,-6.000000000000000,-6.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,2));
ResRA = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,4,2));
ResIAR = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new double[]{150.000000000000000,-7.500000000000000,-7.500000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,450.000000000000000,-7.500000000000000,-7.500000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,4.330127018922193,-4.330127018922193,41.291457614135197,0.000000000000000,0.000000000000000,9.747590886987190,0.000000000000000,0.000000000000000,-9.747590886987190,0.000000000000000,0.000000000000000,-41.291457614135197,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,-4.330127018922193,41.291457614135197,0.000000000000000,0.000000000000000,9.747590886987190,0.000000000000000,0.000000000000000,-9.747590886987190,0.000000000000000,0.000000000000000,-41.291457614135197,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,2));
ResRA = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,5,2));
ResIAR = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-2.752763840942347,0.000000000000000,0.000000000000000,-0.649839392465813,0.000000000000000,0.000000000000000,0.649839392465813,0.000000000000000,0.000000000000000,2.752763840942347,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.752763840942347,0.000000000000000,0.000000000000000,-0.649839392465813,0.000000000000000,0.000000000000000,0.649839392465813,0.000000000000000,0.000000000000000,2.752763840942347,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new double[]{150.000000000000000,-7.500000000000000,-7.500000000000000,-69.000000000000000,1.500000000000000,0.000000000000000,-3.000000000000000,-0.000000000000001,-1.499999999999999,30.000000000000000,-1.500000000000000,-1.500000000000000,-3.000000000000000,-1.499999999999999,-0.000000000000001,-69.000000000000000,0.000000000000000,1.500000000000000,450.000000000000000,-7.500000000000000,-7.500000000000000,-99.000000000000000,1.500000000000000,-0.000000000000000,27.000000000000000,-0.000000000000001,-1.499999999999999,90.000000000000000,-1.500000000000000,-1.500000000000000,27.000000000000000,-1.499999999999999,-0.000000000000001,-99.000000000000000,-0.000000000000000,1.500000000000000};
ResultI = new double[]{0.000000000000000,4.330127018922193,-4.330127018922193,5.196152422706632,0.866025403784439,1.732050807568877,-36.373066958946424,1.732050807568877,0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,36.373066958946424,-0.866025403784439,-1.732050807568877,-5.196152422706632,-1.732050807568877,-0.866025403784439,0.000000000000000,4.330127018922193,-4.330127018922193,-46.765371804359681,0.866025403784437,1.732050807568875,-88.334591186012744,1.732050807568881,0.866025403784442,0.000000000000000,0.866025403784439,-0.866025403784439,88.334591186012744,-0.866025403784442,-1.732050807568881,46.765371804359681,-1.732050807568875,-0.866025403784437};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,6,2));
ResRA = new double[]{8.333333333333334,-0.416666666666667,-0.416666666666667,-3.833333333333334,0.083333333333333,0.000000000000000,-0.166666666666667,-0.000000000000000,-0.083333333333333,1.666666666666667,-0.083333333333333,-0.083333333333333,-0.166666666666667,-0.083333333333333,-0.000000000000000,-3.833333333333334,0.000000000000000,0.083333333333333,25.000000000000000,-0.416666666666665,-0.416666666666665,-5.500000000000000,0.083333333333333,-0.000000000000000,1.500000000000000,0.000000000000000,-0.083333333333333,5.000000000000000,-0.083333333333334,-0.083333333333334,1.500000000000000,-0.083333333333333,0.000000000000000,-5.500000000000000,-0.000000000000000,0.083333333333333};
ResRA.Reshape(new ILDimension(3,6,2));
ResIAR = new double[]{8.333333333333334,-0.416666666666667,-0.416666666666667,-3.833333333333334,0.083333333333333,0.000000000000000,-0.166666666666667,-0.000000000000000,-0.083333333333333,1.666666666666667,-0.083333333333333,-0.083333333333333,-0.166666666666667,-0.083333333333333,-0.000000000000000,-3.833333333333334,0.000000000000000,0.083333333333333,25.000000000000000,-0.416666666666665,-0.416666666666665,-5.500000000000000,0.083333333333333,-0.000000000000000,1.500000000000000,0.000000000000000,-0.083333333333333,5.000000000000000,-0.083333333333334,-0.083333333333334,1.500000000000000,-0.083333333333333,0.000000000000000,-5.500000000000000,-0.000000000000000,0.083333333333333};
ResIAI = new double[]{0.000000000000000,-0.240562612162344,0.240562612162344,-0.288675134594813,-0.048112522432469,-0.096225044864938,2.020725942163690,-0.096225044864938,-0.048112522432469,0.000000000000000,-0.048112522432469,0.048112522432469,-2.020725942163690,0.048112522432469,0.096225044864938,0.288675134594813,0.096225044864938,0.048112522432469,0.000000000000000,-0.240562612162344,0.240562612162344,2.598076211353316,-0.048112522432469,-0.096225044864937,4.907477288111818,-0.096225044864938,-0.048112522432469,0.000000000000000,-0.048112522432469,0.048112522432469,-4.907477288111818,0.048112522432469,0.096225044864938,-2.598076211353316,0.096225044864937,0.048112522432469};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,6);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,26.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,42.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,58.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,74.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,106.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,122.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,138.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,154.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,2));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,2));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{36.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-16.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,196.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-16.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,2));
ResRA = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2,2));
ResIAR = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{78.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,318.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-24.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,13.856406460551018,0.000000000000000,0.000000000000000,0.000000000000000,-13.856406460551018,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,13.856406460551018,0.000000000000000,0.000000000000000,0.000000000000000,-13.856406460551018,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,2));
ResRA = new double[]{6.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,3,2));
ResIAR = new double[]{6.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.154700538379252,0.000000000000000,0.000000000000000,0.000000000000000,1.154700538379252,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.154700538379252,0.000000000000000,0.000000000000000,0.000000000000000,1.154700538379252,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new double[]{136.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,456.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-32.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,2));
ResRA = new double[]{8.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,4,2));
ResIAR = new double[]{8.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,55.055276818846934,0.000000000000000,0.000000000000000,0.000000000000000,12.996787849316254,0.000000000000000,0.000000000000000,0.000000000000000,-12.996787849316254,0.000000000000000,0.000000000000000,0.000000000000000,-55.055276818846934,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,55.055276818846934,0.000000000000000,0.000000000000000,0.000000000000000,12.996787849316254,0.000000000000000,0.000000000000000,0.000000000000000,-12.996787849316254,0.000000000000000,0.000000000000000,0.000000000000000,-55.055276818846934,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,5,2));
ResIAR = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.752763840942347,0.000000000000000,0.000000000000000,0.000000000000000,-0.649839392465813,0.000000000000000,0.000000000000000,0.000000000000000,0.649839392465813,0.000000000000000,0.000000000000000,0.000000000000000,2.752763840942347,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.752763840942347,0.000000000000000,0.000000000000000,0.000000000000000,-0.649839392465813,0.000000000000000,0.000000000000000,0.000000000000000,0.649839392465813,0.000000000000000,0.000000000000000,0.000000000000000,2.752763840942347,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-93.000000000000000,2.732050807568877,1.000000000000000,-0.732050807568877,-3.000000000000000,0.732050807568877,-1.000000000000000,-2.732050807568877,42.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-3.000000000000000,-2.732050807568877,-1.000000000000000,0.732050807568877,-93.000000000000000,-0.732050807568877,1.000000000000000,2.732050807568877,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-133.000000000000000,2.732050807568877,1.000000000000000,-0.732050807568877,37.000000000000000,0.732050807568875,-1.000000000000000,-2.732050807568875,122.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,37.000000000000000,-2.732050807568875,-1.000000000000000,0.732050807568875,-133.000000000000000,-0.732050807568877,1.000000000000000,2.732050807568877};
ResultI = new double[]{0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,5.196152422706632,0.732050807568877,1.732050807568877,2.732050807568878,-50.229473419497438,2.732050807568877,1.732050807568882,0.732050807568877,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,50.229473419497438,-0.732050807568877,-1.732050807568882,-2.732050807568877,-5.196152422706632,-2.732050807568878,-1.732050807568877,-0.732050807568877,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,-64.085879880048452,0.732050807568877,1.732050807568875,2.732050807568877,-119.511505722252520,2.732050807568879,1.732050807568882,0.732050807568879,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,119.511505722252520,-0.732050807568879,-1.732050807568882,-2.732050807568879,64.085879880048452,-2.732050807568877,-1.732050807568875,-0.732050807568877};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,6,2));
ResRA = new double[]{8.750000000000000,-0.416666666666667,-0.416666666666668,-0.416666666666667,-3.875000000000000,0.113835450315370,0.041666666666667,-0.030502116982037,-0.125000000000000,0.030502116982036,-0.041666666666667,-0.113835450315370,1.750000000000000,-0.083333333333333,-0.083333333333333,-0.083333333333333,-0.125000000000000,-0.113835450315370,-0.041666666666667,0.030502116982036,-3.875000000000000,-0.030502116982037,0.041666666666667,0.113835450315370,25.416666666666668,-0.416666666666666,-0.416666666666668,-0.416666666666666,-5.541666666666667,0.113835450315370,0.041666666666667,-0.030502116982037,1.541666666666667,0.030502116982036,-0.041666666666667,-0.113835450315370,5.083333333333333,-0.083333333333333,-0.083333333333333,-0.083333333333333,1.541666666666667,-0.113835450315370,-0.041666666666667,0.030502116982036,-5.541666666666667,-0.030502116982037,0.041666666666667,0.113835450315370};
ResRA.Reshape(new ILDimension(4,6,2));
ResIAR = new double[]{8.750000000000000,-0.416666666666667,-0.416666666666668,-0.416666666666667,-3.875000000000000,0.113835450315370,0.041666666666667,-0.030502116982037,-0.125000000000000,0.030502116982036,-0.041666666666667,-0.113835450315370,1.750000000000000,-0.083333333333333,-0.083333333333333,-0.083333333333333,-0.125000000000000,-0.113835450315370,-0.041666666666667,0.030502116982036,-3.875000000000000,-0.030502116982037,0.041666666666667,0.113835450315370,25.416666666666668,-0.416666666666666,-0.416666666666668,-0.416666666666666,-5.541666666666667,0.113835450315370,0.041666666666667,-0.030502116982037,1.541666666666667,0.030502116982036,-0.041666666666667,-0.113835450315370,5.083333333333333,-0.083333333333333,-0.083333333333333,-0.083333333333333,1.541666666666667,-0.113835450315370,-0.041666666666667,0.030502116982036,-5.541666666666667,-0.030502116982037,0.041666666666667,0.113835450315370};
ResIAI = new double[]{0.000000000000000,-0.416666666666667,0.000000000000000,0.416666666666667,-0.216506350946110,-0.030502116982037,-0.072168783648703,-0.113835450315370,2.092894725812393,-0.113835450315370,-0.072168783648703,-0.030502116982037,0.000000000000000,-0.083333333333333,0.000000000000000,0.083333333333333,-2.092894725812393,0.030502116982037,0.072168783648703,0.113835450315370,0.216506350946110,0.113835450315370,0.072168783648703,0.030502116982037,0.000000000000000,-0.416666666666667,0.000000000000000,0.416666666666667,2.670244995002019,-0.030502116982036,-0.072168783648703,-0.113835450315370,4.979646071760522,-0.113835450315370,-0.072168783648703,-0.030502116982037,0.000000000000000,-0.083333333333333,0.000000000000000,0.083333333333333,-4.979646071760522,0.030502116982037,0.072168783648703,0.113835450315370,-2.670244995002019,0.113835450315370,0.072168783648703,0.030502116982036};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,6);
ResultR = new double[]{10.000000000000000,-4.045084971874737,1.545084971874737,1.545084971874737,-4.045084971874737,26.000000000000000,-5.281152949374527,4.781152949374527,4.781152949374527,-5.281152949374527,42.000000000000000,-6.517220926874317,8.017220926874316,8.017220926874316,-6.517220926874317,58.000000000000000,-7.753288904374106,11.253288904374106,11.253288904374106,-7.753288904374106,74.000000000000000,-8.989356881873896,14.489356881873896,14.489356881873896,-8.989356881873896,90.000000000000000,-10.225424859373685,17.725424859373685,17.725424859373685,-10.225424859373685,106.000000000000000,-11.461492836873475,20.961492836873475,20.961492836873475,-11.461492836873475,122.000000000000000,-12.697560814373265,24.197560814373265,24.197560814373265,-12.697560814373265,138.000000000000000,-13.933628791873055,27.433628791873055,27.433628791873055,-13.933628791873055,154.000000000000000,-15.169696769372845,30.669696769372845,30.669696769372845,-15.169696769372845};
ResultI = new double[]{0.000000000000000,-1.314327780297834,-2.126627020880100,2.126627020880100,1.314327780297834,0.000000000000000,-5.118553845478448,-4.477768030049992,4.477768030049992,5.118553845478448,0.000000000000000,-8.922779910659061,-6.828909039219886,6.828909039219886,8.922779910659061,0.000000000000000,-12.727005975839676,-9.180050048389777,9.180050048389777,12.727005975839676,0.000000000000000,-16.531232041020289,-11.531191057559671,11.531191057559671,16.531232041020289,0.000000000000000,-20.335458106200903,-13.882332066729562,13.882332066729562,20.335458106200903,0.000000000000000,-24.139684171381518,-16.233473075899454,16.233473075899454,24.139684171381518,0.000000000000000,-27.943910236562132,-18.584614085069347,18.584614085069347,27.943910236562132,0.000000000000000,-31.748136301742743,-20.935755094239241,20.935755094239241,31.748136301742743,0.000000000000000,-35.552362366923361,-23.286896103409134,23.286896103409134,35.552362366923361};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{10.000000000000000,-4.045084971874737,1.545084971874737,1.545084971874737,-4.045084971874737,90.000000000000000,-10.225424859373685,17.725424859373685,17.725424859373685,-10.225424859373685};
ResultI = new double[]{0.000000000000000,-1.314327780297834,-2.126627020880100,2.126627020880100,1.314327780297834,0.000000000000000,-20.335458106200903,-13.882332066729562,13.882332066729562,20.335458106200903};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,2));
ResRA = new double[]{2.000000000000000,-0.809016994374947,0.309016994374947,0.309016994374948,-0.809016994374947,18.000000000000000,-2.045084971874737,3.545084971874737,3.545084971874737,-2.045084971874737};
ResRA.Reshape(new ILDimension(5,1,2));
ResIAR = new double[]{2.000000000000000,-0.809016994374947,0.309016994374947,0.309016994374948,-0.809016994374947,18.000000000000000,-2.045084971874737,3.545084971874737,3.545084971874737,-2.045084971874737};
ResIAI = new double[]{0.000000000000000,0.262865556059567,0.425325404176020,-0.425325404176020,-0.262865556059567,0.000000000000000,4.067091621240181,2.776466413345912,-2.776466413345912,-4.067091621240181};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{36.000000000000000,-9.326237921249264,6.326237921249264,6.326237921249264,-9.326237921249264,-16.000000000000000,1.236067977499790,-3.236067977499790,-3.236067977499790,1.236067977499790,196.000000000000000,-21.686917696247164,38.686917696247164,38.686917696247164,-21.686917696247164,-16.000000000000000,1.236067977499790,-3.236067977499790,-3.236067977499790,1.236067977499790};
ResultI = new double[]{0.000000000000000,-6.432881625776282,-6.604395050930092,6.604395050930092,6.432881625776282,0.000000000000000,3.804226065180614,2.351141009169893,-2.351141009169893,-3.804226065180614,0.000000000000000,-44.475142277582421,-30.115805142629018,30.115805142629018,44.475142277582421,0.000000000000000,3.804226065180614,2.351141009169893,-2.351141009169893,-3.804226065180614};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,2));
ResRA = new double[]{3.600000000000000,-0.932623792124926,0.632623792124926,0.632623792124926,-0.932623792124926,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979,19.600000000000001,-2.168691769624716,3.868691769624717,3.868691769624717,-2.168691769624716,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979};
ResRA.Reshape(new ILDimension(5,2,2));
ResIAR = new double[]{3.600000000000000,-0.932623792124926,0.632623792124926,0.632623792124926,-0.932623792124926,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979,19.600000000000001,-2.168691769624716,3.868691769624717,3.868691769624717,-2.168691769624716,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979};
ResIAI = new double[]{0.000000000000000,0.643288162577628,0.660439505093009,-0.660439505093009,-0.643288162577628,0.000000000000000,-0.380422606518061,-0.235114100916989,0.235114100916989,0.380422606518061,0.000000000000000,4.447514227758243,3.011580514262902,-3.011580514262902,-4.447514227758243,0.000000000000000,-0.380422606518061,-0.235114100916989,0.235114100916989,0.380422606518061};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{78.000000000000000,-15.843458848123582,14.343458848123582,14.343458848123582,-15.843458848123582,-24.000000000000000,5.148658380435013,-2.817954124429176,-6.890249808070193,-1.440454447935643,-24.000000000000000,-1.440454447935643,-6.890249808070193,-2.817954124429176,5.148658380435013,318.000000000000000,-34.384478510620426,62.884478510620426,62.884478510620426,-34.384478510620426,-24.000000000000000,5.148658380435013,-2.817954124429176,-6.890249808070193,-1.440454447935643,-24.000000000000000,-1.440454447935643,-6.890249808070193,-2.817954124429176,5.148658380435013};
ResultI = new double[]{0.000000000000000,-15.355661536435342,-13.433304090149978,13.433304090149978,15.355661536435342,13.856406460551018,4.635872828451651,6.329228590642986,-0.724194436866692,-6.776805367090191,-13.856406460551018,6.776805367090191,0.724194436866692,-6.329228590642986,-4.635872828451651,0.000000000000000,-72.419052514144553,-48.700419227698369,48.700419227698369,72.419052514144553,13.856406460551018,4.635872828451651,6.329228590642986,-0.724194436866692,-6.776805367090191,-13.856406460551018,6.776805367090191,0.724194436866692,-6.329228590642986,-4.635872828451651};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,2));
ResRA = new double[]{5.200000000000000,-1.056230589874905,0.956230589874905,0.956230589874905,-1.056230589874905,-1.600000000000000,0.343243892029001,-0.187863608295278,-0.459349987204680,-0.096030296529043,-1.600000000000000,-0.096030296529043,-0.459349987204680,-0.187863608295278,0.343243892029001,21.199999999999999,-2.292298567374695,4.192298567374695,4.192298567374695,-2.292298567374695,-1.600000000000000,0.343243892029001,-0.187863608295278,-0.459349987204680,-0.096030296529043,-1.600000000000000,-0.096030296529043,-0.459349987204680,-0.187863608295278,0.343243892029001};
ResRA.Reshape(new ILDimension(5,3,2));
ResIAR = new double[]{5.200000000000000,-1.056230589874905,0.956230589874905,0.956230589874905,-1.056230589874905,-1.600000000000000,0.343243892029001,-0.187863608295278,-0.459349987204680,-0.096030296529043,-1.600000000000000,-0.096030296529043,-0.459349987204680,-0.187863608295278,0.343243892029001,21.199999999999999,-2.292298567374695,4.192298567374695,4.192298567374695,-2.292298567374695,-1.600000000000000,0.343243892029001,-0.187863608295278,-0.459349987204680,-0.096030296529043,-1.600000000000000,-0.096030296529043,-0.459349987204680,-0.187863608295278,0.343243892029001};
ResIAI = new double[]{0.000000000000000,1.023710769095690,0.895553606009998,-0.895553606009998,-1.023710769095690,-0.923760430703401,-0.309058188563443,-0.421948572709532,0.048279629124446,0.451787024472679,0.923760430703401,-0.451787024472679,-0.048279629124446,0.421948572709532,0.309058188563443,0.000000000000000,4.827936834276303,3.246694615179891,-3.246694615179891,-4.827936834276303,-0.923760430703401,-0.309058188563443,-0.421948572709532,0.048279629124446,0.451787024472679,0.923760430703401,-0.451787024472679,-0.048279629124446,0.421948572709532,0.309058188563443};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new double[]{136.000000000000000,-23.596747752497688,25.596747752497688,25.596747752497688,-23.596747752497688,-32.000000000000000,10.080588085360809,-1.769853936659795,-11.174417973339365,-5.136316175361649,-32.000000000000000,2.472135954999580,-6.472135954999580,-6.472135954999580,2.472135954999580,-32.000000000000000,-5.136316175361649,-11.174417973339365,-1.769853936659795,10.080588085360809,456.000000000000000,-48.318107302493488,90.318107302493488,90.318107302493488,-48.318107302493488,-32.000000000000000,10.080588085360809,-1.769853936659795,-11.174417973339365,-5.136316175361649,-32.000000000000000,2.472135954999580,-6.472135954999580,-6.472135954999580,2.472135954999580,-32.000000000000000,-5.136316175361649,-11.174417973339365,-1.769853936659795,10.080588085360809};
ResultI = new double[]{0.000000000000000,-28.082667512275020,-22.613354138539755,22.613354138539755,28.082667512275020,32.000000000000000,5.136316175361649,11.174417973339365,1.769853936659795,-10.080588085360809,0.000000000000000,7.608452130361228,4.702282018339785,-4.702282018339785,-7.608452130361228,-32.000000000000000,10.080588085360809,-1.769853936659795,-11.174417973339365,-5.136316175361649,0.000000000000000,-104.167188815887300,-69.636174321937602,69.636174321937602,104.167188815887300,32.000000000000000,5.136316175361649,11.174417973339365,1.769853936659795,-10.080588085360809,0.000000000000000,7.608452130361228,4.702282018339785,-4.702282018339785,-7.608452130361228,-32.000000000000000,10.080588085360809,-1.769853936659795,-11.174417973339365,-5.136316175361649};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,2));
ResRA = new double[]{6.800000000000000,-1.179837387624884,1.279837387624884,1.279837387624884,-1.179837387624884,-1.600000000000000,0.504029404268040,-0.088492696832990,-0.558720898666968,-0.256815808768082,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979,-1.600000000000000,-0.256815808768082,-0.558720898666968,-0.088492696832990,0.504029404268040,22.800000000000001,-2.415905365124675,4.515905365124675,4.515905365124675,-2.415905365124675,-1.600000000000000,0.504029404268040,-0.088492696832990,-0.558720898666968,-0.256815808768082,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979,-1.600000000000000,-0.256815808768082,-0.558720898666968,-0.088492696832990,0.504029404268040};
ResRA.Reshape(new ILDimension(5,4,2));
ResIAR = new double[]{6.800000000000000,-1.179837387624884,1.279837387624884,1.279837387624884,-1.179837387624884,-1.600000000000000,0.504029404268040,-0.088492696832990,-0.558720898666968,-0.256815808768082,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979,-1.600000000000000,-0.256815808768082,-0.558720898666968,-0.088492696832990,0.504029404268040,22.800000000000001,-2.415905365124675,4.515905365124675,4.515905365124675,-2.415905365124675,-1.600000000000000,0.504029404268040,-0.088492696832990,-0.558720898666968,-0.256815808768082,-1.600000000000000,0.123606797749979,-0.323606797749979,-0.323606797749979,0.123606797749979,-1.600000000000000,-0.256815808768082,-0.558720898666968,-0.088492696832990,0.504029404268040};
ResIAI = new double[]{0.000000000000000,1.404133375613751,1.130667706926988,-1.130667706926988,-1.404133375613751,-1.600000000000000,-0.256815808768082,-0.558720898666968,-0.088492696832990,0.504029404268040,0.000000000000000,-0.380422606518061,-0.235114100916989,0.235114100916989,0.380422606518061,1.600000000000000,-0.504029404268040,0.088492696832990,0.558720898666968,0.256815808768082,0.000000000000000,5.208359440794365,3.481808716096880,-3.481808716096880,-5.208359440794365,-1.600000000000000,-0.256815808768082,-0.558720898666968,-0.088492696832990,0.504029404268040,0.000000000000000,-0.380422606518061,-0.235114100916989,0.235114100916989,0.380422606518061,1.600000000000000,-0.504029404268040,0.088492696832990,0.558720898666968,0.256815808768082};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new double[]{210.000000000000000,-32.586104634371587,40.086104634371587,40.086104634371587,-32.586104634371587,-40.000000000000000,16.180339887498945,-0.000000000000002,-16.180339887498945,-9.999999999999998,-40.000000000000000,6.180339887498949,-6.180339887498949,-10.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,-10.000000000000000,-6.180339887498949,6.180339887498949,-40.000000000000000,-9.999999999999998,-16.180339887498945,-0.000000000000002,16.180339887498945,610.000000000000000,-63.487804071866336,120.987804071866340,120.987804071866340,-63.487804071866336,-40.000000000000000,16.180339887498945,-0.000000000000002,-16.180339887498945,-9.999999999999998,-40.000000000000000,6.180339887498949,-6.180339887498949,-10.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,-10.000000000000000,-6.180339887498949,6.180339887498949,-40.000000000000000,-9.999999999999998,-16.180339887498945,-0.000000000000002,16.180339887498945};
ResultI = new double[]{0.000000000000000,-44.613899553295312,-34.144545196099422,34.144545196099422,44.613899553295312,55.055276818846934,5.257311121191336,17.013016167040799,5.257311121191336,-13.763819204711734,12.996787849316254,8.506508083520398,8.506508083520401,-3.249196962329063,-10.514622242382671,-12.996787849316254,10.514622242382671,3.249196962329063,-8.506508083520401,-8.506508083520398,-55.055276818846934,13.763819204711734,-5.257311121191336,-17.013016167040799,-5.257311121191336,0.000000000000000,-139.719551182810650,-92.923070425346737,92.923070425346737,139.719551182810650,55.055276818846934,5.257311121191336,17.013016167040799,5.257311121191336,-13.763819204711734,12.996787849316254,8.506508083520398,8.506508083520401,-3.249196962329063,-10.514622242382671,-12.996787849316254,10.514622242382671,3.249196962329063,-8.506508083520401,-8.506508083520398,-55.055276818846934,13.763819204711734,-5.257311121191336,-17.013016167040799,-5.257311121191336};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,2));
ResRA = new double[]{8.400000000000000,-1.303444185374863,1.603444185374863,1.603444185374863,-1.303444185374863,-1.600000000000000,0.647213595499958,-0.000000000000000,-0.647213595499958,-0.400000000000000,-1.600000000000000,0.247213595499958,-0.247213595499958,-0.400000000000000,0.000000000000000,-1.600000000000000,0.000000000000000,-0.400000000000000,-0.247213595499958,0.247213595499958,-1.600000000000000,-0.400000000000000,-0.647213595499958,-0.000000000000000,0.647213595499958,24.399999999999999,-2.539512162874653,4.839512162874653,4.839512162874653,-2.539512162874653,-1.600000000000000,0.647213595499958,-0.000000000000000,-0.647213595499958,-0.400000000000000,-1.600000000000000,0.247213595499958,-0.247213595499958,-0.400000000000000,0.000000000000000,-1.600000000000000,0.000000000000000,-0.400000000000000,-0.247213595499958,0.247213595499958,-1.600000000000000,-0.400000000000000,-0.647213595499958,-0.000000000000000,0.647213595499958};
ResRA.Reshape(new ILDimension(5,5,2));
ResIAR = new double[]{8.400000000000000,-1.303444185374863,1.603444185374863,1.603444185374863,-1.303444185374863,-1.600000000000000,0.647213595499958,-0.000000000000000,-0.647213595499958,-0.400000000000000,-1.600000000000000,0.247213595499958,-0.247213595499958,-0.400000000000000,0.000000000000000,-1.600000000000000,0.000000000000000,-0.400000000000000,-0.247213595499958,0.247213595499958,-1.600000000000000,-0.400000000000000,-0.647213595499958,-0.000000000000000,0.647213595499958,24.399999999999999,-2.539512162874653,4.839512162874653,4.839512162874653,-2.539512162874653,-1.600000000000000,0.647213595499958,-0.000000000000000,-0.647213595499958,-0.400000000000000,-1.600000000000000,0.247213595499958,-0.247213595499958,-0.400000000000000,0.000000000000000,-1.600000000000000,0.000000000000000,-0.400000000000000,-0.247213595499958,0.247213595499958,-1.600000000000000,-0.400000000000000,-0.647213595499958,-0.000000000000000,0.647213595499958};
ResIAI = new double[]{0.000000000000000,1.784555982131812,1.365781807843977,-1.365781807843977,-1.784555982131812,-2.202211072753877,-0.210292444847653,-0.680520646681632,-0.210292444847653,0.550552768188469,-0.519871513972650,-0.340260323340816,-0.340260323340816,0.129967878493163,0.420584889695307,0.519871513972650,-0.420584889695307,-0.129967878493163,0.340260323340816,0.340260323340816,2.202211072753877,-0.550552768188469,0.210292444847653,0.680520646681632,0.210292444847653,0.000000000000000,5.588782047312426,3.716922817013869,-3.716922817013869,-5.588782047312426,-2.202211072753877,-0.210292444847653,-0.680520646681632,-0.210292444847653,0.550552768188469,-0.519871513972650,-0.340260323340816,-0.340260323340816,0.129967878493163,0.420584889695307,0.519871513972650,-0.420584889695307,-0.129967878493163,0.340260323340816,0.340260323340816,2.202211072753877,-0.550552768188469,0.210292444847653,0.680520646681632,0.210292444847653};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new double[]{210.000000000000000,-32.586104634371587,40.086104634371587,40.086104634371587,-32.586104634371587,-93.000000000000000,10.977231529734002,-18.376481544822287,-18.765351179550134,6.664601194638421,-3.000000000000000,-12.426418986380993,-8.795648052730639,7.104665047105586,9.617401992006046,42.000000000000000,-6.517220926874317,8.017220926874316,8.017220926874316,-6.517220926874317,-3.000000000000000,9.617401992006046,7.104665047105586,-8.795648052730639,-12.426418986380993,-93.000000000000000,6.664601194638421,-18.765351179550134,-18.376481544822287,10.977231529734002,610.000000000000000,-63.487804071866336,120.987804071866340,120.987804071866340,-63.487804071866336,-133.000000000000000,-2.405380597443159,-36.647390697674304,-16.674781914197069,26.227553209314532,37.000000000000000,-31.989371001057105,-10.886217318083705,25.375574199957601,23.000014119183209,122.000000000000000,-12.697560814373265,24.197560814373265,24.197560814373265,-12.697560814373265,37.000000000000000,23.000014119183209,25.375574199957601,-10.886217318083705,-31.989371001057105,-133.000000000000000,26.227553209314532,-16.674781914197069,-36.647390697674304,-2.405380597443159};
ResultI = new double[]{0.000000000000000,-44.613899553295312,-34.144545196099422,34.144545196099422,44.613899553295312,5.196152422706632,24.013087325433208,15.459023301113518,-12.530154820635399,-19.147727171851383,-50.229473419497438,7.959494296509382,-9.633377073168632,-9.857891061458425,5.469596011626601,0.000000000000000,-8.922779910659061,-6.828909039219886,6.828909039219886,8.922779910659061,50.229473419497438,-5.469596011626601,9.857891061458425,9.633377073168632,-7.959494296509382,-5.196152422706632,19.147727171851383,12.530154820635399,-15.459023301113518,-24.013087325433208,0.000000000000000,-139.719551182810650,-92.923070425346737,92.923070425346737,139.719551182810650,-64.085879880048466,38.875983834981099,7.324290439597515,-32.420592728000869,-23.305960988206568,-119.511505722252520,3.801260480154195,-29.523814980534098,-17.992623922974424,20.332492521174483,0.000000000000000,-27.943910236562132,-18.584614085069347,18.584614085069347,27.943910236562132,119.511505722252520,-20.332492521174483,17.992623922974424,29.523814980534098,-3.801260480154195,64.085879880048466,23.305960988206568,32.420592728000869,-7.324290439597515,-38.875983834981099};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,6,2));
ResRA = new double[]{7.000000000000000,-1.086203487812386,1.336203487812386,1.336203487812386,-1.086203487812386,-3.100000000000000,0.365907717657800,-0.612549384827410,-0.625511705985004,0.222153373154614,-0.100000000000000,-0.414213966212700,-0.293188268424355,0.236822168236853,0.320580066400202,1.400000000000000,-0.217240697562477,0.267240697562477,0.267240697562477,-0.217240697562477,-0.100000000000000,0.320580066400202,0.236822168236853,-0.293188268424355,-0.414213966212700,-3.100000000000000,0.222153373154614,-0.625511705985004,-0.612549384827410,0.365907717657800,20.333333333333336,-2.116260135728878,4.032926802395545,4.032926802395545,-2.116260135728878,-4.433333333333334,-0.080179353248105,-1.221579689922477,-0.555826063806569,0.874251773643818,1.233333333333333,-1.066312366701903,-0.362873910602790,0.845852473331920,0.766667137306107,4.066666666666666,-0.423252027145776,0.806585360479109,0.806585360479109,-0.423252027145776,1.233333333333333,0.766667137306107,0.845852473331920,-0.362873910602790,-1.066312366701903,-4.433333333333334,0.874251773643818,-0.555826063806569,-1.221579689922477,-0.080179353248105};
ResRA.Reshape(new ILDimension(5,6,2));
ResIAR = new double[]{7.000000000000000,-1.086203487812386,1.336203487812386,1.336203487812386,-1.086203487812386,-3.100000000000000,0.365907717657800,-0.612549384827410,-0.625511705985004,0.222153373154614,-0.100000000000000,-0.414213966212700,-0.293188268424355,0.236822168236853,0.320580066400202,1.400000000000000,-0.217240697562477,0.267240697562477,0.267240697562477,-0.217240697562477,-0.100000000000000,0.320580066400202,0.236822168236853,-0.293188268424355,-0.414213966212700,-3.100000000000000,0.222153373154614,-0.625511705985004,-0.612549384827410,0.365907717657800,20.333333333333336,-2.116260135728878,4.032926802395545,4.032926802395545,-2.116260135728878,-4.433333333333334,-0.080179353248105,-1.221579689922477,-0.555826063806569,0.874251773643818,1.233333333333333,-1.066312366701903,-0.362873910602790,0.845852473331920,0.766667137306107,4.066666666666666,-0.423252027145776,0.806585360479109,0.806585360479109,-0.423252027145776,1.233333333333333,0.766667137306107,0.845852473331920,-0.362873910602790,-1.066312366701903,-4.433333333333334,0.874251773643818,-0.555826063806569,-1.221579689922477,-0.080179353248105};
ResIAI = new double[]{0.000000000000000,1.487129985109844,1.138151506536647,-1.138151506536647,-1.487129985109844,-0.173205080756888,-0.800436244181107,-0.515300776703784,0.417671827354513,0.638257572395046,1.674315780649915,-0.265316476550313,0.321112569105621,0.328596368715281,-0.182319867054220,0.000000000000000,0.297425997021969,0.227630301307330,-0.227630301307330,-0.297425997021969,-1.674315780649915,0.182319867054220,-0.328596368715281,-0.321112569105621,0.265316476550313,0.173205080756888,-0.638257572395046,-0.417671827354513,0.515300776703784,0.800436244181107,0.000000000000000,4.657318372760355,3.097435680844892,-3.097435680844892,-4.657318372760355,2.136195996001615,-1.295866127832703,-0.244143014653251,1.080686424266696,0.776865366273552,3.983716857408417,-0.126708682671807,0.984127166017803,0.599754130765814,-0.677749750705816,0.000000000000000,0.931463674552071,0.619487136168978,-0.619487136168978,-0.931463674552071,-3.983716857408417,0.677749750705816,-0.599754130765814,-0.984127166017803,0.126708682671807,-2.136195996001615,-0.776865366273552,-1.080686424266696,0.244143014653251,1.295866127832703};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,6);
}
private static void TEST_FFT_double_complex_8() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000};
A.Reshape(new ILDimension(3,1,3));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{1.000000000000000,4.000000000000000,7.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,4.000000000000000,7.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new double[]{1.000000000000000,4.000000000000000,7.000000000000000};
ResRA.Reshape(new ILDimension(1,1,3));
ResIAR = new double[]{1.000000000000000,4.000000000000000,7.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{1.000000000000000,1.000000000000000,4.000000000000000,4.000000000000000,7.000000000000000,7.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new double[]{0.500000000000000,0.500000000000000,2.000000000000000,2.000000000000000,3.500000000000000,3.500000000000000};
ResRA.Reshape(new ILDimension(1,2,3));
ResIAR = new double[]{0.500000000000000,0.500000000000000,2.000000000000000,2.000000000000000,3.500000000000000,3.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{3.000000000000000,-1.000000000000000,9.000000000000000,-1.000000000000000,15.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,9.000000000000000,-1.000000000000000,15.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,4.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,4.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,3.000000000000000,-1.000000000000000,9.000000000000000,-1.000000000000000,9.000000000000000,-1.000000000000000,15.000000000000000,-1.000000000000000,15.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3));
ResRA = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,2.250000000000000,-0.250000000000000,2.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2,3));
ResIAR = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,2.250000000000000,-0.250000000000000,2.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,5.000000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1,3));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,5.000000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3));
ResRA = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,2.500000000000000,-0.250000000000000,-0.250000000000000,2.500000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(3,2,3));
ResIAR = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,2.500000000000000,-0.250000000000000,-0.250000000000000,2.500000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,15.000000000000000,-2.000000000000000,5.000000000000000,-2.000000000000000,24.000000000000000,-2.000000000000000,8.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-5.000000000000000,0.000000000000000,5.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,15.000000000000000,-2.000000000000000,5.000000000000000,-2.000000000000000,24.000000000000000,-2.000000000000000,8.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-5.000000000000000,0.000000000000000,5.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000,3.750000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,6.000000000000000,-0.500000000000000,2.000000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000,3.750000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,6.000000000000000,-0.500000000000000,2.000000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,1.250000000000000,0.000000000000000,-1.250000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,15.000000000000000,-2.000000000000000,5.000000000000000,-2.000000000000000,15.000000000000000,-2.000000000000000,5.000000000000000,-2.000000000000000,24.000000000000000,-2.000000000000000,8.000000000000000,-2.000000000000000,24.000000000000000,-2.000000000000000,8.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-5.000000000000000,0.000000000000000,5.000000000000000,0.000000000000000,-5.000000000000000,0.000000000000000,5.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,3));
ResRA = new double[]{0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000,1.875000000000000,-0.250000000000000,0.625000000000000,-0.250000000000000,1.875000000000000,-0.250000000000000,0.625000000000000,-0.250000000000000,3.000000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,3.000000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(4,2,3));
ResIAR = new double[]{0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,0.250000000000000,-0.250000000000000,1.875000000000000,-0.250000000000000,0.625000000000000,-0.250000000000000,1.875000000000000,-0.250000000000000,0.625000000000000,-0.250000000000000,3.000000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,3.000000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.625000000000000,0.000000000000000,-0.625000000000000,0.000000000000000,0.625000000000000,0.000000000000000,-0.625000000000000,0.000000000000000,1.000000000000000,0.000000000000000,-1.000000000000000,0.000000000000000,1.000000000000000,0.000000000000000,-1.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
}
private static void TEST_FFT_double_complex_9() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
A.Reshape(new ILDimension(1,3,4));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,4.000000000000000,7.000000000000000,10.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,9.000000000000000,-1.000000000000000,15.000000000000000,-1.000000000000000,21.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000,33.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,15.000000000000000,-2.000000000000000,5.000000000000000,-2.000000000000000,24.000000000000000,-2.000000000000000,8.000000000000000,-2.000000000000000,33.000000000000000,-2.000000000000000,11.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-5.000000000000000,0.000000000000000,5.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-11.000000000000000,0.000000000000000,11.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,4.000000000000000,7.000000000000000,10.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new double[]{1.000000000000000,4.000000000000000,7.000000000000000,10.000000000000000};
ResRA.Reshape(new ILDimension(1,1,4));
ResIAR = new double[]{1.000000000000000,4.000000000000000,7.000000000000000,10.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,9.000000000000000,-1.000000000000000,15.000000000000000,-1.000000000000000,21.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4));
ResRA = new double[]{1.500000000000000,-0.500000000000000,4.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,10.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,2,4));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,4.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,10.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000,33.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,5.000000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,11.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,3,4));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,5.000000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,11.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000,15.000000000000000,-2.000000000000000,5.000000000000000,-2.000000000000000,24.000000000000000,-2.000000000000000,8.000000000000000,-2.000000000000000,33.000000000000000,-2.000000000000000,11.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-5.000000000000000,0.000000000000000,5.000000000000000,0.000000000000000,-8.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-11.000000000000000,0.000000000000000,11.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4));
ResRA = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000,3.750000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,6.000000000000000,-0.500000000000000,2.000000000000000,-0.500000000000000,8.250000000000000,-0.500000000000000,2.750000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,4,4));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000,3.750000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,6.000000000000000,-0.500000000000000,2.000000000000000,-0.500000000000000,8.250000000000000,-0.500000000000000,2.750000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,1.250000000000000,0.000000000000000,-1.250000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.750000000000000,0.000000000000000,-2.750000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{1.000000000000000,1.000000000000000,2.000000000000000,2.000000000000000,3.000000000000000,3.000000000000000,4.000000000000000,4.000000000000000,5.000000000000000,5.000000000000000,6.000000000000000,6.000000000000000,7.000000000000000,7.000000000000000,8.000000000000000,8.000000000000000,9.000000000000000,9.000000000000000,10.000000000000000,10.000000000000000,11.000000000000000,11.000000000000000,12.000000000000000,12.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{1.000000000000000,1.000000000000000,4.000000000000000,4.000000000000000,7.000000000000000,7.000000000000000,10.000000000000000,10.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4));
ResRA = new double[]{0.500000000000000,0.500000000000000,2.000000000000000,2.000000000000000,3.500000000000000,3.500000000000000,5.000000000000000,5.000000000000000};
ResRA.Reshape(new ILDimension(2,1,4));
ResIAR = new double[]{0.500000000000000,0.500000000000000,2.000000000000000,2.000000000000000,3.500000000000000,3.500000000000000,5.000000000000000,5.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,3.000000000000000,-1.000000000000000,-1.000000000000000,9.000000000000000,9.000000000000000,-1.000000000000000,-1.000000000000000,15.000000000000000,15.000000000000000,-1.000000000000000,-1.000000000000000,21.000000000000000,21.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4));
ResRA = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,2.250000000000000,2.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,5.250000000000000,5.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2,4));
ResIAR = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,2.250000000000000,2.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,5.250000000000000,5.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,15.000000000000000,15.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,24.000000000000000,24.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,33.000000000000000,33.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,4));
ResRA = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,2.500000000000000,2.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,5.500000000000000,5.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,3,4));
ResIAR = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,2.500000000000000,2.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,5.500000000000000,5.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{6.000000000000000,6.000000000000000,-2.000000000000000,-2.000000000000000,2.000000000000000,2.000000000000000,-2.000000000000000,-2.000000000000000,15.000000000000000,15.000000000000000,-2.000000000000000,-2.000000000000000,5.000000000000000,5.000000000000000,-2.000000000000000,-2.000000000000000,24.000000000000000,24.000000000000000,-2.000000000000000,-2.000000000000000,8.000000000000000,8.000000000000000,-2.000000000000000,-2.000000000000000,33.000000000000000,33.000000000000000,-2.000000000000000,-2.000000000000000,11.000000000000000,11.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-2.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,-5.000000000000000,-5.000000000000000,0.000000000000000,0.000000000000000,5.000000000000000,5.000000000000000,0.000000000000000,0.000000000000000,-8.000000000000000,-8.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,8.000000000000000,0.000000000000000,0.000000000000000,-11.000000000000000,-11.000000000000000,0.000000000000000,0.000000000000000,11.000000000000000,11.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,4));
ResRA = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,0.250000000000000,0.250000000000000,-0.250000000000000,-0.250000000000000,1.875000000000000,1.875000000000000,-0.250000000000000,-0.250000000000000,0.625000000000000,0.625000000000000,-0.250000000000000,-0.250000000000000,3.000000000000000,3.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,4.125000000000000,4.125000000000000,-0.250000000000000,-0.250000000000000,1.375000000000000,1.375000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,4,4));
ResIAR = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,0.250000000000000,0.250000000000000,-0.250000000000000,-0.250000000000000,1.875000000000000,1.875000000000000,-0.250000000000000,-0.250000000000000,0.625000000000000,0.625000000000000,-0.250000000000000,-0.250000000000000,3.000000000000000,3.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,4.125000000000000,4.125000000000000,-0.250000000000000,-0.250000000000000,1.375000000000000,1.375000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.625000000000000,0.625000000000000,0.000000000000000,0.000000000000000,-0.625000000000000,-0.625000000000000,0.000000000000000,0.000000000000000,1.000000000000000,1.000000000000000,0.000000000000000,0.000000000000000,-1.000000000000000,-1.000000000000000,0.000000000000000,0.000000000000000,1.375000000000000,1.375000000000000,0.000000000000000,0.000000000000000,-1.375000000000000,-1.375000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
}
private static void TEST_FFT_double_complex_10() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
A.Reshape(new ILDimension(1,4,3));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,5.000000000000000,9.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,11.000000000000000,-1.000000000000000,19.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,18.000000000000000,-1.500000000000000,-1.500000000000000,30.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,26.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,42.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{10.000000000000000,-4.045084971874737,1.545084971874737,1.545084971874737,-4.045084971874737,26.000000000000000,-5.281152949374527,4.781152949374527,4.781152949374527,-5.281152949374527,42.000000000000000,-6.517220926874317,8.017220926874316,8.017220926874316,-6.517220926874317};
ResultI = new double[]{0.000000000000000,-1.314327780297834,-2.126627020880100,2.126627020880100,1.314327780297834,0.000000000000000,-5.118553845478448,-4.477768030049992,4.477768030049992,5.118553845478448,0.000000000000000,-8.922779910659061,-6.828909039219886,6.828909039219886,8.922779910659061};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,5.000000000000000,9.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new double[]{1.000000000000000,5.000000000000000,9.000000000000000};
ResRA.Reshape(new ILDimension(1,1,3));
ResIAR = new double[]{1.000000000000000,5.000000000000000,9.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,11.000000000000000,-1.000000000000000,19.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,5.500000000000000,-0.500000000000000,9.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,2,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,5.500000000000000,-0.500000000000000,9.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,18.000000000000000,-1.500000000000000,-1.500000000000000,30.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,6.000000000000000,-0.500000000000000,-0.500000000000000,10.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,3,3));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,6.000000000000000,-0.500000000000000,-0.500000000000000,10.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,26.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,42.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,4,3));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{10.000000000000000,-4.045084971874737,1.545084971874737,1.545084971874737,-4.045084971874737,26.000000000000000,-5.281152949374527,4.781152949374527,4.781152949374527,-5.281152949374527,42.000000000000000,-6.517220926874317,8.017220926874316,8.017220926874316,-6.517220926874317};
ResultI = new double[]{0.000000000000000,-1.314327780297834,-2.126627020880100,2.126627020880100,1.314327780297834,0.000000000000000,-5.118553845478448,-4.477768030049992,4.477768030049992,5.118553845478448,0.000000000000000,-8.922779910659061,-6.828909039219886,6.828909039219886,8.922779910659061};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3));
ResRA = new double[]{2.000000000000000,-0.809016994374947,0.309016994374947,0.309016994374948,-0.809016994374947,5.200000000000000,-1.056230589874905,0.956230589874905,0.956230589874905,-1.056230589874905,8.400000000000000,-1.303444185374863,1.603444185374863,1.603444185374863,-1.303444185374863};
ResRA.Reshape(new ILDimension(1,5,3));
ResIAR = new double[]{2.000000000000000,-0.809016994374947,0.309016994374947,0.309016994374948,-0.809016994374947,5.200000000000000,-1.056230589874905,0.956230589874905,0.956230589874905,-1.056230589874905,8.400000000000000,-1.303444185374863,1.603444185374863,1.603444185374863,-1.303444185374863};
ResIAI = new double[]{0.000000000000000,0.262865556059567,0.425325404176020,-0.425325404176020,-0.262865556059567,0.000000000000000,1.023710769095690,0.895553606009998,-0.895553606009998,-1.023710769095690,0.000000000000000,1.784555982131812,1.365781807843977,-1.365781807843977,-1.784555982131812};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{1.000000000000000,1.000000000000000,2.000000000000000,2.000000000000000,3.000000000000000,3.000000000000000,4.000000000000000,4.000000000000000,5.000000000000000,5.000000000000000,6.000000000000000,6.000000000000000,7.000000000000000,7.000000000000000,8.000000000000000,8.000000000000000,9.000000000000000,9.000000000000000,10.000000000000000,10.000000000000000,11.000000000000000,11.000000000000000,12.000000000000000,12.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{1.000000000000000,1.000000000000000,5.000000000000000,5.000000000000000,9.000000000000000,9.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new double[]{0.500000000000000,0.500000000000000,2.500000000000000,2.500000000000000,4.500000000000000,4.500000000000000};
ResRA.Reshape(new ILDimension(2,1,3));
ResIAR = new double[]{0.500000000000000,0.500000000000000,2.500000000000000,2.500000000000000,4.500000000000000,4.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,3.000000000000000,-1.000000000000000,-1.000000000000000,11.000000000000000,11.000000000000000,-1.000000000000000,-1.000000000000000,19.000000000000000,19.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3));
ResRA = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,2.750000000000000,2.750000000000000,-0.250000000000000,-0.250000000000000,4.750000000000000,4.750000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2,3));
ResIAR = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,2.750000000000000,2.750000000000000,-0.250000000000000,-0.250000000000000,4.750000000000000,4.750000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,18.000000000000000,18.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,30.000000000000000,30.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,3));
ResRA = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.000000000000000,3.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,5.000000000000000,5.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,3,3));
ResIAR = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.000000000000000,3.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,5.000000000000000,5.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{10.000000000000000,10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,26.000000000000000,26.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,42.000000000000000,42.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,2.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,-2.000000000000000,0.000000000000000,0.000000000000000,2.000000000000000,2.000000000000000,0.000000000000000,0.000000000000000,-2.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new double[]{1.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.250000000000000,3.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,5.250000000000000,5.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,4,3));
ResIAR = new double[]{1.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.250000000000000,3.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,5.250000000000000,5.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{10.000000000000000,10.000000000000000,-4.045084971874737,-4.045084971874737,1.545084971874737,1.545084971874737,1.545084971874737,1.545084971874737,-4.045084971874737,-4.045084971874737,26.000000000000000,26.000000000000000,-5.281152949374527,-5.281152949374527,4.781152949374527,4.781152949374527,4.781152949374527,4.781152949374527,-5.281152949374527,-5.281152949374527,42.000000000000000,42.000000000000000,-6.517220926874317,-6.517220926874317,8.017220926874316,8.017220926874316,8.017220926874316,8.017220926874316,-6.517220926874317,-6.517220926874317};
ResultI = new double[]{0.000000000000000,0.000000000000000,-1.314327780297834,-1.314327780297834,-2.126627020880100,-2.126627020880100,2.126627020880100,2.126627020880100,1.314327780297834,1.314327780297834,0.000000000000000,0.000000000000000,-5.118553845478448,-5.118553845478448,-4.477768030049992,-4.477768030049992,4.477768030049992,4.477768030049992,5.118553845478448,5.118553845478448,0.000000000000000,0.000000000000000,-8.922779910659061,-8.922779910659061,-6.828909039219886,-6.828909039219886,6.828909039219886,6.828909039219886,8.922779910659061,8.922779910659061};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,3));
ResRA = new double[]{1.000000000000000,1.000000000000000,-0.404508497187474,-0.404508497187474,0.154508497187474,0.154508497187474,0.154508497187474,0.154508497187474,-0.404508497187474,-0.404508497187474,2.600000000000000,2.600000000000000,-0.528115294937453,-0.528115294937453,0.478115294937453,0.478115294937453,0.478115294937453,0.478115294937453,-0.528115294937453,-0.528115294937453,4.200000000000000,4.200000000000000,-0.651722092687432,-0.651722092687432,0.801722092687432,0.801722092687432,0.801722092687432,0.801722092687432,-0.651722092687432,-0.651722092687432};
ResRA.Reshape(new ILDimension(2,5,3));
ResIAR = new double[]{1.000000000000000,1.000000000000000,-0.404508497187474,-0.404508497187474,0.154508497187474,0.154508497187474,0.154508497187474,0.154508497187474,-0.404508497187474,-0.404508497187474,2.600000000000000,2.600000000000000,-0.528115294937453,-0.528115294937453,0.478115294937453,0.478115294937453,0.478115294937453,0.478115294937453,-0.528115294937453,-0.528115294937453,4.200000000000000,4.200000000000000,-0.651722092687432,-0.651722092687432,0.801722092687432,0.801722092687432,0.801722092687432,0.801722092687432,-0.651722092687432,-0.651722092687432};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.131432778029783,0.131432778029783,0.212662702088010,0.212662702088010,-0.212662702088010,-0.212662702088010,-0.131432778029783,-0.131432778029783,0.000000000000000,0.000000000000000,0.511855384547845,0.511855384547845,0.447776803004999,0.447776803004999,-0.447776803004999,-0.447776803004999,-0.511855384547845,-0.511855384547845,0.000000000000000,0.000000000000000,0.892277991065906,0.892277991065906,0.682890903921989,0.682890903921989,-0.682890903921989,-0.682890903921989,-0.892277991065906,-0.892277991065906};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
}
private static void TEST_FFT_double_complex_11() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000};
A.Reshape(new ILDimension(3,4));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,5));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{5.000000000000000,-3.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{2.500000000000000,-1.500000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{2.500000000000000,-1.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{12.000000000000000,-4.500000000000000,-4.500000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new double[]{4.000000000000000,-1.500000000000000,-1.500000000000000};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new double[]{4.000000000000000,-1.500000000000000,-1.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.866025403784439,0.866025403784439};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{22.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000};
ResultI = new double[]{0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new double[]{5.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new double[]{5.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000};
ResIAI = new double[]{0.000000000000000,-1.500000000000000,0.000000000000000,1.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{22.000000000000000,-11.517220926874316,3.017220926874317,3.017220926874317,-11.517220926874316};
ResultI = new double[]{0.000000000000000,-2.040870308303195,-5.204310558055353,5.204310558055353,2.040870308303195};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5));
ResRA = new double[]{4.400000000000000,-2.303444185374863,0.603444185374863,0.603444185374863,-2.303444185374863};
ResRA.Reshape(new ILDimension(1,5));
ResIAR = new double[]{4.400000000000000,-2.303444185374863,0.603444185374863,0.603444185374863,-2.303444185374863};
ResIAI = new double[]{0.000000000000000,0.408174061660639,1.040862111611071,-1.040862111611071,-0.408174061660639};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{12.000000000000000,-2.000000000000000,-6.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{27.000000000000000,-3.000000000000000,-9.000000000000000,0.000000000000000,-9.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,5.196152422706632,0.000000000000000,-5.196152422706632,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new double[]{4.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,-1.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new double[]{4.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,-1.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.866025403784439,0.000000000000000,0.866025403784439,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{48.000000000000000,-4.000000000000000,-12.000000000000000,0.000000000000000,-12.000000000000000,0.000000000000000,-12.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,12.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-12.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new double[]{6.000000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,-1.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new double[]{6.000000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,-1.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.500000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{48.000000000000000,-4.000000000000000,-23.343458848123582,0.309016994374947,6.843458848123582,-0.809016994374947,6.843458848123582,-0.809016994374947,-23.343458848123582,0.309016994374947};
ResultI = new double[]{0.000000000000000,0.000000000000000,-5.032797132901543,0.951056516295154,-10.996406368403179,0.587785252292473,10.996406368403179,-0.587785252292473,5.032797132901543,-0.951056516295154};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5));
ResRA = new double[]{4.800000000000000,-0.400000000000000,-2.334345884812358,0.030901699437495,0.684345884812358,-0.080901699437495,0.684345884812358,-0.080901699437495,-2.334345884812358,0.030901699437495};
ResRA.Reshape(new ILDimension(2,5));
ResIAR = new double[]{4.800000000000000,-0.400000000000000,-2.334345884812358,0.030901699437495,0.684345884812358,-0.080901699437495,0.684345884812358,-0.080901699437495,-2.334345884812358,0.030901699437495};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.503279713290154,-0.095105651629515,1.099640636840318,-0.058778525229247,-1.099640636840318,0.058778525229247,-0.503279713290154,0.095105651629515};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{21.000000000000000,-3.000000000000000,-3.000000000000000,-9.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new double[]{3.500000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new double[]{3.500000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{45.000000000000000,-4.500000000000000,-4.500000000000000,-13.500000000000000,0.000000000000000,0.000000000000000,-13.500000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316,7.794228634059947,0.000000000000000,0.000000000000000,-7.794228634059947,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{78.000000000000000,-6.000000000000000,-6.000000000000000,-18.000000000000000,0.000000000000000,0.000000000000000,-18.000000000000000,0.000000000000000,0.000000000000000,-18.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,18.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-18.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4));
ResRA = new double[]{6.500000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,4));
ResIAR = new double[]{6.500000000000000,-0.500000000000000,-0.500000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000,-1.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-1.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.500000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new double[]{78.000000000000000,-6.000000000000000,-6.000000000000000,-35.478713763747791,1.287164595108753,-0.360113611983911,11.478713763747791,-0.704488531107294,-1.722562452017548,11.478713763747791,-1.722562452017548,-0.704488531107294,-35.478713763747791,-0.360113611983911,1.287164595108753};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,-8.975780473795044,1.158968207112913,1.694201341772548,-17.376287431043480,1.582307147660746,0.181048609216673,17.376287431043480,-0.181048609216673,-1.582307147660746,8.975780473795044,-1.694201341772548,-1.158968207112913};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5));
ResRA = new double[]{5.200000000000000,-0.400000000000000,-0.400000000000000,-2.365247584249853,0.085810973007250,-0.024007574132261,0.765247584249853,-0.046965902073820,-0.114837496801170,0.765247584249853,-0.114837496801170,-0.046965902073820,-2.365247584249853,-0.024007574132261,0.085810973007250};
ResRA.Reshape(new ILDimension(3,5));
ResIAR = new double[]{5.200000000000000,-0.400000000000000,-0.400000000000000,-2.365247584249853,0.085810973007250,-0.024007574132261,0.765247584249853,-0.046965902073820,-0.114837496801170,0.765247584249853,-0.114837496801170,-0.046965902073820,-2.365247584249853,-0.024007574132261,0.085810973007250};
ResIAI = new double[]{0.000000000000000,-0.230940107675850,0.230940107675850,0.598385364919670,-0.077264547140861,-0.112946756118170,1.158419162069565,-0.105487143177383,-0.012069907281112,-1.158419162069565,0.012069907281112,0.105487143177383,-0.598385364919670,0.112946756118170,0.077264547140861};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{6.000000000000000,-2.000000000000000,2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{21.000000000000000,-4.000000000000000,7.000000000000000,-4.000000000000000,-9.000000000000000,0.000000000000000,-3.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,-7.000000000000000,0.000000000000000,7.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-3.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new double[]{2.625000000000000,-0.500000000000000,0.875000000000000,-0.500000000000000,-1.125000000000000,0.000000000000000,-0.375000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new double[]{2.625000000000000,-0.500000000000000,0.875000000000000,-0.500000000000000,-1.125000000000000,0.000000000000000,-0.375000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.875000000000000,0.000000000000000,-0.875000000000000,0.000000000000000,-0.375000000000000,0.000000000000000,0.375000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{45.000000000000000,-6.000000000000000,15.000000000000000,-6.000000000000000,-13.500000000000000,2.598076211353316,-4.500000000000000,-2.598076211353316,-13.500000000000000,-2.598076211353316,-4.500000000000000,2.598076211353316};
ResultI = new double[]{0.000000000000000,-15.000000000000000,0.000000000000000,15.000000000000000,7.794228634059947,4.500000000000000,2.598076211353316,-4.500000000000000,-7.794228634059947,4.500000000000000,-2.598076211353316,-4.500000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3));
ResRA = new double[]{3.750000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,-1.125000000000000,0.216506350946110,-0.375000000000000,-0.216506350946110,-1.125000000000000,-0.216506350946110,-0.375000000000000,0.216506350946110};
ResRA.Reshape(new ILDimension(4,3));
ResIAR = new double[]{3.750000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,-1.125000000000000,0.216506350946110,-0.375000000000000,-0.216506350946110,-1.125000000000000,-0.216506350946110,-0.375000000000000,0.216506350946110};
ResIAI = new double[]{0.000000000000000,1.250000000000000,0.000000000000000,-1.250000000000000,-0.649519052838329,-0.375000000000000,-0.216506350946110,0.375000000000000,0.649519052838329,-0.375000000000000,0.216506350946110,0.375000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new double[]{78.000000000000000,-8.000000000000000,26.000000000000000,-8.000000000000000,-18.000000000000000,6.000000000000000,-6.000000000000000,-6.000000000000000,-18.000000000000000,0.000000000000000,-6.000000000000000,0.000000000000000,-18.000000000000000,-6.000000000000000,-6.000000000000000,6.000000000000000};
ResultI = new double[]{0.000000000000000,-26.000000000000000,0.000000000000000,26.000000000000000,18.000000000000000,6.000000000000000,6.000000000000000,-6.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,-18.000000000000000,6.000000000000000,-6.000000000000000,-6.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4));
ResRA = new double[]{4.875000000000000,-0.500000000000000,1.625000000000000,-0.500000000000000,-1.125000000000000,0.375000000000000,-0.375000000000000,-0.375000000000000,-1.125000000000000,0.000000000000000,-0.375000000000000,0.000000000000000,-1.125000000000000,-0.375000000000000,-0.375000000000000,0.375000000000000};
ResRA.Reshape(new ILDimension(4,4));
ResIAR = new double[]{4.875000000000000,-0.500000000000000,1.625000000000000,-0.500000000000000,-1.125000000000000,0.375000000000000,-0.375000000000000,-0.375000000000000,-1.125000000000000,0.000000000000000,-0.375000000000000,0.000000000000000,-1.125000000000000,-0.375000000000000,-0.375000000000000,0.375000000000000};
ResIAI = new double[]{0.000000000000000,1.625000000000000,0.000000000000000,-1.625000000000000,-1.125000000000000,-0.375000000000000,-0.375000000000000,0.375000000000000,0.000000000000000,-0.375000000000000,0.000000000000000,0.375000000000000,1.125000000000000,-0.375000000000000,0.375000000000000,0.375000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new double[]{78.000000000000000,-8.000000000000000,26.000000000000000,-8.000000000000000,-35.478713763747791,-2.373892835848453,-11.826237921249264,3.609960813348243,11.478713763747791,-7.410129799097721,3.826237921249264,4.174061821597931,11.478713763747791,4.174061821597931,3.826237921249264,-7.410129799097721,-35.478713763747791,3.609960813348243,-11.826237921249264,-2.373892835848453};
ResultI = new double[]{0.000000000000000,-26.000000000000000,0.000000000000000,26.000000000000000,-8.975780473795044,13.728350953839572,-2.991926824598348,-9.924124888658957,-17.376287431043480,-2.650667416664318,-5.792095810347826,5.001808425834211,17.376287431043480,-5.001808425834211,5.792095810347826,2.650667416664318,8.975780473795044,9.924124888658957,2.991926824598348,-13.728350953839572};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5));
ResRA = new double[]{3.900000000000000,-0.400000000000000,1.300000000000000,-0.400000000000000,-1.773935688187390,-0.118694641792423,-0.591311896062463,0.180498040667412,0.573935688187390,-0.370506489954886,0.191311896062463,0.208703091079897,0.573935688187390,0.208703091079897,0.191311896062463,-0.370506489954886,-1.773935688187390,0.180498040667412,-0.591311896062463,-0.118694641792423};
ResRA.Reshape(new ILDimension(4,5));
ResIAR = new double[]{3.900000000000000,-0.400000000000000,1.300000000000000,-0.400000000000000,-1.773935688187390,-0.118694641792423,-0.591311896062463,0.180498040667412,0.573935688187390,-0.370506489954886,0.191311896062463,0.208703091079897,0.573935688187390,0.208703091079897,0.191311896062463,-0.370506489954886,-1.773935688187390,0.180498040667412,-0.591311896062463,-0.118694641792423};
ResIAI = new double[]{0.000000000000000,1.300000000000000,0.000000000000000,-1.300000000000000,0.448789023689752,-0.686417547691979,0.149596341229917,0.496206244432948,0.868814371552174,0.132533370833216,0.289604790517391,-0.250090421291711,-0.868814371552174,0.250090421291711,-0.289604790517391,-0.132533370833216,-0.448789023689752,-0.496206244432948,-0.149596341229917,0.686417547691979};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
}
private static void TEST_FFT_double_complex_12() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000};
A.Reshape(new ILDimension(5,4));
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,5));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000};
ResultI = new double[]{0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new double[]{1.000000000000000};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new double[]{1.000000000000000};
ResIAI = new double[]{0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{7.000000000000000,-5.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new double[]{3.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new double[]{3.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{18.000000000000000,-7.500000000000000,-7.500000000000000};
ResultI = new double[]{0.000000000000000,4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-1.443375672974064,1.443375672974064};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{34.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000};
ResultI = new double[]{0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{34.000000000000000,-18.989356881873896,4.489356881873896,4.489356881873896,-18.989356881873896};
ResultI = new double[]{0.000000000000000,-2.767412836308555,-8.281994095230607,8.281994095230607,2.767412836308555};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5));
ResRA = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779};
ResRA.Reshape(new ILDimension(1,5));
ResIAR = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779};
ResIAI = new double[]{0.000000000000000,0.553482567261711,1.656398819046121,-1.656398819046121,-0.553482567261711};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new double[]{1.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new double[]{1.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{16.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{39.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-38.287730758122741,0.309016994374947,9.787730758122741,-0.809016994374947,9.787730758122741,-0.809016994374947,-38.287730758122741,0.309016994374947};
ResultI = new double[]{0.000000000000000,0.000000000000000,-6.485882188912264,0.951056516295154,-17.151773442753687,0.587785252292473,17.151773442753687,-0.587785252292473,6.485882188912264,-0.951056516295154};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5));
ResRA = new double[]{7.200000000000000,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495};
ResRA.Reshape(new ILDimension(2,5));
ResIAR = new double[]{7.200000000000000,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.648588218891226,-0.095105651629515,1.715177344275369,-0.058778525229247,-1.715177344275369,0.058778525229247,-0.648588218891226,0.095105651629515};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{27.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{63.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4));
ResRA = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,4));
ResIAR = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-57.895121628746530,1.287164595108753,-0.360113611983911,15.895121628746530,-0.704488531107294,-1.722562452017548,15.895121628746530,-1.722562452017548,-0.704488531107294,-57.895121628746530,-0.360113611983911,1.287164595108753};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,-11.155408057811126,1.158968207112913,1.694201341772548,-26.609338042569238,1.582307147660746,0.181048609216673,26.609338042569238,-0.181048609216673,-1.582307147660746,11.155408057811126,-1.694201341772548,-1.158968207112913};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5));
ResRA = new double[]{7.600000000000000,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132261,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132261,0.085810973007250};
ResRA.Reshape(new ILDimension(3,5));
ResIAR = new double[]{7.600000000000000,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132261,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132261,0.085810973007250};
ResIAI = new double[]{0.000000000000000,-0.230940107675850,0.230940107675850,0.743693870520742,-0.077264547140861,-0.112946756118170,1.773955869504616,-0.105487143177383,-0.012069907281112,-1.773955869504616,0.012069907281112,0.105487143177383,-0.743693870520742,0.112946756118170,0.077264547140861};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{40.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{90.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3));
ResRA = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,3));
ResIAR = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4));
ResRA = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,4));
ResIAR = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-77.811529493745269,2.520147021340202,0.618033988749895,-1.284079043840412,22.811529493745269,-0.442463484164949,-1.618033988749895,-2.793604493334841,22.811529493745269,-2.793604493334841,-1.618033988749895,-0.442463484164949,-77.811529493745269,-1.284079043840412,0.618033988749895,2.520147021340202};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-16.775990443005142,1.284079043840412,1.902113032590307,2.520147021340202,-36.654687894677267,2.793604493334841,1.175570504584946,-0.442463484164949,36.654687894677267,0.442463484164949,-1.175570504584946,-2.793604493334841,16.775990443005142,-2.520147021340202,-1.902113032590307,-1.284079043840412};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5));
ResRA = new double[]{8.000000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192021,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192021,0.030901699437495,0.126007351067010};
ResRA.Reshape(new ILDimension(4,5));
ResIAR = new double[]{8.000000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192021,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192021,0.030901699437495,0.126007351067010};
ResIAI = new double[]{0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,0.838799522150257,-0.064203952192021,-0.095105651629515,-0.126007351067010,1.832734394733863,-0.139680224666742,-0.058778525229247,0.022123174208247,-1.832734394733863,-0.022123174208247,0.058778525229247,0.139680224666742,-0.838799522150257,0.126007351067010,0.095105651629515,0.064203952192021};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(5,1));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2));
ResRA = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,2));
ResIAR = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{120.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,10.322864403533799,2.436897721746798,-2.436897721746798,-10.322864403533799,21.650635094610966,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610966,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3));
ResRA = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,3));
ResIAR = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4));
ResRA = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,4));
ResIAR = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-98.036954353118958,4.045084971874736,1.545084971874737,0.000000000000000,-2.500000000000000,30.536954353118958,-0.000000000000000,-1.545084971874737,-2.500000000000000,-4.045084971874736,30.536954353118958,-4.045084971874736,-2.500000000000000,-1.545084971874737,-0.000000000000000,-98.036954353118958,-2.500000000000000,0.000000000000000,1.545084971874737,4.045084971874736};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-23.347629344494308,1.314327780297834,2.126627020880100,2.628655560595668,3.440954801177933,-47.287822999077761,4.253254041760200,2.126627020880100,0.812299240582266,-1.314327780297834,47.287822999077761,1.314327780297834,-0.812299240582266,-2.126627020880100,-4.253254041760200,23.347629344494308,-3.440954801177933,-2.628655560595668,-2.126627020880100,-1.314327780297834};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5));
ResRA = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874989,0.061803398874989,0.000000000000000,-0.100000000000000,1.221478174124759,-0.000000000000000,-0.061803398874989,-0.100000000000000,-0.161803398874989,1.221478174124759,-0.161803398874989,-0.100000000000000,-0.061803398874989,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874989,0.161803398874989};
ResRA.Reshape(new ILDimension(5,5));
ResIAR = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874989,0.061803398874989,0.000000000000000,-0.100000000000000,1.221478174124759,-0.000000000000000,-0.061803398874989,-0.100000000000000,-0.161803398874989,1.221478174124759,-0.161803398874989,-0.100000000000000,-0.061803398874989,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874989,0.161803398874989};
ResIAI = new double[]{0.000000000000000,-0.550552768188469,-0.129967878493163,0.129967878493163,0.550552768188469,0.933905173779772,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,1.891512919963110,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-1.891512919963110,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-0.933905173779772,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,0));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(6,0));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000};
ResRA.Reshape(new ILDimension(6,1));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new double[]{55.000000000000000,-14.500000000000000,2.500000000000000,11.000000000000000,2.500000000000000,-14.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000};
ResultI = new double[]{0.000000000000000,-4.330127018922193,-11.258330249197702,0.000000000000000,11.258330249197702,4.330127018922193,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2));
ResRA = new double[]{4.583333333333334,-1.208333333333334,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333334,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResRA.Reshape(new ILDimension(6,2));
ResIAR = new double[]{4.583333333333334,-1.208333333333334,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333334,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResIAI = new double[]{0.000000000000000,0.360843918243516,0.938194187433142,0.000000000000000,-0.938194187433142,-0.360843918243516,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new double[]{120.000000000000000,-25.500000000000000,7.500000000000000,24.000000000000000,7.500000000000000,-25.500000000000000,-37.500000000000000,7.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,7.500000000000000};
ResultI = new double[]{0.000000000000000,-12.990381056766578,-23.382685902179841,0.000000000000000,23.382685902179841,12.990381056766578,21.650635094610966,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610966,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3));
ResRA = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,0.416666666666667};
ResRA.Reshape(new ILDimension(6,3));
ResIAR = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,0.416666666666667};
ResIAI = new double[]{0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4));
ResRA = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResRA.Reshape(new ILDimension(6,4));
ResIAR = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResIAI = new double[]{0.000000000000000,1.082531754730548,1.659882023920174,0.000000000000000,-1.659882023920174,-1.082531754730548,-2.083333333333333,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333333,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-98.036954353118958,9.621261194543136,-14.207737073390826,-19.607390870623792,-4.472602814108123,12.767282625455183,30.536954353118958,-13.357652230006455,-6.859358218078329,6.107390870623792,10.539698105577278,-0.030891589991864,30.536954353118958,-0.030891589991864,10.539698105577278,6.107390870623792,-6.859358218078329,-13.357652230006455,-98.036954353118958,12.767282625455183,-4.472602814108123,-19.607390870623792,-14.207737073390826,9.621261194543136};
ResultI = new double[]{0.000000000000000,-25.980762113533153,-39.837168574084181,0.000000000000000,39.837168574084181,25.980762113533153,-23.347629344494308,22.792166151679453,16.339937003214402,-4.669525868898862,-18.156293323227807,-9.563131636124211,-47.287822999077761,4.186548098088652,-9.836889335492467,-9.457564599815552,2.142680492554334,10.561083772359160,47.287822999077761,-10.561083772359160,-2.142680492554334,9.457564599815552,9.836889335492467,-4.186548098088652,23.347629344494308,9.563131636124211,18.156293323227807,4.669525868898862,-16.339937003214402,-22.792166151679453};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5));
ResRA = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437298,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666395,1.017898478437299,-0.001029719666395,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437298,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771};
ResRA.Reshape(new ILDimension(6,5));
ResIAR = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437298,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666395,1.017898478437299,-0.001029719666395,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437298,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771};
ResIAI = new double[]{0.000000000000000,0.866025403784439,1.327905619136139,0.000000000000000,-1.327905619136139,-0.866025403784439,0.778254311483144,-0.759738871722649,-0.544664566773813,0.155650862296629,0.605209777440927,0.318771054537474,1.576260766635925,-0.139551603269622,0.327896311183082,0.315252153327185,-0.071422683085144,-0.352036125745305,-1.576260766635925,0.352036125745305,0.071422683085144,-0.315252153327185,-0.327896311183082,0.139551603269622,-0.778254311483144,-0.318771054537474,-0.605209777440927,-0.155650862296629,0.544664566773813,0.759738871722649};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_double_complex_13() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000,61.000000000000000,62.000000000000000,63.000000000000000,64.000000000000000,65.000000000000000,66.000000000000000,67.000000000000000,68.000000000000000,69.000000000000000,70.000000000000000,71.000000000000000,72.000000000000000,73.000000000000000,74.000000000000000,75.000000000000000,76.000000000000000,77.000000000000000,78.000000000000000,79.000000000000000,80.000000000000000,81.000000000000000,82.000000000000000,83.000000000000000,84.000000000000000,85.000000000000000,86.000000000000000,87.000000000000000,88.000000000000000,89.000000000000000,90.000000000000000,91.000000000000000,92.000000000000000,93.000000000000000,94.000000000000000,95.000000000000000,96.000000000000000,97.000000000000000,98.000000000000000,99.000000000000000,100.000000000000000,101.000000000000000,102.000000000000000,103.000000000000000,104.000000000000000,105.000000000000000,106.000000000000000,107.000000000000000,108.000000000000000,109.000000000000000,110.000000000000000,111.000000000000000,112.000000000000000,113.000000000000000,114.000000000000000,115.000000000000000,116.000000000000000,117.000000000000000,118.000000000000000,119.000000000000000,120.000000000000000};
A.Reshape(new ILDimension(5,4,3,2));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000,61.000000000000000,62.000000000000000,63.000000000000000,64.000000000000000,65.000000000000000,66.000000000000000,67.000000000000000,68.000000000000000,69.000000000000000,70.000000000000000,71.000000000000000,72.000000000000000,73.000000000000000,74.000000000000000,75.000000000000000,76.000000000000000,77.000000000000000,78.000000000000000,79.000000000000000,80.000000000000000,81.000000000000000,82.000000000000000,83.000000000000000,84.000000000000000,85.000000000000000,86.000000000000000,87.000000000000000,88.000000000000000,89.000000000000000,90.000000000000000,91.000000000000000,92.000000000000000,93.000000000000000,94.000000000000000,95.000000000000000,96.000000000000000,97.000000000000000,98.000000000000000,99.000000000000000,100.000000000000000,101.000000000000000,102.000000000000000,103.000000000000000,104.000000000000000,105.000000000000000,106.000000000000000,107.000000000000000,108.000000000000000,109.000000000000000,110.000000000000000,111.000000000000000,112.000000000000000,113.000000000000000,114.000000000000000,115.000000000000000,116.000000000000000,117.000000000000000,118.000000000000000,119.000000000000000,120.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,61.000000000000000,62.000000000000000,63.000000000000000,64.000000000000000,65.000000000000000,81.000000000000000,82.000000000000000,83.000000000000000,84.000000000000000,85.000000000000000,101.000000000000000,102.000000000000000,103.000000000000000,104.000000000000000,105.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{7.000000000000000,9.000000000000000,11.000000000000000,13.000000000000000,15.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,47.000000000000000,49.000000000000000,51.000000000000000,53.000000000000000,55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,87.000000000000000,89.000000000000000,91.000000000000000,93.000000000000000,95.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,127.000000000000000,129.000000000000000,131.000000000000000,133.000000000000000,135.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,167.000000000000000,169.000000000000000,171.000000000000000,173.000000000000000,175.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,207.000000000000000,209.000000000000000,211.000000000000000,213.000000000000000,215.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{18.000000000000000,21.000000000000000,24.000000000000000,27.000000000000000,30.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,78.000000000000000,81.000000000000000,84.000000000000000,87.000000000000000,90.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,138.000000000000000,141.000000000000000,144.000000000000000,147.000000000000000,150.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,198.000000000000000,201.000000000000000,204.000000000000000,207.000000000000000,210.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,258.000000000000000,261.000000000000000,264.000000000000000,267.000000000000000,270.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,318.000000000000000,321.000000000000000,324.000000000000000,327.000000000000000,330.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{34.000000000000000,38.000000000000000,42.000000000000000,46.000000000000000,50.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,114.000000000000000,118.000000000000000,122.000000000000000,126.000000000000000,130.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,194.000000000000000,198.000000000000000,202.000000000000000,206.000000000000000,210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,274.000000000000000,278.000000000000000,282.000000000000000,286.000000000000000,290.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,354.000000000000000,358.000000000000000,362.000000000000000,366.000000000000000,370.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,434.000000000000000,438.000000000000000,442.000000000000000,446.000000000000000,450.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{34.000000000000000,38.000000000000000,42.000000000000000,46.000000000000000,50.000000000000000,-18.989356881873896,-19.298373876248846,-19.607390870623792,-19.916407864998739,-20.225424859373685,4.489356881873896,5.298373876248844,6.107390870623792,6.916407864998739,7.725424859373685,4.489356881873896,5.298373876248844,6.107390870623792,6.916407864998739,7.725424859373685,-18.989356881873896,-19.298373876248846,-19.607390870623792,-19.916407864998739,-20.225424859373685,114.000000000000000,118.000000000000000,122.000000000000000,126.000000000000000,130.000000000000000,-25.169696769372845,-25.478713763747791,-25.787730758122741,-26.096747752497688,-26.405764746872634,20.669696769372845,21.478713763747791,22.287730758122741,23.096747752497688,23.905764746872634,20.669696769372845,21.478713763747791,22.287730758122741,23.096747752497688,23.905764746872634,-25.169696769372845,-25.478713763747791,-25.787730758122741,-26.096747752497688,-26.405764746872634,194.000000000000000,198.000000000000000,202.000000000000000,206.000000000000000,210.000000000000000,-31.350036656871794,-31.659053651246744,-31.968070645621687,-32.277087639996637,-32.586104634371587,36.850036656871794,37.659053651246744,38.468070645621687,39.277087639996637,40.086104634371587,36.850036656871794,37.659053651246744,38.468070645621687,39.277087639996637,40.086104634371587,-31.350036656871794,-31.659053651246744,-31.968070645621687,-32.277087639996637,-32.586104634371587,274.000000000000000,278.000000000000000,282.000000000000000,286.000000000000000,290.000000000000000,-37.530376544370746,-37.839393538745689,-38.148410533120639,-38.457427527495582,-38.766444521870532,53.030376544370746,53.839393538745689,54.648410533120639,55.457427527495582,56.266444521870532,53.030376544370746,53.839393538745689,54.648410533120639,55.457427527495582,56.266444521870532,-37.530376544370746,-37.839393538745689,-38.148410533120639,-38.457427527495582,-38.766444521870532,354.000000000000000,358.000000000000000,362.000000000000000,366.000000000000000,370.000000000000000,-43.710716431869692,-44.019733426244642,-44.328750420619585,-44.637767414994535,-44.946784409369485,69.210716431869685,70.019733426244642,70.828750420619585,71.637767414994528,72.446784409369485,69.210716431869685,70.019733426244642,70.828750420619585,71.637767414994528,72.446784409369485,-43.710716431869692,-44.019733426244642,-44.328750420619585,-44.637767414994535,-44.946784409369485,434.000000000000000,438.000000000000000,442.000000000000000,446.000000000000000,450.000000000000000,-49.891056319368644,-50.200073313743587,-50.509090308118530,-50.818107302493488,-51.127124296868431,85.391056319368644,86.200073313743587,87.009090308118530,87.818107302493488,88.627124296868431,85.391056319368644,86.200073313743587,87.009090308118530,87.818107302493488,88.627124296868431,-49.891056319368644,-50.200073313743587,-50.509090308118530,-50.818107302493488,-51.127124296868431};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.767412836308555,-3.718469352603709,-4.669525868898862,-5.620582385194015,-6.571638901489169,-8.281994095230607,-8.869779347523078,-9.457564599815552,-10.045349852108025,-10.633135104400498,8.281994095230607,8.869779347523078,9.457564599815552,10.045349852108025,10.633135104400498,2.767412836308555,3.718469352603709,4.669525868898862,5.620582385194015,6.571638901489169,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.788543162211624,-22.739599678506778,-23.690656194801932,-24.641712711097085,-25.592769227392239,-20.037699141080068,-20.625484393372542,-21.213269645665015,-21.801054897957489,-22.388840150249962,20.037699141080068,20.625484393372542,21.213269645665015,21.801054897957489,22.388840150249962,21.788543162211624,22.739599678506778,23.690656194801932,24.641712711097085,25.592769227392239,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.809673488114697,-41.760730004409851,-42.711786520705004,-43.662843037000158,-44.613899553295312,-31.793404186929532,-32.381189439222005,-32.968974691514475,-33.556759943806952,-34.144545196099422,31.793404186929532,32.381189439222005,32.968974691514475,33.556759943806952,34.144545196099422,40.809673488114697,41.760730004409851,42.711786520705004,43.662843037000158,44.613899553295312,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-59.830803814017770,-60.781860330312924,-61.732916846608070,-62.683973362903224,-63.635029879198378,-43.549109232778996,-44.136894485071466,-44.724679737363942,-45.312464989656412,-45.900250241948889,43.549109232778996,44.136894485071466,44.724679737363942,45.312464989656412,45.900250241948889,59.830803814017770,60.781860330312924,61.732916846608070,62.683973362903224,63.635029879198378,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-78.851934139920829,-79.802990656215982,-80.754047172511136,-81.705103688806290,-82.656160205101443,-55.304814278628456,-55.892599530920933,-56.480384783213402,-57.068170035505879,-57.655955287798349,55.304814278628456,55.892599530920933,56.480384783213402,57.068170035505879,57.655955287798349,78.851934139920829,79.802990656215982,80.754047172511136,81.705103688806290,82.656160205101443,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-97.873064465823902,-98.824120982119055,-99.775177498414209,-100.726234014709360,-101.677290531004520,-67.060519324477923,-67.648304576770386,-68.236089829062863,-68.823875081355339,-69.411660333647816,67.060519324477923,67.648304576770386,68.236089829062863,68.823875081355339,69.411660333647816,97.873064465823902,98.824120982119055,99.775177498414209,100.726234014709360,101.677290531004520};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000,61.000000000000000,66.000000000000000,71.000000000000000,76.000000000000000,81.000000000000000,86.000000000000000,91.000000000000000,96.000000000000000,101.000000000000000,106.000000000000000,111.000000000000000,116.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,21.000000000000000,41.000000000000000,61.000000000000000,81.000000000000000,101.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3,2));
ResRA = new double[]{1.000000000000000,21.000000000000000,41.000000000000000,61.000000000000000,81.000000000000000,101.000000000000000};
ResRA.Reshape(new ILDimension(1,1,3,2));
ResIAR = new double[]{1.000000000000000,21.000000000000000,41.000000000000000,61.000000000000000,81.000000000000000,101.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{7.000000000000000,-5.000000000000000,47.000000000000000,-5.000000000000000,87.000000000000000,-5.000000000000000,127.000000000000000,-5.000000000000000,167.000000000000000,-5.000000000000000,207.000000000000000,-5.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3,2));
ResRA = new double[]{3.500000000000000,-2.500000000000000,23.500000000000000,-2.500000000000000,43.500000000000000,-2.500000000000000,63.500000000000000,-2.500000000000000,83.500000000000000,-2.500000000000000,103.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,2,3,2));
ResIAR = new double[]{3.500000000000000,-2.500000000000000,23.500000000000000,-2.500000000000000,43.500000000000000,-2.500000000000000,63.500000000000000,-2.500000000000000,83.500000000000000,-2.500000000000000,103.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{18.000000000000000,-7.500000000000000,-7.500000000000000,78.000000000000000,-7.500000000000000,-7.500000000000000,138.000000000000000,-7.500000000000000,-7.500000000000000,198.000000000000000,-7.500000000000000,-7.500000000000000,258.000000000000000,-7.500000000000000,-7.500000000000000,318.000000000000000,-7.500000000000000,-7.500000000000000};
ResultI = new double[]{0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3,2));
ResRA = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000,26.000000000000000,-2.500000000000000,-2.500000000000000,46.000000000000000,-2.500000000000000,-2.500000000000000,66.000000000000000,-2.500000000000000,-2.500000000000000,86.000000000000000,-2.500000000000000,-2.500000000000000,106.000000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,3,3,2));
ResIAR = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000,26.000000000000000,-2.500000000000000,-2.500000000000000,46.000000000000000,-2.500000000000000,-2.500000000000000,66.000000000000000,-2.500000000000000,-2.500000000000000,86.000000000000000,-2.500000000000000,-2.500000000000000,106.000000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{34.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,114.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,194.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,274.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,354.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,434.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000};
ResultI = new double[]{0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3,2));
ResRA = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,28.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,48.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,68.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,88.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,108.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,4,3,2));
ResIAR = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,28.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,48.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,68.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,88.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,108.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{34.000000000000000,-18.989356881873896,4.489356881873896,4.489356881873896,-18.989356881873896,114.000000000000000,-25.169696769372845,20.669696769372845,20.669696769372845,-25.169696769372845,194.000000000000000,-31.350036656871794,36.850036656871794,36.850036656871794,-31.350036656871794,274.000000000000000,-37.530376544370746,53.030376544370746,53.030376544370746,-37.530376544370746,354.000000000000000,-43.710716431869692,69.210716431869685,69.210716431869685,-43.710716431869692,434.000000000000000,-49.891056319368644,85.391056319368644,85.391056319368644,-49.891056319368644};
ResultI = new double[]{0.000000000000000,-2.767412836308555,-8.281994095230607,8.281994095230607,2.767412836308555,0.000000000000000,-21.788543162211624,-20.037699141080068,20.037699141080068,21.788543162211624,0.000000000000000,-40.809673488114697,-31.793404186929532,31.793404186929532,40.809673488114697,0.000000000000000,-59.830803814017770,-43.549109232778996,43.549109232778996,59.830803814017770,0.000000000000000,-78.851934139920829,-55.304814278628456,55.304814278628456,78.851934139920829,0.000000000000000,-97.873064465823902,-67.060519324477923,67.060519324477923,97.873064465823902};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3,2));
ResRA = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779,22.800000000000001,-5.033939353874569,4.133939353874569,4.133939353874569,-5.033939353874569,38.799999999999997,-6.270007331374359,7.370007331374358,7.370007331374358,-6.270007331374359,54.799999999999997,-7.506075308874149,10.606075308874150,10.606075308874150,-7.506075308874149,70.799999999999997,-8.742143286373938,13.842143286373936,13.842143286373936,-8.742143286373938,86.799999999999997,-9.978211263873728,17.078211263873730,17.078211263873730,-9.978211263873728};
ResRA.Reshape(new ILDimension(1,5,3,2));
ResIAR = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779,22.800000000000001,-5.033939353874569,4.133939353874569,4.133939353874569,-5.033939353874569,38.799999999999997,-6.270007331374359,7.370007331374358,7.370007331374358,-6.270007331374359,54.799999999999997,-7.506075308874149,10.606075308874150,10.606075308874150,-7.506075308874149,70.799999999999997,-8.742143286373938,13.842143286373936,13.842143286373936,-8.742143286373938,86.799999999999997,-9.978211263873728,17.078211263873730,17.078211263873730,-9.978211263873728};
ResIAI = new double[]{0.000000000000000,0.553482567261711,1.656398819046121,-1.656398819046121,-0.553482567261711,0.000000000000000,4.357708632442325,4.007539828216014,-4.007539828216014,-4.357708632442325,0.000000000000000,8.161934697622939,6.358680837385906,-6.358680837385906,-8.161934697622939,0.000000000000000,11.966160762803554,8.709821846555800,-8.709821846555800,-11.966160762803554,0.000000000000000,15.770386827984165,11.060962855725691,-11.060962855725691,-15.770386827984165,0.000000000000000,19.574612893164780,13.412103864895585,-13.412103864895585,-19.574612893164780};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000,123.000000000000000,-1.000000000000000,133.000000000000000,-1.000000000000000,143.000000000000000,-1.000000000000000,153.000000000000000,-1.000000000000000,163.000000000000000,-1.000000000000000,173.000000000000000,-1.000000000000000,183.000000000000000,-1.000000000000000,193.000000000000000,-1.000000000000000,203.000000000000000,-1.000000000000000,213.000000000000000,-1.000000000000000,223.000000000000000,-1.000000000000000,233.000000000000000,-1.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,123.000000000000000,-1.000000000000000,163.000000000000000,-1.000000000000000,203.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3,2));
ResRA = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000,61.500000000000000,-0.500000000000000,81.500000000000000,-0.500000000000000,101.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,3,2));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000,61.500000000000000,-0.500000000000000,81.500000000000000,-0.500000000000000,101.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{16.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,96.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,176.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,256.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,336.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,416.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3,2));
ResRA = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,44.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,64.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,84.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,104.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2,3,2));
ResIAR = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,44.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,64.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,84.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,104.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{39.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,159.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,279.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,399.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,519.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,639.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,3,2));
ResRA = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,46.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,66.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,86.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,106.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3,3,2));
ResIAR = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,46.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,66.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,86.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,106.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,232.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,392.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,552.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,712.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,872.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3,2));
ResRA = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,29.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,49.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,69.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,89.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,109.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4,3,2));
ResIAR = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,29.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,49.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,69.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,89.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,109.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-38.287730758122741,0.309016994374950,9.787730758122740,-0.809016994374948,9.787730758122740,-0.809016994374948,-38.287730758122741,0.309016994374950,232.000000000000000,-4.000000000000000,-50.648410533120639,0.309016994374947,42.148410533120639,-0.809016994374947,42.148410533120639,-0.809016994374947,-50.648410533120639,0.309016994374947,392.000000000000000,-4.000000000000000,-63.009090308118537,0.309016994374950,74.509090308118544,-0.809016994374950,74.509090308118544,-0.809016994374950,-63.009090308118537,0.309016994374950,552.000000000000000,-4.000000000000000,-75.369770083116435,0.309016994374943,106.869770083116440,-0.809016994374943,106.869770083116440,-0.809016994374943,-75.369770083116435,0.309016994374943,712.000000000000000,-4.000000000000000,-87.730449858114326,0.309016994374950,139.230449858114330,-0.809016994374957,139.230449858114330,-0.809016994374957,-87.730449858114326,0.309016994374950,872.000000000000000,-4.000000000000000,-100.091129633112230,0.309016994374943,171.591129633112250,-0.809016994374943,171.591129633112250,-0.809016994374943,-100.091129633112230,0.309016994374943};
ResultI = new double[]{0.000000000000000,0.000000000000000,-6.485882188912264,0.951056516295154,-17.151773442753687,0.587785252292472,17.151773442753687,-0.587785252292472,6.485882188912264,-0.951056516295154,0.000000000000000,0.000000000000000,-44.528142840718402,0.951056516295154,-40.663183534452614,0.587785252292473,40.663183534452614,-0.587785252292473,44.528142840718402,-0.951056516295154,0.000000000000000,0.000000000000000,-82.570403492524548,0.951056516295154,-64.174593626151534,0.587785252292473,64.174593626151534,-0.587785252292473,82.570403492524548,-0.951056516295154,0.000000000000000,0.000000000000000,-120.612664144330690,0.951056516295154,-87.686003717850468,0.587785252292470,87.686003717850468,-0.587785252292470,120.612664144330690,-0.951056516295154,0.000000000000000,0.000000000000000,-158.654924796136810,0.951056516295154,-111.197413809549390,0.587785252292477,111.197413809549390,-0.587785252292477,158.654924796136810,-0.951056516295154,0.000000000000000,0.000000000000000,-196.697185447942960,0.951056516295154,-134.708823901248310,0.587785252292463,134.708823901248310,-0.587785252292463,196.697185447942960,-0.951056516295154};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,3,2));
ResRA = new double[]{7.199999999999999,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495,23.200000000000003,-0.400000000000000,-5.064841053312064,0.030901699437495,4.214841053312064,-0.080901699437495,4.214841053312064,-0.080901699437495,-5.064841053312064,0.030901699437495,39.200000000000003,-0.400000000000002,-6.300909030811853,0.030901699437495,7.450909030811854,-0.080901699437495,7.450909030811854,-0.080901699437495,-6.300909030811853,0.030901699437495,55.200000000000003,-0.400000000000002,-7.536977008311643,0.030901699437494,10.686977008311644,-0.080901699437494,10.686977008311644,-0.080901699437494,-7.536977008311643,0.030901699437494,71.199999999999989,-0.399999999999999,-8.773044985811433,0.030901699437495,13.923044985811433,-0.080901699437496,13.923044985811433,-0.080901699437496,-8.773044985811433,0.030901699437495,87.199999999999989,-0.399999999999999,-10.009112963311223,0.030901699437495,17.159112963311223,-0.080901699437494,17.159112963311223,-0.080901699437494,-10.009112963311223,0.030901699437495};
ResRA.Reshape(new ILDimension(2,5,3,2));
ResIAR = new double[]{7.199999999999999,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495,23.200000000000003,-0.400000000000000,-5.064841053312064,0.030901699437495,4.214841053312064,-0.080901699437495,4.214841053312064,-0.080901699437495,-5.064841053312064,0.030901699437495,39.200000000000003,-0.400000000000002,-6.300909030811853,0.030901699437495,7.450909030811854,-0.080901699437495,7.450909030811854,-0.080901699437495,-6.300909030811853,0.030901699437495,55.200000000000003,-0.400000000000002,-7.536977008311643,0.030901699437494,10.686977008311644,-0.080901699437494,10.686977008311644,-0.080901699437494,-7.536977008311643,0.030901699437494,71.199999999999989,-0.399999999999999,-8.773044985811433,0.030901699437495,13.923044985811433,-0.080901699437496,13.923044985811433,-0.080901699437496,-8.773044985811433,0.030901699437495,87.199999999999989,-0.399999999999999,-10.009112963311223,0.030901699437495,17.159112963311223,-0.080901699437494,17.159112963311223,-0.080901699437494,-10.009112963311223,0.030901699437495};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.648588218891226,-0.095105651629515,1.715177344275368,-0.058778525229247,-1.715177344275368,0.058778525229247,-0.648588218891226,0.095105651629515,0.000000000000000,0.000000000000000,4.452814284071840,-0.095105651629515,4.066318353445261,-0.058778525229247,-4.066318353445261,0.058778525229247,-4.452814284071840,0.095105651629515,0.000000000000000,0.000000000000000,8.257040349252454,-0.095105651629515,6.417459362615153,-0.058778525229247,-6.417459362615153,0.058778525229247,-8.257040349252454,0.095105651629515,0.000000000000000,0.000000000000000,12.061266414433069,-0.095105651629515,8.768600371785047,-0.058778525229247,-8.768600371785047,0.058778525229247,-12.061266414433069,0.095105651629515,0.000000000000000,0.000000000000000,15.865492479613682,-0.095105651629516,11.119741380954938,-0.058778525229248,-11.119741380954938,0.058778525229248,-15.865492479613682,0.095105651629516,0.000000000000000,0.000000000000000,19.669718544794293,-0.095105651629515,13.470882390124832,-0.058778525229246,-13.470882390124832,0.058778525229246,-19.669718544794293,0.095105651629515};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000,186.000000000000000,-1.500000000000000,-1.500000000000000,201.000000000000000,-1.500000000000000,-1.500000000000000,216.000000000000000,-1.500000000000000,-1.500000000000000,231.000000000000000,-1.500000000000000,-1.500000000000000,246.000000000000000,-1.500000000000000,-1.500000000000000,261.000000000000000,-1.500000000000000,-1.500000000000000,276.000000000000000,-1.500000000000000,-1.500000000000000,291.000000000000000,-1.500000000000000,-1.500000000000000,306.000000000000000,-1.500000000000000,-1.500000000000000,321.000000000000000,-1.500000000000000,-1.500000000000000,336.000000000000000,-1.500000000000000,-1.500000000000000,351.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,186.000000000000000,-1.500000000000000,-1.500000000000000,246.000000000000000,-1.500000000000000,-1.500000000000000,306.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3,2));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000,42.000000000000000,-0.500000000000000,-0.500000000000000,62.000000000000000,-0.500000000000000,-0.500000000000000,82.000000000000000,-0.500000000000000,-0.500000000000000,102.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1,3,2));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000,42.000000000000000,-0.500000000000000,-0.500000000000000,62.000000000000000,-0.500000000000000,-0.500000000000000,82.000000000000000,-0.500000000000000,-0.500000000000000,102.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{27.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,147.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,267.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,387.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,507.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,627.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3,2));
ResRA = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,44.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,64.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,84.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,104.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2,3,2));
ResIAR = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,44.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,64.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,84.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,104.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{63.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,243.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,423.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,603.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,783.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,963.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,3,2));
ResRA = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,27.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,47.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,67.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,87.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,107.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3,3,2));
ResIAR = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,27.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,47.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,67.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,87.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,107.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,354.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,594.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,834.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,1074.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,1314.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3,2));
ResRA = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,49.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,69.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,89.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,109.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,4,3,2));
ResIAR = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,49.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,69.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,89.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,109.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-57.895121628746530,1.287164595108754,-0.360113611983910,15.895121628746532,-0.704488531107295,-1.722562452017550,15.895121628746532,-1.722562452017550,-0.704488531107295,-57.895121628746530,-0.360113611983910,1.287164595108754,354.000000000000000,-6.000000000000000,-6.000000000000000,-76.436141291243374,1.287164595108754,-0.360113611983910,64.436141291243374,-0.704488531107294,-1.722562452017549,64.436141291243374,-1.722562452017549,-0.704488531107294,-76.436141291243374,-0.360113611983910,1.287164595108754,594.000000000000000,-6.000000000000000,-6.000000000000000,-94.977160953740224,1.287164595108754,-0.360113611983910,112.977160953740220,-0.704488531107297,-1.722562452017546,112.977160953740220,-1.722562452017546,-0.704488531107297,-94.977160953740224,-0.360113611983910,1.287164595108754,834.000000000000000,-6.000000000000000,-6.000000000000000,-113.518180616237060,1.287164595108740,-0.360113611983911,161.518180616237060,-0.704488531107284,-1.722562452017545,161.518180616237060,-1.722562452017545,-0.704488531107284,-113.518180616237060,-0.360113611983911,1.287164595108740,1074.000000000000000,-6.000000000000000,-6.000000000000000,-132.059200278733930,1.287164595108754,-0.360113611983910,210.059200278733900,-0.704488531107297,-1.722562452017546,210.059200278733900,-1.722562452017546,-0.704488531107297,-132.059200278733930,-0.360113611983910,1.287164595108754,1314.000000000000000,-6.000000000000000,-6.000000000000000,-150.600219941230760,1.287164595108747,-0.360113611983917,258.600219941230760,-0.704488531107277,-1.722562452017538,258.600219941230760,-1.722562452017538,-0.704488531107277,-150.600219941230760,-0.360113611983917,1.287164595108747};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,-11.155408057811126,1.158968207112914,1.694201341772547,-26.609338042569235,1.582307147660746,0.181048609216671,26.609338042569235,-0.181048609216671,-1.582307147660746,11.155408057811126,-1.694201341772547,-1.158968207112914,0.000000000000000,3.464101615137754,-3.464101615137754,-68.218799035520334,1.158968207112911,1.694201341772550,-61.876453180117622,1.582307147660747,0.181048609216669,61.876453180117622,-0.181048609216669,-1.582307147660747,68.218799035520334,-1.694201341772550,-1.158968207112911,0.000000000000000,3.464101615137754,-3.464101615137754,-125.282190013229550,1.158968207112917,1.694201341772544,-97.143568317666023,1.582307147660745,0.181048609216679,97.143568317666023,-0.181048609216679,-1.582307147660745,125.282190013229550,-1.694201341772544,-1.158968207112917,0.000000000000000,3.464101615137754,-3.464101615137754,-182.345580990938770,1.158968207112911,1.694201341772550,-132.410683455214410,1.582307147660747,0.181048609216669,132.410683455214410,-0.181048609216669,-1.582307147660747,182.345580990938770,-1.694201341772550,-1.158968207112911,0.000000000000000,3.464101615137754,-3.464101615137754,-239.408971968647960,1.158968207112917,1.694201341772544,-167.677798592762770,1.582307147660741,0.181048609216675,167.677798592762770,-0.181048609216675,-1.582307147660741,239.408971968647960,-1.694201341772544,-1.158968207112917,0.000000000000000,3.464101615137754,-3.464101615137754,-296.472362946357180,1.158968207112917,1.694201341772544,-202.944913730311160,1.582307147660727,0.181048609216661,202.944913730311160,-0.181048609216661,-1.582307147660727,296.472362946357180,-1.694201341772544,-1.158968207112917};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,3,2));
ResRA = new double[]{7.600000000000001,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132260,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132260,0.085810973007250,23.599999999999998,-0.400000000000000,-0.400000000000000,-5.095742752749558,0.085810973007250,-0.024007574132261,4.295742752749558,-0.046965902073820,-0.114837496801170,4.295742752749558,-0.114837496801170,-0.046965902073820,-5.095742752749558,-0.024007574132261,0.085810973007250,39.600000000000001,-0.400000000000001,-0.400000000000001,-6.331810730249348,0.085810973007250,-0.024007574132261,7.531810730249347,-0.046965902073820,-0.114837496801170,7.531810730249347,-0.114837496801170,-0.046965902073820,-6.331810730249348,-0.024007574132261,0.085810973007250,55.600000000000001,-0.400000000000001,-0.400000000000001,-7.567878707749138,0.085810973007250,-0.024007574132261,10.767878707749139,-0.046965902073819,-0.114837496801170,10.767878707749139,-0.114837496801170,-0.046965902073819,-7.567878707749138,-0.024007574132261,0.085810973007250,71.600000000000009,-0.400000000000001,-0.400000000000001,-8.803946685248928,0.085810973007250,-0.024007574132261,14.003946685248929,-0.046965902073821,-0.114837496801171,14.003946685248929,-0.114837496801171,-0.046965902073821,-8.803946685248928,-0.024007574132261,0.085810973007250,87.600000000000009,-0.400000000000001,-0.400000000000001,-10.040014662748717,0.085810973007251,-0.024007574132262,17.240014662748717,-0.046965902073818,-0.114837496801169,17.240014662748717,-0.114837496801169,-0.046965902073818,-10.040014662748717,-0.024007574132262,0.085810973007251};
ResRA.Reshape(new ILDimension(3,5,3,2));
ResIAR = new double[]{7.600000000000001,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132260,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132260,0.085810973007250,23.599999999999998,-0.400000000000000,-0.400000000000000,-5.095742752749558,0.085810973007250,-0.024007574132261,4.295742752749558,-0.046965902073820,-0.114837496801170,4.295742752749558,-0.114837496801170,-0.046965902073820,-5.095742752749558,-0.024007574132261,0.085810973007250,39.600000000000001,-0.400000000000001,-0.400000000000001,-6.331810730249348,0.085810973007250,-0.024007574132261,7.531810730249347,-0.046965902073820,-0.114837496801170,7.531810730249347,-0.114837496801170,-0.046965902073820,-6.331810730249348,-0.024007574132261,0.085810973007250,55.600000000000001,-0.400000000000001,-0.400000000000001,-7.567878707749138,0.085810973007250,-0.024007574132261,10.767878707749139,-0.046965902073819,-0.114837496801170,10.767878707749139,-0.114837496801170,-0.046965902073819,-7.567878707749138,-0.024007574132261,0.085810973007250,71.600000000000009,-0.400000000000001,-0.400000000000001,-8.803946685248928,0.085810973007250,-0.024007574132261,14.003946685248929,-0.046965902073821,-0.114837496801171,14.003946685248929,-0.114837496801171,-0.046965902073821,-8.803946685248928,-0.024007574132261,0.085810973007250,87.600000000000009,-0.400000000000001,-0.400000000000001,-10.040014662748717,0.085810973007251,-0.024007574132262,17.240014662748717,-0.046965902073818,-0.114837496801169,17.240014662748717,-0.114837496801169,-0.046965902073818,-10.040014662748717,-0.024007574132262,0.085810973007251};
ResIAI = new double[]{0.000000000000000,-0.230940107675850,0.230940107675850,0.743693870520742,-0.077264547140861,-0.112946756118170,1.773955869504616,-0.105487143177383,-0.012069907281111,-1.773955869504616,0.012069907281111,0.105487143177383,-0.743693870520742,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,4.547919935701356,-0.077264547140861,-0.112946756118170,4.125096878674508,-0.105487143177383,-0.012069907281111,-4.125096878674508,0.012069907281111,0.105487143177383,-4.547919935701356,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,8.352146000881971,-0.077264547140861,-0.112946756118170,6.476237887844401,-0.105487143177383,-0.012069907281112,-6.476237887844401,0.012069907281112,0.105487143177383,-8.352146000881971,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,12.156372066062582,-0.077264547140860,-0.112946756118170,8.827378897014294,-0.105487143177384,-0.012069907281111,-8.827378897014294,0.012069907281111,0.105487143177384,-12.156372066062582,0.112946756118170,0.077264547140860,0.000000000000000,-0.230940107675854,0.230940107675854,15.960598131243197,-0.077264547140861,-0.112946756118170,11.178519906184187,-0.105487143177383,-0.012069907281112,-11.178519906184187,0.012069907281112,0.105487143177383,-15.960598131243197,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675854,0.230940107675854,19.764824196423813,-0.077264547140861,-0.112946756118170,13.529660915354079,-0.105487143177383,-0.012069907281111,-13.529660915354079,0.012069907281111,0.105487143177383,-19.764824196423813,0.112946756118170,0.077264547140861};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,110.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,130.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,150.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,190.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,210.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,230.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,250.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,270.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,290.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,310.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,330.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,350.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,370.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,390.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,410.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,430.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,450.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,470.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,250.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,330.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,410.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3,2));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,62.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,82.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,102.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,3,2));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,62.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,82.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,102.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{40.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,200.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,360.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,520.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,680.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,840.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,3,2));
ResRA = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,65.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,85.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,105.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2,3,2));
ResIAR = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,65.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,85.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,105.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{90.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,330.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,570.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,810.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1050.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1290.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,3,2));
ResRA = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,67.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,87.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,107.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,3,3,2));
ResIAR = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,67.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,87.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,107.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,480.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,800.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1120.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1440.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1760.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3,2));
ResRA = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,70.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,90.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,110.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,4,3,2));
ResIAR = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,70.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,90.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,110.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-77.811529493745269,2.520147021340203,0.618033988749893,-1.284079043840410,22.811529493745269,-0.442463484164950,-1.618033988749895,-2.793604493334843,22.811529493745269,-2.793604493334843,-1.618033988749895,-0.442463484164950,-77.811529493745269,-1.284079043840410,0.618033988749893,2.520147021340203,480.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-102.532889043741060,2.520147021340204,0.618033988749900,-1.284079043840411,87.532889043741065,-0.442463484164950,-1.618033988749900,-2.793604493334843,87.532889043741065,-2.793604493334843,-1.618033988749900,-0.442463484164950,-102.532889043741060,-1.284079043840411,0.618033988749900,2.520147021340204,800.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-127.254248593736860,2.520147021340200,0.618033988749900,-1.284079043840414,152.254248593736860,-0.442463484164946,-1.618033988749914,-2.793604493334840,152.254248593736860,-2.793604493334840,-1.618033988749914,-0.442463484164946,-127.254248593736860,-1.284079043840414,0.618033988749900,2.520147021340200,1120.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-151.975608143732670,2.520147021340193,0.618033988749886,-1.284079043840407,216.975608143732670,-0.442463484164946,-1.618033988749886,-2.793604493334840,216.975608143732670,-2.793604493334840,-1.618033988749886,-0.442463484164946,-151.975608143732670,-1.284079043840407,0.618033988749886,2.520147021340193,1440.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-176.696967693728450,2.520147021340200,0.618033988749886,-1.284079043840414,281.696967693728420,-0.442463484164954,-1.618033988749886,-2.793604493334847,281.696967693728420,-2.793604493334847,-1.618033988749886,-0.442463484164954,-176.696967693728450,-1.284079043840414,0.618033988749886,2.520147021340200,1760.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-201.418327243724260,2.520147021340193,0.618033988749900,-1.284079043840421,346.418327243724260,-0.442463484164932,-1.618033988749914,-2.793604493334840,346.418327243724260,-2.793604493334840,-1.618033988749914,-0.442463484164932,-201.418327243724260,-1.284079043840421,0.618033988749900,2.520147021340193};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-16.775990443005142,1.284079043840414,1.902113032590307,2.520147021340200,-36.654687894677259,2.793604493334840,1.175570504584947,-0.442463484164950,36.654687894677259,0.442463484164950,-1.175570504584947,-2.793604493334840,16.775990443005142,-2.520147021340200,-1.902113032590307,-1.284079043840414,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-92.860511746617419,1.284079043840411,1.902113032590307,2.520147021340204,-83.677508078075107,2.793604493334843,1.175570504584947,-0.442463484164950,83.677508078075107,0.442463484164950,-1.175570504584947,-2.793604493334843,92.860511746617419,-2.520147021340204,-1.902113032590307,-1.284079043840411,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-168.945033050229710,1.284079043840414,1.902113032590307,2.520147021340200,-130.700328261472980,2.793604493334836,1.175570504584940,-0.442463484164950,130.700328261472980,0.442463484164950,-1.175570504584940,-2.793604493334836,168.945033050229710,-2.520147021340200,-1.902113032590307,-1.284079043840414,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-245.029554353842000,1.284079043840407,1.902113032590307,2.520147021340193,-177.723148444870820,2.793604493334840,1.175570504584954,-0.442463484164946,177.723148444870820,0.442463484164946,-1.175570504584954,-2.793604493334840,245.029554353842000,-2.520147021340193,-1.902113032590307,-1.284079043840407,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-321.114075657454240,1.284079043840414,1.902113032590307,2.520147021340200,-224.745968628268680,2.793604493334833,1.175570504584954,-0.442463484164939,224.745968628268680,0.442463484164939,-1.175570504584954,-2.793604493334833,321.114075657454240,-2.520147021340200,-1.902113032590307,-1.284079043840414,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-397.198596961066530,1.284079043840407,1.902113032590307,2.520147021340208,-271.768788811666470,2.793604493334840,1.175570504584954,-0.442463484164961,271.768788811666470,0.442463484164961,-1.175570504584954,-2.793604493334840,397.198596961066530,-2.520147021340208,-1.902113032590307,-1.284079043840407};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,3,2));
ResRA = new double[]{7.999999999999999,-0.400000000000000,-0.399999999999999,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192020,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192020,0.030901699437495,0.126007351067010,24.000000000000000,-0.399999999999999,-0.399999999999999,-0.399999999999999,-5.126644452187053,0.126007351067010,0.030901699437495,-0.064203952192020,4.376644452187053,-0.022123174208247,-0.080901699437495,-0.139680224666742,4.376644452187053,-0.139680224666742,-0.080901699437495,-0.022123174208247,-5.126644452187053,-0.064203952192020,0.030901699437495,0.126007351067010,40.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-6.362712429686843,0.126007351067010,0.030901699437495,-0.064203952192021,7.612712429686843,-0.022123174208247,-0.080901699437495,-0.139680224666742,7.612712429686843,-0.139680224666742,-0.080901699437495,-0.022123174208247,-6.362712429686843,-0.064203952192021,0.030901699437495,0.126007351067010,56.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-7.598780407186633,0.126007351067010,0.030901699437494,-0.064203952192020,10.848780407186634,-0.022123174208247,-0.080901699437494,-0.139680224666742,10.848780407186634,-0.139680224666742,-0.080901699437494,-0.022123174208247,-7.598780407186633,-0.064203952192020,0.030901699437494,0.126007351067010,72.000000000000000,-0.400000000000002,-0.400000000000006,-0.400000000000002,-8.834848384686422,0.126007351067010,0.030901699437495,-0.064203952192021,14.084848384686422,-0.022123174208248,-0.080901699437495,-0.139680224666743,14.084848384686422,-0.139680224666743,-0.080901699437495,-0.022123174208248,-8.834848384686422,-0.064203952192021,0.030901699437495,0.126007351067010,88.000000000000000,-0.400000000000002,-0.400000000000006,-0.400000000000002,-10.070916362186212,0.126007351067011,0.030901699437495,-0.064203952192021,17.320916362186214,-0.022123174208247,-0.080901699437494,-0.139680224666742,17.320916362186214,-0.139680224666742,-0.080901699437494,-0.022123174208247,-10.070916362186212,-0.064203952192021,0.030901699437495,0.126007351067011};
ResRA.Reshape(new ILDimension(4,5,3,2));
ResIAR = new double[]{7.999999999999999,-0.400000000000000,-0.399999999999999,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192020,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192020,0.030901699437495,0.126007351067010,24.000000000000000,-0.399999999999999,-0.399999999999999,-0.399999999999999,-5.126644452187053,0.126007351067010,0.030901699437495,-0.064203952192020,4.376644452187053,-0.022123174208247,-0.080901699437495,-0.139680224666742,4.376644452187053,-0.139680224666742,-0.080901699437495,-0.022123174208247,-5.126644452187053,-0.064203952192020,0.030901699437495,0.126007351067010,40.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-6.362712429686843,0.126007351067010,0.030901699437495,-0.064203952192021,7.612712429686843,-0.022123174208247,-0.080901699437495,-0.139680224666742,7.612712429686843,-0.139680224666742,-0.080901699437495,-0.022123174208247,-6.362712429686843,-0.064203952192021,0.030901699437495,0.126007351067010,56.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-7.598780407186633,0.126007351067010,0.030901699437494,-0.064203952192020,10.848780407186634,-0.022123174208247,-0.080901699437494,-0.139680224666742,10.848780407186634,-0.139680224666742,-0.080901699437494,-0.022123174208247,-7.598780407186633,-0.064203952192020,0.030901699437494,0.126007351067010,72.000000000000000,-0.400000000000002,-0.400000000000006,-0.400000000000002,-8.834848384686422,0.126007351067010,0.030901699437495,-0.064203952192021,14.084848384686422,-0.022123174208248,-0.080901699437495,-0.139680224666743,14.084848384686422,-0.139680224666743,-0.080901699437495,-0.022123174208248,-8.834848384686422,-0.064203952192021,0.030901699437495,0.126007351067010,88.000000000000000,-0.400000000000002,-0.400000000000006,-0.400000000000002,-10.070916362186212,0.126007351067011,0.030901699437495,-0.064203952192021,17.320916362186214,-0.022123174208247,-0.080901699437494,-0.139680224666742,17.320916362186214,-0.139680224666742,-0.080901699437494,-0.022123174208247,-10.070916362186212,-0.064203952192021,0.030901699437495,0.126007351067011};
ResIAI = new double[]{0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,0.838799522150257,-0.064203952192021,-0.095105651629515,-0.126007351067010,1.832734394733863,-0.139680224666742,-0.058778525229247,0.022123174208248,-1.832734394733863,-0.022123174208248,0.058778525229247,0.139680224666742,-0.838799522150257,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.399999999999999,0.000000000000000,0.399999999999999,4.643025587330872,-0.064203952192021,-0.095105651629515,-0.126007351067010,4.183875403903755,-0.139680224666742,-0.058778525229247,0.022123174208247,-4.183875403903755,-0.022123174208247,0.058778525229247,0.139680224666742,-4.643025587330872,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,8.447251652511485,-0.064203952192021,-0.095105651629515,-0.126007351067010,6.535016413073648,-0.139680224666742,-0.058778525229248,0.022123174208247,-6.535016413073648,-0.022123174208247,0.058778525229248,0.139680224666742,-8.447251652511485,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,12.251477717692099,-0.064203952192020,-0.095105651629515,-0.126007351067010,8.886157422243542,-0.139680224666742,-0.058778525229247,0.022123174208247,-8.886157422243542,-0.022123174208247,0.058778525229247,0.139680224666742,-12.251477717692099,0.126007351067010,0.095105651629515,0.064203952192020,0.000000000000000,-0.400000000000002,0.000000000000000,0.400000000000002,16.055703782872712,-0.064203952192021,-0.095105651629516,-0.126007351067011,11.237298431413434,-0.139680224666741,-0.058778525229249,0.022123174208247,-11.237298431413434,-0.022123174208247,0.058778525229249,0.139680224666741,-16.055703782872712,0.126007351067011,0.095105651629516,0.064203952192021,0.000000000000000,-0.400000000000002,0.000000000000000,0.400000000000002,19.859929848053326,-0.064203952192021,-0.095105651629517,-0.126007351067011,13.588439440583326,-0.139680224666742,-0.058778525229247,0.022123174208248,-13.588439440583326,-0.022123174208248,0.058778525229247,0.139680224666742,-19.859929848053326,0.126007351067011,0.095105651629517,0.064203952192021};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,315.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,340.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,365.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,390.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,415.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,440.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,465.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,490.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,515.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,540.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,565.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,590.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,1,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,255.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,455.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,655.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,855.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1055.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3,2));
ResRA = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,65.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,85.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,105.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,2,3,2));
ResIAR = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,65.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,85.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,105.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{120.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,420.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,720.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1020.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1320.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1620.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3,2));
ResRA = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,68.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,88.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,108.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,3,3,2));
ResIAR = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,68.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,88.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,108.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1010.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1410.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1810.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,70.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,90.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,110.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,4,3,2));
ResIAR = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,70.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,90.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,110.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-98.036954353118972,4.045084971874739,1.545084971874741,0.000000000000003,-2.499999999999996,30.536954353118958,-0.000000000000002,-1.545084971874738,-2.500000000000001,-4.045084971874740,30.536954353118958,-4.045084971874740,-2.500000000000001,-1.545084971874738,-0.000000000000002,-98.036954353118972,-2.499999999999996,0.000000000000003,1.545084971874741,4.045084971874739,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-128.938653790613700,4.045084971874736,1.545084971874737,-0.000000000000000,-2.500000000000000,111.438653790613700,0.000000000000001,-1.545084971874737,-2.500000000000000,-4.045084971874737,111.438653790613700,-4.045084971874737,-2.500000000000000,-1.545084971874737,0.000000000000001,-128.938653790613700,-2.500000000000000,-0.000000000000000,1.545084971874737,4.045084971874736,1010.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-159.840353228108430,4.045084971874726,1.545084971874741,0.000000000000004,-2.500000000000012,192.340353228108430,0.000000000000012,-1.545084971874746,-2.499999999999999,-4.045084971874725,192.340353228108430,-4.045084971874725,-2.499999999999999,-1.545084971874746,0.000000000000012,-159.840353228108430,-2.500000000000012,0.000000000000004,1.545084971874741,4.045084971874726,1410.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-190.742052665603180,4.045084971874727,1.545084971874729,0.000000000000000,-2.499999999999997,273.242052665603180,0.000000000000006,-1.545084971874728,-2.500000000000002,-4.045084971874735,273.242052665603180,-4.045084971874735,-2.500000000000002,-1.545084971874728,0.000000000000006,-190.742052665603180,-2.499999999999997,0.000000000000000,1.545084971874729,4.045084971874727,1810.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-221.643752103097940,4.045084971874740,1.545084971874740,0.000000000000003,-2.499999999999997,354.143752103097940,-0.000000000000011,-1.545084971874753,-2.500000000000005,-4.045084971874747,354.143752103097940,-4.045084971874747,-2.500000000000005,-1.545084971874753,-0.000000000000011,-221.643752103097940,-2.499999999999997,0.000000000000003,1.545084971874740,4.045084971874740,2210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-252.545451540592690,4.045084971874733,1.545084971874733,-0.000000000000004,-2.500000000000004,435.045451540592690,0.000000000000017,-1.545084971874730,-2.499999999999999,-4.045084971874746,435.045451540592690,-4.045084971874746,-2.499999999999999,-1.545084971874730,0.000000000000017,-252.545451540592690,-2.500000000000004,-0.000000000000004,1.545084971874733,4.045084971874733};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-23.347629344494312,1.314327780297837,2.126627020880101,2.628655560595667,3.440954801177931,-47.287822999077761,4.253254041760197,2.126627020880099,0.812299240582264,-1.314327780297834,47.287822999077761,1.314327780297834,-0.812299240582264,-2.126627020880099,-4.253254041760197,23.347629344494312,-3.440954801177931,-2.628655560595667,-2.126627020880101,-1.314327780297837,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-118.453280974009660,1.314327780297834,2.126627020880099,2.628655560595670,3.440954801177934,-106.066348228325080,4.253254041760203,2.126627020880104,0.812299240582267,-1.314327780297832,106.066348228325080,1.314327780297832,-0.812299240582267,-2.126627020880104,-4.253254041760203,118.453280974009660,-3.440954801177934,-2.628655560595670,-2.126627020880099,-1.314327780297834,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-213.558932603525020,1.314327780297832,2.126627020880102,2.628655560595666,3.440954801177937,-164.844873457572390,4.253254041760201,2.126627020880097,0.812299240582267,-1.314327780297838,164.844873457572390,1.314327780297838,-0.812299240582267,-2.126627020880097,-4.253254041760201,213.558932603525020,-3.440954801177937,-2.628655560595666,-2.126627020880102,-1.314327780297832,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-308.664584233040390,1.314327780297828,2.126627020880103,2.628655560595681,3.440954801177925,-223.623398686819680,4.253254041760194,2.126627020880100,0.812299240582256,-1.314327780297837,223.623398686819680,1.314327780297837,-0.812299240582256,-2.126627020880100,-4.253254041760194,308.664584233040390,-3.440954801177925,-2.628655560595681,-2.126627020880103,-1.314327780297828,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-403.770235862555690,1.314327780297832,2.126627020880102,2.628655560595666,3.440954801177937,-282.401923916067010,4.253254041760201,2.126627020880107,0.812299240582263,-1.314327780297830,282.401923916067010,1.314327780297830,-0.812299240582263,-2.126627020880107,-4.253254041760201,403.770235862555690,-3.440954801177937,-2.628655560595666,-2.126627020880102,-1.314327780297832,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-498.875887492071060,1.314327780297828,2.126627020880109,2.628655560595659,3.440954801177941,-341.180449145314360,4.253254041760209,2.126627020880093,0.812299240582277,-1.314327780297838,341.180449145314360,1.314327780297838,-0.812299240582277,-2.126627020880093,-4.253254041760209,498.875887492071060,-3.440954801177941,-2.628655560595659,-2.126627020880109,-1.314327780297828};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3,2));
ResRA = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874990,0.061803398874990,0.000000000000000,-0.100000000000000,1.221478174124758,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,1.221478174124758,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874990,24.399999999999999,-0.399999999999998,-0.400000000000000,-0.400000000000000,-0.399999999999998,-5.157546151624548,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,4.457546151624548,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,4.457546151624548,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-5.157546151624548,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,40.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-6.393614129124338,0.161803398874989,0.061803398874990,0.000000000000000,-0.100000000000000,7.693614129124337,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,7.693614129124337,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-6.393614129124338,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874989,56.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-7.629682106624128,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,10.929682106624128,0.000000000000000,-0.061803398874989,-0.100000000000000,-0.161803398874989,10.929682106624128,-0.161803398874989,-0.100000000000000,-0.061803398874989,0.000000000000000,-7.629682106624128,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,72.400000000000006,-0.400000000000006,-0.400000000000000,-0.400000000000000,-0.400000000000006,-8.865750084123919,0.161803398874989,0.061803398874990,0.000000000000001,-0.100000000000000,14.165750084123918,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,14.165750084123918,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-8.865750084123919,-0.100000000000000,0.000000000000001,0.061803398874990,0.161803398874989,88.400000000000006,-0.400000000000006,-0.400000000000000,-0.400000000000000,-0.400000000000006,-10.101818061623709,0.161803398874990,0.061803398874990,-0.000000000000000,-0.100000000000000,17.401818061623707,-0.000000000000000,-0.061803398874989,-0.100000000000000,-0.161803398874991,17.401818061623707,-0.161803398874991,-0.100000000000000,-0.061803398874989,-0.000000000000000,-10.101818061623709,-0.100000000000000,-0.000000000000000,0.061803398874990,0.161803398874990};
ResRA.Reshape(new ILDimension(5,5,3,2));
ResIAR = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874990,0.061803398874990,0.000000000000000,-0.100000000000000,1.221478174124758,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,1.221478174124758,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874990,24.399999999999999,-0.399999999999998,-0.400000000000000,-0.400000000000000,-0.399999999999998,-5.157546151624548,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,4.457546151624548,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,4.457546151624548,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-5.157546151624548,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,40.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-6.393614129124338,0.161803398874989,0.061803398874990,0.000000000000000,-0.100000000000000,7.693614129124337,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,7.693614129124337,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-6.393614129124338,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874989,56.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-7.629682106624128,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,10.929682106624128,0.000000000000000,-0.061803398874989,-0.100000000000000,-0.161803398874989,10.929682106624128,-0.161803398874989,-0.100000000000000,-0.061803398874989,0.000000000000000,-7.629682106624128,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,72.400000000000006,-0.400000000000006,-0.400000000000000,-0.400000000000000,-0.400000000000006,-8.865750084123919,0.161803398874989,0.061803398874990,0.000000000000001,-0.100000000000000,14.165750084123918,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,14.165750084123918,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-8.865750084123919,-0.100000000000000,0.000000000000001,0.061803398874990,0.161803398874989,88.400000000000006,-0.400000000000006,-0.400000000000000,-0.400000000000000,-0.400000000000006,-10.101818061623709,0.161803398874990,0.061803398874990,-0.000000000000000,-0.100000000000000,17.401818061623707,-0.000000000000000,-0.061803398874989,-0.100000000000000,-0.161803398874991,17.401818061623707,-0.161803398874991,-0.100000000000000,-0.061803398874989,-0.000000000000000,-10.101818061623709,-0.100000000000000,-0.000000000000000,0.061803398874990,0.161803398874990};
ResIAI = new double[]{0.000000000000000,-0.550552768188469,-0.129967878493163,0.129967878493163,0.550552768188469,0.933905173779772,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,1.891512919963110,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-1.891512919963110,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-0.933905173779772,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188469,-0.129967878493162,0.129967878493162,0.550552768188469,4.738131238960387,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,4.242653929133004,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-4.242653929133004,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-4.738131238960387,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188470,-0.129967878493162,0.129967878493162,0.550552768188470,8.542357304141001,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047118,6.593794938302895,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-6.593794938302895,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-8.542357304141001,0.137638192047118,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188470,-0.129967878493162,0.129967878493162,0.550552768188470,12.346583369321616,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,8.944935947472789,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-8.944935947472789,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-12.346583369321616,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188470,-0.129967878493164,0.129967878493164,0.550552768188470,16.150809434502229,-0.052573111211915,-0.085065080835204,-0.105146222423827,-0.137638192047119,11.296076956642683,-0.170130161670408,-0.085065080835205,-0.032491969623291,0.052573111211913,-11.296076956642683,-0.052573111211913,0.032491969623291,0.085065080835205,0.170130161670408,-16.150809434502229,0.137638192047119,0.105146222423827,0.085065080835204,0.052573111211915,0.000000000000000,-0.550552768188470,-0.129967878493164,0.129967878493164,0.550552768188470,19.955035499682843,-0.052573111211915,-0.085065080835204,-0.105146222423826,-0.137638192047119,13.647217965812573,-0.170130161670408,-0.085065080835203,-0.032491969623291,0.052573111211914,-13.647217965812573,-0.052573111211914,0.032491969623291,0.085065080835203,0.170130161670408,-19.955035499682843,0.137638192047119,0.105146222423826,0.085065080835204,0.052573111211915};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000,315.000000000000000,-36.000000000000000,30.000000000000000,63.000000000000000,30.000000000000000,-36.000000000000000,340.000000000000000,-38.500000000000000,32.500000000000000,68.000000000000000,32.500000000000000,-38.500000000000000,365.000000000000000,-41.000000000000000,35.000000000000000,73.000000000000000,35.000000000000000,-41.000000000000000,390.000000000000000,-43.500000000000000,37.500000000000000,78.000000000000000,37.500000000000000,-43.500000000000000,415.000000000000000,-46.000000000000000,40.000000000000000,83.000000000000000,40.000000000000000,-46.000000000000000,440.000000000000000,-48.500000000000000,42.500000000000000,88.000000000000000,42.500000000000000,-48.500000000000000,465.000000000000000,-51.000000000000000,45.000000000000000,93.000000000000000,45.000000000000000,-51.000000000000000,490.000000000000000,-53.500000000000000,47.500000000000000,98.000000000000000,47.500000000000000,-53.500000000000000,515.000000000000000,-56.000000000000000,50.000000000000000,103.000000000000000,50.000000000000000,-56.000000000000000,540.000000000000000,-58.500000000000000,52.500000000000000,108.000000000000000,52.500000000000000,-58.500000000000000,565.000000000000000,-61.000000000000000,55.000000000000000,113.000000000000000,55.000000000000000,-61.000000000000000,590.000000000000000,-63.500000000000000,57.500000000000000,118.000000000000000,57.500000000000000,-63.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122,0.000000000000000,-51.961524227066313,-55.425625842204070,0.000000000000000,55.425625842204070,51.961524227066313,0.000000000000000,-56.291651245988511,-59.755752861126261,0.000000000000000,59.755752861126261,56.291651245988511,0.000000000000000,-60.621778264910702,-64.085879880048452,0.000000000000000,64.085879880048452,60.621778264910702,0.000000000000000,-64.951905283832900,-68.416006898970650,0.000000000000000,68.416006898970650,64.951905283832900,0.000000000000000,-69.282032302755084,-72.746133917892848,0.000000000000000,72.746133917892848,69.282032302755084,0.000000000000000,-73.612159321677282,-77.076260936815032,0.000000000000000,77.076260936815032,73.612159321677282,0.000000000000000,-77.942286340599480,-81.406387955737230,0.000000000000000,81.406387955737230,77.942286340599480,0.000000000000000,-82.272413359521664,-85.736514974659414,0.000000000000000,85.736514974659414,82.272413359521664,0.000000000000000,-86.602540378443862,-90.066641993581612,0.000000000000000,90.066641993581612,86.602540378443862,0.000000000000000,-90.932667397366046,-94.396769012503810,0.000000000000000,94.396769012503810,90.932667397366046,0.000000000000000,-95.262794416288244,-98.726896031425994,0.000000000000000,98.726896031425994,95.262794416288244,0.000000000000000,-99.592921435210442,-103.057023050348190,0.000000000000000,103.057023050348190,99.592921435210442};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3,2));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(6,0,3,2));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,315.000000000000000,-36.000000000000000,30.000000000000000,63.000000000000000,30.000000000000000,-36.000000000000000,415.000000000000000,-46.000000000000000,40.000000000000000,83.000000000000000,40.000000000000000,-46.000000000000000,515.000000000000000,-56.000000000000000,50.000000000000000,103.000000000000000,50.000000000000000,-56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-51.961524227066313,-55.425625842204070,0.000000000000000,55.425625842204070,51.961524227066313,0.000000000000000,-69.282032302755084,-72.746133917892848,0.000000000000000,72.746133917892848,69.282032302755084,0.000000000000000,-86.602540378443862,-90.066641993581612,0.000000000000000,90.066641993581612,86.602540378443862};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,3,2));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333,52.500000000000000,-6.000000000000000,5.000000000000000,10.500000000000000,5.000000000000000,-6.000000000000000,69.166666666666671,-7.666666666666667,6.666666666666667,13.833333333333334,6.666666666666667,-7.666666666666667,85.833333333333329,-9.333333333333334,8.333333333333334,17.166666666666668,8.333333333333334,-9.333333333333334};
ResRA.Reshape(new ILDimension(6,1,3,2));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333,52.500000000000000,-6.000000000000000,5.000000000000000,10.500000000000000,5.000000000000000,-6.000000000000000,69.166666666666671,-7.666666666666667,6.666666666666667,13.833333333333334,6.666666666666667,-7.666666666666667,85.833333333333329,-9.333333333333334,8.333333333333334,17.166666666666668,8.333333333333334,-9.333333333333334};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000,0.000000000000000,2.886751345948129,3.464101615137755,0.000000000000000,-3.464101615137755,-2.886751345948129,0.000000000000000,5.773502691896257,6.350852961085884,0.000000000000000,-6.350852961085884,-5.773502691896257,0.000000000000000,8.660254037844386,9.237604307034012,0.000000000000000,-9.237604307034012,-8.660254037844386,0.000000000000000,11.547005383792515,12.124355652982141,0.000000000000000,-12.124355652982141,-11.547005383792515,0.000000000000000,14.433756729740644,15.011106998930268,0.000000000000000,-15.011106998930268,-14.433756729740644};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new double[]{55.000000000000000,-14.500000000000000,2.500000000000000,11.000000000000000,2.500000000000000,-14.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,255.000000000000000,-34.500000000000000,22.500000000000000,51.000000000000000,22.500000000000000,-34.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,455.000000000000000,-54.500000000000000,42.500000000000000,91.000000000000000,42.500000000000000,-54.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,655.000000000000000,-74.500000000000000,62.500000000000000,131.000000000000000,62.500000000000000,-74.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,855.000000000000000,-94.500000000000000,82.500000000000000,171.000000000000000,82.500000000000000,-94.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,1055.000000000000000,-114.500000000000000,102.500000000000000,211.000000000000000,102.500000000000000,-114.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000};
ResultI = new double[]{0.000000000000000,-4.330127018922193,-11.258330249197702,0.000000000000000,11.258330249197702,4.330127018922193,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-38.971143170299740,-45.899346400575247,0.000000000000000,45.899346400575247,38.971143170299740,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-73.612159321677282,-80.540362551952796,0.000000000000000,80.540362551952796,73.612159321677282,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-108.253175473054820,-115.181378703330340,0.000000000000000,115.181378703330340,108.253175473054820,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-142.894191624432380,-149.822394854707880,0.000000000000000,149.822394854707880,142.894191624432380,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-177.535207775809910,-184.463411006085410,0.000000000000000,184.463411006085410,177.535207775809910,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,3,2));
ResRA = new double[]{4.583333333333333,-1.208333333333333,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,21.250000000000000,-2.875000000000000,1.875000000000000,4.250000000000000,1.875000000000000,-2.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,37.916666666666664,-4.541666666666667,3.541666666666667,7.583333333333333,3.541666666666667,-4.541666666666667,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,54.583333333333336,-6.208333333333333,5.208333333333333,10.916666666666666,5.208333333333333,-6.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,71.250000000000000,-7.875000000000000,6.875000000000000,14.250000000000000,6.875000000000000,-7.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,87.916666666666671,-9.541666666666666,8.541666666666666,17.583333333333332,8.541666666666666,-9.541666666666666,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResRA.Reshape(new ILDimension(6,2,3,2));
ResIAR = new double[]{4.583333333333333,-1.208333333333333,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,21.250000000000000,-2.875000000000000,1.875000000000000,4.250000000000000,1.875000000000000,-2.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,37.916666666666664,-4.541666666666667,3.541666666666667,7.583333333333333,3.541666666666667,-4.541666666666667,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,54.583333333333336,-6.208333333333333,5.208333333333333,10.916666666666666,5.208333333333333,-6.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,71.250000000000000,-7.875000000000000,6.875000000000000,14.250000000000000,6.875000000000000,-7.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,87.916666666666671,-9.541666666666666,8.541666666666666,17.583333333333332,8.541666666666666,-9.541666666666666,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResIAI = new double[]{0.000000000000000,0.360843918243516,0.938194187433142,0.000000000000000,-0.938194187433142,-0.360843918243516,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,3.247595264191645,3.824945533381271,0.000000000000000,-3.824945533381271,-3.247595264191645,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,6.134346610139773,6.711696879329399,0.000000000000000,-6.711696879329399,-6.134346610139773,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,9.021097956087901,9.598448225277528,0.000000000000000,-9.598448225277528,-9.021097956087901,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,11.907849302036032,12.485199571225657,0.000000000000000,-12.485199571225657,-11.907849302036032,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,14.794600647984160,15.371950917173784,0.000000000000000,-15.371950917173784,-14.794600647984160,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new double[]{120.000000000000000,-25.500000000000000,7.500000000000000,24.000000000000000,7.500000000000000,-25.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,420.000000000000000,-55.500000000000000,37.500000000000000,84.000000000000000,37.500000000000000,-55.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,720.000000000000000,-85.500000000000000,67.500000000000000,144.000000000000000,67.500000000000000,-85.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,1020.000000000000000,-115.500000000000000,97.500000000000000,204.000000000000000,97.500000000000000,-115.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,1320.000000000000000,-145.500000000000000,127.500000000000000,264.000000000000000,127.500000000000000,-145.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,1620.000000000000000,-175.500000000000000,157.500000000000000,324.000000000000000,157.500000000000000,-175.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000};
ResultI = new double[]{0.000000000000000,-12.990381056766578,-23.382685902179841,0.000000000000000,23.382685902179841,12.990381056766578,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-64.951905283832900,-75.344210129246164,0.000000000000000,75.344210129246164,64.951905283832900,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-116.913429510899210,-127.305734356312470,0.000000000000000,127.305734356312470,116.913429510899210,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-168.874953737965510,-179.267258583378780,0.000000000000000,179.267258583378780,168.874953737965510,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-220.836477965031830,-231.228782810445100,0.000000000000000,231.228782810445100,220.836477965031830,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-272.798002192098180,-283.190307037511450,0.000000000000000,283.190307037511450,272.798002192098180,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3,3,2));
ResRA = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,56.666666666666664,-6.416666666666667,5.416666666666667,11.333333333333334,5.416666666666667,-6.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,73.333333333333329,-8.083333333333334,7.083333333333333,14.666666666666666,7.083333333333333,-8.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,90.000000000000000,-9.750000000000000,8.750000000000000,18.000000000000000,8.750000000000000,-9.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667};
ResRA.Reshape(new ILDimension(6,3,3,2));
ResIAR = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,56.666666666666664,-6.416666666666667,5.416666666666667,11.333333333333334,5.416666666666667,-6.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,73.333333333333329,-8.083333333333334,7.083333333333333,14.666666666666666,7.083333333333333,-8.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,90.000000000000000,-9.750000000000000,8.750000000000000,18.000000000000000,8.750000000000000,-9.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667};
ResIAI = new double[]{0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,3.608439182435161,4.185789451624786,0.000000000000000,-4.185789451624786,-3.608439182435161,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,6.495190528383290,7.072540797572915,0.000000000000000,-7.072540797572915,-6.495190528383290,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,9.381941874331419,9.959292143521044,0.000000000000000,-9.959292143521044,-9.381941874331419,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,12.268693220279546,12.846043489469173,0.000000000000000,-12.846043489469173,-12.268693220279546,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,15.155444566227674,15.732794835417302,0.000000000000000,-15.732794835417302,-15.155444566227674,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,610.000000000000000,-79.000000000000000,55.000000000000000,122.000000000000000,55.000000000000000,-79.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,1010.000000000000000,-119.000000000000000,95.000000000000000,202.000000000000000,95.000000000000000,-119.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,1410.000000000000000,-159.000000000000000,135.000000000000000,282.000000000000000,135.000000000000000,-159.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,1810.000000000000000,-199.000000000000000,175.000000000000000,362.000000000000000,175.000000000000000,-199.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,2210.000000000000000,-239.000000000000000,215.000000000000000,442.000000000000000,215.000000000000000,-239.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-95.262794416288244,-109.119200876839260,0.000000000000000,109.119200876839260,95.262794416288244,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-164.544826719043330,-178.401233179594360,0.000000000000000,178.401233179594360,164.544826719043330,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-233.826859021798410,-247.683265482349440,0.000000000000000,247.683265482349440,233.826859021798410,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-303.108891324553500,-316.965297785104550,0.000000000000000,316.965297785104550,303.108891324553500,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-372.390923627308610,-386.247330087859610,0.000000000000000,386.247330087859610,372.390923627308610,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3,2));
ResRA = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,25.416666666666668,-3.291666666666667,2.291666666666667,5.083333333333333,2.291666666666667,-3.291666666666667,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,42.083333333333336,-4.958333333333333,3.958333333333334,8.416666666666666,3.958333333333334,-4.958333333333333,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,58.750000000000000,-6.625000000000000,5.625000000000000,11.750000000000000,5.625000000000000,-6.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,75.416666666666671,-8.291666666666666,7.291666666666667,15.083333333333334,7.291666666666667,-8.291666666666666,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,92.083333333333329,-9.958333333333334,8.958333333333334,18.416666666666668,8.958333333333334,-9.958333333333334,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResRA.Reshape(new ILDimension(6,4,3,2));
ResIAR = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,25.416666666666668,-3.291666666666667,2.291666666666667,5.083333333333333,2.291666666666667,-3.291666666666667,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,42.083333333333336,-4.958333333333333,3.958333333333334,8.416666666666666,3.958333333333334,-4.958333333333333,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,58.750000000000000,-6.625000000000000,5.625000000000000,11.750000000000000,5.625000000000000,-6.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,75.416666666666671,-8.291666666666666,7.291666666666667,15.083333333333334,7.291666666666667,-8.291666666666666,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,92.083333333333329,-9.958333333333334,8.958333333333334,18.416666666666668,8.958333333333334,-9.958333333333334,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResIAI = new double[]{0.000000000000000,1.082531754730548,1.659882023920174,0.000000000000000,-1.659882023920174,-1.082531754730548,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,3.969283100678677,4.546633369868302,0.000000000000000,-4.546633369868302,-3.969283100678677,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,6.856034446626805,7.433384715816431,0.000000000000000,-7.433384715816431,-6.856034446626805,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,9.742785792574933,10.320136061764559,0.000000000000000,-10.320136061764559,-9.742785792574933,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,12.629537138523062,13.206887407712690,0.000000000000000,-13.206887407712690,-12.629537138523062,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,15.516288484471191,16.093638753660816,0.000000000000000,-16.093638753660816,-15.516288484471191,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-98.036954353118958,9.621261194543136,-14.207737073390824,-19.607390870623789,-4.472602814108122,12.767282625455183,30.536954353118958,-13.357652230006455,-6.859358218078331,6.107390870623791,10.539698105577276,-0.030891589991866,30.536954353118958,-0.030891589991866,10.539698105577276,6.107390870623791,-6.859358218078331,-13.357652230006455,-98.036954353118958,12.767282625455183,-4.472602814108122,-19.607390870623789,-14.207737073390824,9.621261194543136,610.000000000000000,-79.000000000000000,55.000000000000000,122.000000000000000,55.000000000000000,-79.000000000000000,-128.938653790613700,-3.761350932634024,-33.770689088066938,-25.787730758122741,8.910009313069033,32.330234640131295,111.438653790613700,-31.628561382858472,-8.949927483431399,22.287730758122741,28.810607258429304,2.059677675361201,111.438653790613700,2.059677675361201,28.810607258429304,22.287730758122741,-8.949927483431399,-31.628561382858472,-128.938653790613700,32.330234640131295,8.910009313069033,-25.787730758122741,-33.770689088066938,-3.761350932634024,1010.000000000000000,-119.000000000000000,95.000000000000000,202.000000000000000,95.000000000000000,-119.000000000000000,-159.840353228108460,-17.143963059811188,-53.333641102743044,-31.968070645621687,22.292621440246208,51.893186654807408,192.340353228108460,-49.899470535710492,-11.040496748784474,38.468070645621687,47.081516411281314,4.150246940714272,192.340353228108460,4.150246940714272,47.081516411281314,38.468070645621687,-11.040496748784474,-49.899470535710492,-159.840353228108460,51.893186654807408,22.292621440246208,-31.968070645621687,-53.333641102743044,-17.143963059811188,1410.000000000000000,-159.000000000000000,135.000000000000000,282.000000000000000,135.000000000000000,-159.000000000000000,-190.742052665603180,-30.526575186988360,-72.896593117419158,-38.148410533120646,35.675233567423376,71.456138669483522,273.242052665603180,-68.170379688562491,-13.131066014137538,54.648410533120646,65.352425564133313,6.240816206067343,273.242052665603180,6.240816206067343,65.352425564133313,54.648410533120646,-13.131066014137538,-68.170379688562491,-190.742052665603180,71.456138669483522,35.675233567423376,-38.148410533120646,-72.896593117419158,-30.526575186988360,1810.000000000000000,-199.000000000000000,175.000000000000000,362.000000000000000,175.000000000000000,-199.000000000000000,-221.643752103097940,-43.909187314165500,-92.459545132095258,-44.328750420619585,49.057845694600530,91.019090684159607,354.143752103097940,-86.441288841414519,-15.221635279490627,70.828750420619585,83.623334716985326,8.331385471420411,354.143752103097940,8.331385471420411,83.623334716985326,70.828750420619585,-15.221635279490627,-86.441288841414519,-221.643752103097940,91.019090684159607,49.057845694600530,-44.328750420619585,-92.459545132095258,-43.909187314165500,2210.000000000000000,-239.000000000000000,215.000000000000000,442.000000000000000,215.000000000000000,-239.000000000000000,-252.545451540592670,-57.291799441342668,-112.022497146771400,-50.509090308118530,62.440457821777670,110.582042698835720,435.045451540592690,-104.712197994266520,-17.312204544843667,87.009090308118530,101.894243869837400,10.421954736773465,435.045451540592690,10.421954736773465,101.894243869837400,87.009090308118530,-17.312204544843667,-104.712197994266520,-252.545451540592670,110.582042698835720,62.440457821777670,-50.509090308118530,-112.022497146771400,-57.291799441342668};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,-23.347629344494312,22.792166151679456,16.339937003214402,-4.669525868898862,-18.156293323227807,-9.563131636124215,-47.287822999077761,4.186548098088650,-9.836889335492469,-9.457564599815553,2.142680492554329,10.561083772359158,47.287822999077761,-10.561083772359158,-2.142680492554329,9.457564599815553,9.836889335492469,-4.186548098088650,23.347629344494312,9.563131636124215,18.156293323227807,4.669525868898862,-16.339937003214402,-22.792166151679456,0.000000000000000,-95.262794416288244,-109.119200876839260,0.000000000000000,109.119200876839260,95.262794416288244,-118.453280974009660,37.655062661227333,12.181703186859213,-23.690656194801932,-33.019189832775680,-5.404897819769023,-106.066348228325070,-3.948184763427351,-29.727327242857928,-21.213269645665015,10.277413354070337,30.451521679724628,106.066348228325070,-30.451521679724628,-10.277413354070337,21.213269645665015,29.727327242857928,3.948184763427351,118.453280974009660,5.404897819769023,33.019189832775680,23.690656194801932,-12.181703186859213,-37.655062661227333,0.000000000000000,-164.544826719043330,-178.401233179594360,0.000000000000000,178.401233179594360,164.544826719043330,-213.558932603525020,52.517959170775221,8.023469370504035,-42.711786520705004,-47.882086342323575,-1.246664003413834,-164.844873457572390,-12.082917624943352,-49.617765150223413,-32.968974691514475,18.412146215586340,50.341959587090088,164.844873457572390,-50.341959587090088,-18.412146215586340,32.968974691514475,49.617765150223413,12.082917624943352,213.558932603525020,1.246664003413834,47.882086342323575,42.711786520705004,-8.023469370504035,-52.517959170775221,0.000000000000000,-233.826859021798410,-247.683265482349440,0.000000000000000,247.683265482349440,233.826859021798410,-308.664584233040390,67.380855680323094,3.865235554148839,-61.732916846608070,-62.744982851871455,2.911569812941337,-223.623398686819710,-20.217650486459359,-69.508203057588872,-44.724679737363950,26.546879077102339,70.232397494455554,223.623398686819710,-70.232397494455554,-26.546879077102339,44.724679737363950,69.508203057588872,20.217650486459359,308.664584233040390,-2.911569812941337,62.744982851871455,61.732916846608070,-3.865235554148839,-67.380855680323094,0.000000000000000,-303.108891324553500,-316.965297785104550,0.000000000000000,316.965297785104550,303.108891324553500,-403.770235862555690,82.243752189870975,-0.292998262206325,-80.754047172511136,-77.607879361419336,7.069803629296537,-282.401923916067010,-28.352383347975358,-89.398640964954339,-56.480384783213395,34.681611938618360,90.122835401821021,282.401923916067010,-90.122835401821021,-34.681611938618360,56.480384783213395,89.398640964954339,28.352383347975358,403.770235862555690,-7.069803629296537,77.607879361419336,80.754047172511136,0.292998262206325,-82.243752189870975,0.000000000000000,-372.390923627308610,-386.247330087859610,0.000000000000000,386.247330087859610,372.390923627308610,-498.875887492071060,97.106648699418869,-4.451232078561517,-99.775177498414209,-92.470775870967216,11.228037445651722,-341.180449145314360,-36.487116209491361,-109.289078872319810,-68.236089829062877,42.816344800134345,110.013273309186490,341.180449145314360,-110.013273309186490,-42.816344800134345,68.236089829062877,109.289078872319810,36.487116209491361,498.875887492071060,-11.228037445651722,92.470775870967216,99.775177498414209,4.451232078561517,-97.106648699418869};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5,3,2));
ResRA = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437299,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666396,1.017898478437299,-0.001029719666396,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437299,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771,20.333333333333332,-2.633333333333333,1.833333333333333,4.066666666666666,1.833333333333333,-2.633333333333333,-4.297955126353790,-0.125378364421134,-1.125689636268898,-0.859591025270758,0.297000310435635,1.077674488004377,3.714621793020457,-1.054285379428616,-0.298330916114380,0.742924358604091,0.960353575280976,0.068655922512040,3.714621793020457,0.068655922512040,0.960353575280976,0.742924358604091,-0.298330916114380,-1.054285379428616,-4.297955126353790,1.077674488004377,0.297000310435635,-0.859591025270758,-1.125689636268898,-0.125378364421134,33.666666666666664,-3.966666666666667,3.166666666666667,6.733333333333332,3.166666666666667,-3.966666666666667,-5.328011774270282,-0.571465435327039,-1.777788036758101,-1.065602354854056,0.743087381341540,1.729772888493580,6.411345107603616,-1.663315684523683,-0.368016558292816,1.282269021520723,1.569383880376044,0.138341564690476,6.411345107603616,0.138341564690476,1.569383880376044,1.282269021520723,-0.368016558292816,-1.663315684523683,-5.328011774270282,1.729772888493580,0.743087381341540,-1.065602354854056,-1.777788036758101,-0.571465435327039,47.000000000000000,-5.300000000000001,4.500000000000000,9.399999999999999,4.500000000000000,-5.300000000000001,-6.358068422186773,-1.017552506232945,-2.429886437247306,-1.271613684437355,1.189174452247446,2.381871288982784,9.108068422186774,-2.272345989618750,-0.437702200471251,1.821613684437355,2.178414185471112,0.208027206868912,9.108068422186774,0.208027206868912,2.178414185471112,1.821613684437355,-0.437702200471251,-2.272345989618750,-6.358068422186773,2.381871288982784,1.189174452247446,-1.271613684437355,-2.429886437247306,-1.017552506232945,60.333333333333336,-6.633333333333336,5.833333333333333,12.066666666666668,5.833333333333333,-6.633333333333336,-7.388125070103264,-1.463639577138850,-3.081984837736508,-1.477625014020653,1.635261523153351,3.033969689471987,11.804791736769930,-2.881376294713817,-0.507387842649688,2.360958347353986,2.787444490566178,0.277712849047347,11.804791736769930,0.277712849047347,2.787444490566178,2.360958347353986,-0.507387842649688,-2.881376294713817,-7.388125070103264,3.033969689471987,1.635261523153351,-1.477625014020653,-3.081984837736508,-1.463639577138850,73.666666666666671,-7.966666666666669,7.166666666666667,14.733333333333334,7.166666666666667,-7.966666666666669,-8.418181718019756,-1.909726648044756,-3.734083238225713,-1.683636343603951,2.081348594059255,3.686068089961192,14.501515051353090,-3.490406599808884,-0.577073484828122,2.900303010270618,3.396474795661246,0.347398491225782,14.501515051353090,0.347398491225782,3.396474795661246,2.900303010270618,-0.577073484828122,-3.490406599808884,-8.418181718019756,3.686068089961192,2.081348594059255,-1.683636343603951,-3.734083238225713,-1.909726648044756};
ResRA.Reshape(new ILDimension(6,5,3,2));
ResIAR = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437299,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666396,1.017898478437299,-0.001029719666396,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437299,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771,20.333333333333332,-2.633333333333333,1.833333333333333,4.066666666666666,1.833333333333333,-2.633333333333333,-4.297955126353790,-0.125378364421134,-1.125689636268898,-0.859591025270758,0.297000310435635,1.077674488004377,3.714621793020457,-1.054285379428616,-0.298330916114380,0.742924358604091,0.960353575280976,0.068655922512040,3.714621793020457,0.068655922512040,0.960353575280976,0.742924358604091,-0.298330916114380,-1.054285379428616,-4.297955126353790,1.077674488004377,0.297000310435635,-0.859591025270758,-1.125689636268898,-0.125378364421134,33.666666666666664,-3.966666666666667,3.166666666666667,6.733333333333332,3.166666666666667,-3.966666666666667,-5.328011774270282,-0.571465435327039,-1.777788036758101,-1.065602354854056,0.743087381341540,1.729772888493580,6.411345107603616,-1.663315684523683,-0.368016558292816,1.282269021520723,1.569383880376044,0.138341564690476,6.411345107603616,0.138341564690476,1.569383880376044,1.282269021520723,-0.368016558292816,-1.663315684523683,-5.328011774270282,1.729772888493580,0.743087381341540,-1.065602354854056,-1.777788036758101,-0.571465435327039,47.000000000000000,-5.300000000000001,4.500000000000000,9.399999999999999,4.500000000000000,-5.300000000000001,-6.358068422186773,-1.017552506232945,-2.429886437247306,-1.271613684437355,1.189174452247446,2.381871288982784,9.108068422186774,-2.272345989618750,-0.437702200471251,1.821613684437355,2.178414185471112,0.208027206868912,9.108068422186774,0.208027206868912,2.178414185471112,1.821613684437355,-0.437702200471251,-2.272345989618750,-6.358068422186773,2.381871288982784,1.189174452247446,-1.271613684437355,-2.429886437247306,-1.017552506232945,60.333333333333336,-6.633333333333336,5.833333333333333,12.066666666666668,5.833333333333333,-6.633333333333336,-7.388125070103264,-1.463639577138850,-3.081984837736508,-1.477625014020653,1.635261523153351,3.033969689471987,11.804791736769930,-2.881376294713817,-0.507387842649688,2.360958347353986,2.787444490566178,0.277712849047347,11.804791736769930,0.277712849047347,2.787444490566178,2.360958347353986,-0.507387842649688,-2.881376294713817,-7.388125070103264,3.033969689471987,1.635261523153351,-1.477625014020653,-3.081984837736508,-1.463639577138850,73.666666666666671,-7.966666666666669,7.166666666666667,14.733333333333334,7.166666666666667,-7.966666666666669,-8.418181718019756,-1.909726648044756,-3.734083238225713,-1.683636343603951,2.081348594059255,3.686068089961192,14.501515051353090,-3.490406599808884,-0.577073484828122,2.900303010270618,3.396474795661246,0.347398491225782,14.501515051353090,0.347398491225782,3.396474795661246,2.900303010270618,-0.577073484828122,-3.490406599808884,-8.418181718019756,3.686068089961192,2.081348594059255,-1.683636343603951,-3.734083238225713,-1.909726648044756};
ResIAI = new double[]{0.000000000000000,0.866025403784439,1.327905619136139,0.000000000000000,-1.327905619136139,-0.866025403784439,0.778254311483144,-0.759738871722649,-0.544664566773813,0.155650862296629,0.605209777440927,0.318771054537474,1.576260766635925,-0.139551603269622,0.327896311183082,0.315252153327185,-0.071422683085144,-0.352036125745305,-1.576260766635925,0.352036125745305,0.071422683085144,-0.315252153327185,-0.327896311183082,0.139551603269622,-0.778254311483144,-0.318771054537474,-0.605209777440927,-0.155650862296629,0.544664566773813,0.759738871722649,0.000000000000000,3.175426480542942,3.637306695894643,0.000000000000000,-3.637306695894643,-3.175426480542942,3.948442699133655,-1.255168755374245,-0.406056772895307,0.789688539826731,1.100639661092522,0.180163260658967,3.535544940944169,0.131606158780912,0.990910908095264,0.707108988188834,-0.342580445135678,-1.015050722657487,-3.535544940944169,1.015050722657487,0.342580445135678,-0.707108988188834,-0.990910908095264,-0.131606158780912,-3.948442699133655,-0.180163260658967,-1.100639661092522,-0.789688539826731,0.406056772895307,1.255168755374245,0.000000000000000,5.484827557301444,5.946707772653145,0.000000000000000,-5.946707772653145,-5.484827557301444,7.118631086784167,-1.750598639025841,-0.267448979016801,1.423726217356834,1.596069544744120,0.041555466780461,5.494829115252412,0.402763920831445,1.653925505007447,1.098965823050482,-0.613738207186212,-1.678065319569670,-5.494829115252412,1.678065319569670,0.613738207186212,-1.098965823050482,-1.653925505007447,-0.402763920831445,-7.118631086784167,-0.041555466780461,-1.596069544744120,-1.423726217356834,0.267448979016801,1.750598639025841,0.000000000000000,7.794228634059947,8.256108849411648,0.000000000000000,-8.256108849411648,-7.794228634059947,10.288819474434680,-2.246028522677436,-0.128841185138295,2.057763894886936,2.091499428395715,-0.097052327098044,7.454113289560657,0.673921682881979,2.316940101919629,1.490822657912132,-0.884895969236744,-2.341079916481852,-7.454113289560657,2.341079916481852,0.884895969236744,-1.490822657912132,-2.316940101919629,-0.673921682881979,-10.288819474434680,0.097052327098044,-2.091499428395715,-2.057763894886936,0.128841185138295,2.246028522677436,0.000000000000000,10.103629710818451,10.565509926170149,0.000000000000000,-10.565509926170149,-10.103629710818451,13.459007862085189,-2.741458406329033,0.009766608740211,2.691801572417038,2.586929312047312,-0.235660120976552,9.413397463868902,0.945079444932512,2.979954698831811,1.882679492773780,-1.156053731287279,-3.004094513394035,-9.413397463868902,3.004094513394035,1.156053731287279,-1.882679492773780,-2.979954698831811,-0.945079444932512,-13.459007862085189,0.235660120976552,-2.586929312047312,-2.691801572417038,-0.009766608740211,2.741458406329033,0.000000000000000,12.413030787576952,12.874911002928654,0.000000000000000,-12.874911002928654,-12.413030787576952,16.629196249735703,-3.236888289980630,0.148374402618718,3.325839249947141,3.082359195698908,-0.374267914855058,11.372681638177143,1.216237206983045,3.642969295743993,2.274536327635429,-1.427211493337811,-3.667109110306216,-11.372681638177143,3.667109110306216,1.427211493337811,-2.274536327635429,-3.642969295743993,-1.216237206983045,-16.629196249735703,0.374267914855058,-3.082359195698908,-3.325839249947141,-0.148374402618718,3.236888289980630};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_double_complex_14() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
A.Reshape(new ILDimension(1,5,4,3));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,6,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,6,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,6);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResRA.Reshape(new ILDimension(1,1,4,3));
ResIAR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,11.500000000000000,-0.500000000000000,16.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,26.500000000000000,-0.500000000000000,31.500000000000000,-0.500000000000000,36.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000,46.500000000000000,-0.500000000000000,51.500000000000000,-0.500000000000000,56.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,2,4,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,11.500000000000000,-0.500000000000000,16.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,26.500000000000000,-0.500000000000000,31.500000000000000,-0.500000000000000,36.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000,46.500000000000000,-0.500000000000000,51.500000000000000,-0.500000000000000,56.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,3,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4,3));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,12.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,17.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,32.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,37.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,52.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,57.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,4,4,3));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,12.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,17.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,32.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,37.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,52.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,57.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,13.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,18.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,33.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,38.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,53.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,58.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(1,5,4,3));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,13.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,18.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,33.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,38.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,53.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,58.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,6,4,3));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,10.833333333333334,-1.833333333333333,0.833333333333333,2.166666666666667,0.833333333333333,-1.833333333333333,15.000000000000000,-2.250000000000000,1.250000000000000,3.000000000000000,1.250000000000000,-2.250000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,27.500000000000000,-3.500000000000000,2.500000000000000,5.500000000000000,2.500000000000000,-3.500000000000000,31.666666666666668,-3.916666666666667,2.916666666666667,6.333333333333333,2.916666666666667,-3.916666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,44.166666666666664,-5.166666666666667,4.166666666666667,8.833333333333334,4.166666666666667,-5.166666666666667,48.333333333333336,-5.583333333333333,4.583333333333333,9.666666666666666,4.583333333333333,-5.583333333333333};
ResRA.Reshape(new ILDimension(1,6,4,3));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,10.833333333333334,-1.833333333333333,0.833333333333333,2.166666666666667,0.833333333333333,-1.833333333333333,15.000000000000000,-2.250000000000000,1.250000000000000,3.000000000000000,1.250000000000000,-2.250000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,27.500000000000000,-3.500000000000000,2.500000000000000,5.500000000000000,2.500000000000000,-3.500000000000000,31.666666666666668,-3.916666666666667,2.916666666666667,6.333333333333333,2.916666666666667,-3.916666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,44.166666666666664,-5.166666666666667,4.166666666666667,8.833333333333334,4.166666666666667,-5.166666666666667,48.333333333333336,-5.583333333333333,4.583333333333333,9.666666666666666,4.583333333333333,-5.583333333333333};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000,0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,0.000000000000000,1.443375672974064,2.020725942163690,0.000000000000000,-2.020725942163690,-1.443375672974064,0.000000000000000,2.165063509461096,2.742413778650722,0.000000000000000,-2.742413778650722,-2.165063509461096,0.000000000000000,2.886751345948129,3.464101615137755,0.000000000000000,-3.464101615137755,-2.886751345948129,0.000000000000000,3.608439182435161,4.185789451624786,0.000000000000000,-4.185789451624786,-3.608439182435161,0.000000000000000,4.330127018922193,4.907477288111819,0.000000000000000,-4.907477288111819,-4.330127018922193,0.000000000000000,5.051814855409226,5.629165124598852,0.000000000000000,-5.629165124598852,-5.051814855409226,0.000000000000000,5.773502691896257,6.350852961085884,0.000000000000000,-6.350852961085884,-5.773502691896257,0.000000000000000,6.495190528383290,7.072540797572915,0.000000000000000,-7.072540797572915,-6.495190528383290,0.000000000000000,7.216878364870322,7.794228634059947,0.000000000000000,-7.794228634059947,-7.216878364870322,0.000000000000000,7.938566201357354,8.515916470546980,0.000000000000000,-8.515916470546980,-7.938566201357354};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,6);
ResultR = new double[]{1.000000000000000,1.000000000000000,2.000000000000000,2.000000000000000,3.000000000000000,3.000000000000000,4.000000000000000,4.000000000000000,5.000000000000000,5.000000000000000,6.000000000000000,6.000000000000000,7.000000000000000,7.000000000000000,8.000000000000000,8.000000000000000,9.000000000000000,9.000000000000000,10.000000000000000,10.000000000000000,11.000000000000000,11.000000000000000,12.000000000000000,12.000000000000000,13.000000000000000,13.000000000000000,14.000000000000000,14.000000000000000,15.000000000000000,15.000000000000000,16.000000000000000,16.000000000000000,17.000000000000000,17.000000000000000,18.000000000000000,18.000000000000000,19.000000000000000,19.000000000000000,20.000000000000000,20.000000000000000,21.000000000000000,21.000000000000000,22.000000000000000,22.000000000000000,23.000000000000000,23.000000000000000,24.000000000000000,24.000000000000000,25.000000000000000,25.000000000000000,26.000000000000000,26.000000000000000,27.000000000000000,27.000000000000000,28.000000000000000,28.000000000000000,29.000000000000000,29.000000000000000,30.000000000000000,30.000000000000000,31.000000000000000,31.000000000000000,32.000000000000000,32.000000000000000,33.000000000000000,33.000000000000000,34.000000000000000,34.000000000000000,35.000000000000000,35.000000000000000,36.000000000000000,36.000000000000000,37.000000000000000,37.000000000000000,38.000000000000000,38.000000000000000,39.000000000000000,39.000000000000000,40.000000000000000,40.000000000000000,41.000000000000000,41.000000000000000,42.000000000000000,42.000000000000000,43.000000000000000,43.000000000000000,44.000000000000000,44.000000000000000,45.000000000000000,45.000000000000000,46.000000000000000,46.000000000000000,47.000000000000000,47.000000000000000,48.000000000000000,48.000000000000000,49.000000000000000,49.000000000000000,50.000000000000000,50.000000000000000,51.000000000000000,51.000000000000000,52.000000000000000,52.000000000000000,53.000000000000000,53.000000000000000,54.000000000000000,54.000000000000000,55.000000000000000,55.000000000000000,56.000000000000000,56.000000000000000,57.000000000000000,57.000000000000000,58.000000000000000,58.000000000000000,59.000000000000000,59.000000000000000,60.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{1.000000000000000,1.000000000000000,6.000000000000000,6.000000000000000,11.000000000000000,11.000000000000000,16.000000000000000,16.000000000000000,21.000000000000000,21.000000000000000,26.000000000000000,26.000000000000000,31.000000000000000,31.000000000000000,36.000000000000000,36.000000000000000,41.000000000000000,41.000000000000000,46.000000000000000,46.000000000000000,51.000000000000000,51.000000000000000,56.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4,3));
ResRA = new double[]{0.500000000000000,0.500000000000000,3.000000000000000,3.000000000000000,5.500000000000000,5.500000000000000,8.000000000000000,8.000000000000000,10.500000000000000,10.500000000000000,13.000000000000000,13.000000000000000,15.500000000000000,15.500000000000000,18.000000000000000,18.000000000000000,20.500000000000000,20.500000000000000,23.000000000000000,23.000000000000000,25.500000000000000,25.500000000000000,28.000000000000000,28.000000000000000};
ResRA.Reshape(new ILDimension(2,1,4,3));
ResIAR = new double[]{0.500000000000000,0.500000000000000,3.000000000000000,3.000000000000000,5.500000000000000,5.500000000000000,8.000000000000000,8.000000000000000,10.500000000000000,10.500000000000000,13.000000000000000,13.000000000000000,15.500000000000000,15.500000000000000,18.000000000000000,18.000000000000000,20.500000000000000,20.500000000000000,23.000000000000000,23.000000000000000,25.500000000000000,25.500000000000000,28.000000000000000,28.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,3.000000000000000,-1.000000000000000,-1.000000000000000,13.000000000000000,13.000000000000000,-1.000000000000000,-1.000000000000000,23.000000000000000,23.000000000000000,-1.000000000000000,-1.000000000000000,33.000000000000000,33.000000000000000,-1.000000000000000,-1.000000000000000,43.000000000000000,43.000000000000000,-1.000000000000000,-1.000000000000000,53.000000000000000,53.000000000000000,-1.000000000000000,-1.000000000000000,63.000000000000000,63.000000000000000,-1.000000000000000,-1.000000000000000,73.000000000000000,73.000000000000000,-1.000000000000000,-1.000000000000000,83.000000000000000,83.000000000000000,-1.000000000000000,-1.000000000000000,93.000000000000000,93.000000000000000,-1.000000000000000,-1.000000000000000,103.000000000000000,103.000000000000000,-1.000000000000000,-1.000000000000000,113.000000000000000,113.000000000000000,-1.000000000000000,-1.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4,3));
ResRA = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,3.250000000000000,3.250000000000000,-0.250000000000000,-0.250000000000000,5.750000000000000,5.750000000000000,-0.250000000000000,-0.250000000000000,8.250000000000000,8.250000000000000,-0.250000000000000,-0.250000000000000,10.750000000000000,10.750000000000000,-0.250000000000000,-0.250000000000000,13.250000000000000,13.250000000000000,-0.250000000000000,-0.250000000000000,15.750000000000000,15.750000000000000,-0.250000000000000,-0.250000000000000,18.250000000000000,18.250000000000000,-0.250000000000000,-0.250000000000000,20.750000000000000,20.750000000000000,-0.250000000000000,-0.250000000000000,23.250000000000000,23.250000000000000,-0.250000000000000,-0.250000000000000,25.750000000000000,25.750000000000000,-0.250000000000000,-0.250000000000000,28.250000000000000,28.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2,4,3));
ResIAR = new double[]{0.750000000000000,0.750000000000000,-0.250000000000000,-0.250000000000000,3.250000000000000,3.250000000000000,-0.250000000000000,-0.250000000000000,5.750000000000000,5.750000000000000,-0.250000000000000,-0.250000000000000,8.250000000000000,8.250000000000000,-0.250000000000000,-0.250000000000000,10.750000000000000,10.750000000000000,-0.250000000000000,-0.250000000000000,13.250000000000000,13.250000000000000,-0.250000000000000,-0.250000000000000,15.750000000000000,15.750000000000000,-0.250000000000000,-0.250000000000000,18.250000000000000,18.250000000000000,-0.250000000000000,-0.250000000000000,20.750000000000000,20.750000000000000,-0.250000000000000,-0.250000000000000,23.250000000000000,23.250000000000000,-0.250000000000000,-0.250000000000000,25.750000000000000,25.750000000000000,-0.250000000000000,-0.250000000000000,28.250000000000000,28.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439,0.000000000000000,0.000000000000000,0.866025403784439,0.866025403784439,-0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,4,3));
ResRA = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.000000000000000,11.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.500000000000000,13.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.000000000000000,16.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.500000000000000,18.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.000000000000000,21.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.500000000000000,23.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.000000000000000,26.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.500000000000000,28.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,3,4,3));
ResIAR = new double[]{1.000000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.000000000000000,11.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.500000000000000,13.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.000000000000000,16.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.500000000000000,18.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.000000000000000,21.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.500000000000000,23.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.000000000000000,26.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.500000000000000,28.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406,0.000000000000000,0.000000000000000,-0.144337567297406,-0.144337567297406,0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{10.000000000000000,10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,110.000000000000000,110.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,130.000000000000000,130.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,150.000000000000000,150.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,190.000000000000000,190.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,210.000000000000000,210.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,230.000000000000000,230.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,4,3));
ResRA = new double[]{1.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.250000000000000,11.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.750000000000000,13.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.250000000000000,16.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.750000000000000,18.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.250000000000000,21.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.750000000000000,23.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.250000000000000,26.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.750000000000000,28.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,4,4,3));
ResIAR = new double[]{1.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.250000000000000,11.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.750000000000000,13.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.250000000000000,16.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.750000000000000,18.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.250000000000000,21.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.750000000000000,23.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.250000000000000,26.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.750000000000000,28.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.250000000000000,-0.250000000000000,0.000000000000000,0.000000000000000,0.250000000000000,0.250000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{15.000000000000000,15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933,0.000000000000000,0.000000000000000,3.440954801177933,3.440954801177933,0.812299240582266,0.812299240582266,-0.812299240582266,-0.812299240582266,-3.440954801177933,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,4,3));
ResRA = new double[]{1.500000000000000,1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.500000000000000,11.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,14.000000000000000,14.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.500000000000000,16.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,19.000000000000000,19.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.500000000000000,21.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,24.000000000000000,24.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.500000000000000,26.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,29.000000000000000,29.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,5,4,3));
ResIAR = new double[]{1.500000000000000,1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.500000000000000,11.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,14.000000000000000,14.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.500000000000000,16.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,19.000000000000000,19.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.500000000000000,21.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,24.000000000000000,24.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.500000000000000,26.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,29.000000000000000,29.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793,0.000000000000000,0.000000000000000,-0.344095480117793,-0.344095480117793,-0.081229924058227,-0.081229924058227,0.081229924058227,0.081229924058227,0.344095480117793,0.344095480117793};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{15.000000000000000,15.000000000000000,-6.000000000000000,-6.000000000000000,0.000000000000000,0.000000000000000,3.000000000000000,3.000000000000000,0.000000000000000,0.000000000000000,-6.000000000000000,-6.000000000000000,40.000000000000000,40.000000000000000,-8.500000000000000,-8.500000000000000,2.500000000000000,2.500000000000000,8.000000000000000,8.000000000000000,2.500000000000000,2.500000000000000,-8.500000000000000,-8.500000000000000,65.000000000000000,65.000000000000000,-11.000000000000000,-11.000000000000000,5.000000000000000,5.000000000000000,13.000000000000000,13.000000000000000,5.000000000000000,5.000000000000000,-11.000000000000000,-11.000000000000000,90.000000000000000,90.000000000000000,-13.500000000000000,-13.500000000000000,7.500000000000000,7.500000000000000,18.000000000000000,18.000000000000000,7.500000000000000,7.500000000000000,-13.500000000000000,-13.500000000000000,115.000000000000000,115.000000000000000,-16.000000000000000,-16.000000000000000,10.000000000000000,10.000000000000000,23.000000000000000,23.000000000000000,10.000000000000000,10.000000000000000,-16.000000000000000,-16.000000000000000,140.000000000000000,140.000000000000000,-18.500000000000000,-18.500000000000000,12.500000000000000,12.500000000000000,28.000000000000000,28.000000000000000,12.500000000000000,12.500000000000000,-18.500000000000000,-18.500000000000000,165.000000000000000,165.000000000000000,-21.000000000000000,-21.000000000000000,15.000000000000000,15.000000000000000,33.000000000000000,33.000000000000000,15.000000000000000,15.000000000000000,-21.000000000000000,-21.000000000000000,190.000000000000000,190.000000000000000,-23.500000000000000,-23.500000000000000,17.500000000000000,17.500000000000000,38.000000000000000,38.000000000000000,17.500000000000000,17.500000000000000,-23.500000000000000,-23.500000000000000,215.000000000000000,215.000000000000000,-26.000000000000000,-26.000000000000000,20.000000000000000,20.000000000000000,43.000000000000000,43.000000000000000,20.000000000000000,20.000000000000000,-26.000000000000000,-26.000000000000000,240.000000000000000,240.000000000000000,-28.500000000000000,-28.500000000000000,22.500000000000000,22.500000000000000,48.000000000000000,48.000000000000000,22.500000000000000,22.500000000000000,-28.500000000000000,-28.500000000000000,265.000000000000000,265.000000000000000,-31.000000000000000,-31.000000000000000,25.000000000000000,25.000000000000000,53.000000000000000,53.000000000000000,25.000000000000000,25.000000000000000,-31.000000000000000,-31.000000000000000,290.000000000000000,290.000000000000000,-33.500000000000000,-33.500000000000000,27.500000000000000,27.500000000000000,58.000000000000000,58.000000000000000,27.500000000000000,27.500000000000000,-33.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-3.464101615137754,-3.464101615137754,0.000000000000000,0.000000000000000,3.464101615137754,3.464101615137754,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-4.330127018922193,-4.330127018922193,-7.794228634059947,-7.794228634059947,0.000000000000000,0.000000000000000,7.794228634059947,7.794228634059947,4.330127018922193,4.330127018922193,0.000000000000000,0.000000000000000,-8.660254037844386,-8.660254037844386,-12.124355652982141,-12.124355652982141,0.000000000000000,0.000000000000000,12.124355652982141,12.124355652982141,8.660254037844386,8.660254037844386,0.000000000000000,0.000000000000000,-12.990381056766578,-12.990381056766578,-16.454482671904334,-16.454482671904334,0.000000000000000,0.000000000000000,16.454482671904334,16.454482671904334,12.990381056766578,12.990381056766578,0.000000000000000,0.000000000000000,-17.320508075688771,-17.320508075688771,-20.784609690826528,-20.784609690826528,0.000000000000000,0.000000000000000,20.784609690826528,20.784609690826528,17.320508075688771,17.320508075688771,0.000000000000000,0.000000000000000,-21.650635094610966,-21.650635094610966,-25.114736709748719,-25.114736709748719,0.000000000000000,0.000000000000000,25.114736709748719,25.114736709748719,21.650635094610966,21.650635094610966,0.000000000000000,0.000000000000000,-25.980762113533157,-25.980762113533157,-29.444863728670914,-29.444863728670914,0.000000000000000,0.000000000000000,29.444863728670914,29.444863728670914,25.980762113533157,25.980762113533157,0.000000000000000,0.000000000000000,-30.310889132455351,-30.310889132455351,-33.774990747593108,-33.774990747593108,0.000000000000000,0.000000000000000,33.774990747593108,33.774990747593108,30.310889132455351,30.310889132455351,0.000000000000000,0.000000000000000,-34.641016151377542,-34.641016151377542,-38.105117766515299,-38.105117766515299,0.000000000000000,0.000000000000000,38.105117766515299,38.105117766515299,34.641016151377542,34.641016151377542,0.000000000000000,0.000000000000000,-38.971143170299740,-38.971143170299740,-42.435244785437490,-42.435244785437490,0.000000000000000,0.000000000000000,42.435244785437490,42.435244785437490,38.971143170299740,38.971143170299740,0.000000000000000,0.000000000000000,-43.301270189221931,-43.301270189221931,-46.765371804359681,-46.765371804359681,0.000000000000000,0.000000000000000,46.765371804359681,46.765371804359681,43.301270189221931,43.301270189221931,0.000000000000000,0.000000000000000,-47.631397208144122,-47.631397208144122,-51.095498823281879,-51.095498823281879,0.000000000000000,0.000000000000000,51.095498823281879,51.095498823281879,47.631397208144122,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,6,4,3));
ResRA = new double[]{1.250000000000000,1.250000000000000,-0.500000000000000,-0.500000000000000,-0.000000000000000,-0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,-0.500000000000000,3.333333333333334,3.333333333333334,-0.708333333333333,-0.708333333333333,0.208333333333333,0.208333333333333,0.666666666666667,0.666666666666667,0.208333333333333,0.208333333333333,-0.708333333333333,-0.708333333333333,5.416666666666667,5.416666666666667,-0.916666666666667,-0.916666666666667,0.416666666666667,0.416666666666667,1.083333333333333,1.083333333333333,0.416666666666667,0.416666666666667,-0.916666666666667,-0.916666666666667,7.500000000000000,7.500000000000000,-1.125000000000000,-1.125000000000000,0.625000000000000,0.625000000000000,1.500000000000000,1.500000000000000,0.625000000000000,0.625000000000000,-1.125000000000000,-1.125000000000000,9.583333333333334,9.583333333333334,-1.333333333333333,-1.333333333333333,0.833333333333333,0.833333333333333,1.916666666666667,1.916666666666667,0.833333333333333,0.833333333333333,-1.333333333333333,-1.333333333333333,11.666666666666666,11.666666666666666,-1.541666666666667,-1.541666666666667,1.041666666666667,1.041666666666667,2.333333333333334,2.333333333333334,1.041666666666667,1.041666666666667,-1.541666666666667,-1.541666666666667,13.750000000000000,13.750000000000000,-1.750000000000000,-1.750000000000000,1.250000000000000,1.250000000000000,2.750000000000000,2.750000000000000,1.250000000000000,1.250000000000000,-1.750000000000000,-1.750000000000000,15.833333333333334,15.833333333333334,-1.958333333333333,-1.958333333333333,1.458333333333333,1.458333333333333,3.166666666666667,3.166666666666667,1.458333333333333,1.458333333333333,-1.958333333333333,-1.958333333333333,17.916666666666668,17.916666666666668,-2.166666666666667,-2.166666666666667,1.666666666666667,1.666666666666667,3.583333333333334,3.583333333333334,1.666666666666667,1.666666666666667,-2.166666666666667,-2.166666666666667,20.000000000000000,20.000000000000000,-2.375000000000000,-2.375000000000000,1.875000000000000,1.875000000000000,4.000000000000000,4.000000000000000,1.875000000000000,1.875000000000000,-2.375000000000000,-2.375000000000000,22.083333333333332,22.083333333333332,-2.583333333333334,-2.583333333333334,2.083333333333334,2.083333333333334,4.416666666666667,4.416666666666667,2.083333333333334,2.083333333333334,-2.583333333333334,-2.583333333333334,24.166666666666668,24.166666666666668,-2.791666666666667,-2.791666666666667,2.291666666666667,2.291666666666667,4.833333333333333,4.833333333333333,2.291666666666667,2.291666666666667,-2.791666666666667,-2.791666666666667};
ResRA.Reshape(new ILDimension(2,6,4,3));
ResIAR = new double[]{1.250000000000000,1.250000000000000,-0.500000000000000,-0.500000000000000,-0.000000000000000,-0.000000000000000,0.250000000000000,0.250000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,-0.500000000000000,3.333333333333334,3.333333333333334,-0.708333333333333,-0.708333333333333,0.208333333333333,0.208333333333333,0.666666666666667,0.666666666666667,0.208333333333333,0.208333333333333,-0.708333333333333,-0.708333333333333,5.416666666666667,5.416666666666667,-0.916666666666667,-0.916666666666667,0.416666666666667,0.416666666666667,1.083333333333333,1.083333333333333,0.416666666666667,0.416666666666667,-0.916666666666667,-0.916666666666667,7.500000000000000,7.500000000000000,-1.125000000000000,-1.125000000000000,0.625000000000000,0.625000000000000,1.500000000000000,1.500000000000000,0.625000000000000,0.625000000000000,-1.125000000000000,-1.125000000000000,9.583333333333334,9.583333333333334,-1.333333333333333,-1.333333333333333,0.833333333333333,0.833333333333333,1.916666666666667,1.916666666666667,0.833333333333333,0.833333333333333,-1.333333333333333,-1.333333333333333,11.666666666666666,11.666666666666666,-1.541666666666667,-1.541666666666667,1.041666666666667,1.041666666666667,2.333333333333334,2.333333333333334,1.041666666666667,1.041666666666667,-1.541666666666667,-1.541666666666667,13.750000000000000,13.750000000000000,-1.750000000000000,-1.750000000000000,1.250000000000000,1.250000000000000,2.750000000000000,2.750000000000000,1.250000000000000,1.250000000000000,-1.750000000000000,-1.750000000000000,15.833333333333334,15.833333333333334,-1.958333333333333,-1.958333333333333,1.458333333333333,1.458333333333333,3.166666666666667,3.166666666666667,1.458333333333333,1.458333333333333,-1.958333333333333,-1.958333333333333,17.916666666666668,17.916666666666668,-2.166666666666667,-2.166666666666667,1.666666666666667,1.666666666666667,3.583333333333334,3.583333333333334,1.666666666666667,1.666666666666667,-2.166666666666667,-2.166666666666667,20.000000000000000,20.000000000000000,-2.375000000000000,-2.375000000000000,1.875000000000000,1.875000000000000,4.000000000000000,4.000000000000000,1.875000000000000,1.875000000000000,-2.375000000000000,-2.375000000000000,22.083333333333332,22.083333333333332,-2.583333333333334,-2.583333333333334,2.083333333333334,2.083333333333334,4.416666666666667,4.416666666666667,2.083333333333334,2.083333333333334,-2.583333333333334,-2.583333333333334,24.166666666666668,24.166666666666668,-2.791666666666667,-2.791666666666667,2.291666666666667,2.291666666666667,4.833333333333333,4.833333333333333,2.291666666666667,2.291666666666667,-2.791666666666667,-2.791666666666667};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-0.000000000000000,-0.000000000000000,0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,-0.288675134594813,-0.288675134594813,-0.000000000000000,-0.000000000000000,0.000000000000000,0.000000000000000,0.360843918243516,0.360843918243516,0.649519052838329,0.649519052838329,0.000000000000000,0.000000000000000,-0.649519052838329,-0.649519052838329,-0.360843918243516,-0.360843918243516,0.000000000000000,0.000000000000000,0.721687836487032,0.721687836487032,1.010362971081845,1.010362971081845,0.000000000000000,0.000000000000000,-1.010362971081845,-1.010362971081845,-0.721687836487032,-0.721687836487032,0.000000000000000,0.000000000000000,1.082531754730548,1.082531754730548,1.371206889325361,1.371206889325361,0.000000000000000,0.000000000000000,-1.371206889325361,-1.371206889325361,-1.082531754730548,-1.082531754730548,0.000000000000000,0.000000000000000,1.443375672974064,1.443375672974064,1.732050807568877,1.732050807568877,0.000000000000000,0.000000000000000,-1.732050807568877,-1.732050807568877,-1.443375672974064,-1.443375672974064,0.000000000000000,0.000000000000000,1.804219591217581,1.804219591217581,2.092894725812393,2.092894725812393,0.000000000000000,0.000000000000000,-2.092894725812393,-2.092894725812393,-1.804219591217581,-1.804219591217581,0.000000000000000,0.000000000000000,2.165063509461096,2.165063509461096,2.453738644055910,2.453738644055910,0.000000000000000,0.000000000000000,-2.453738644055910,-2.453738644055910,-2.165063509461096,-2.165063509461096,0.000000000000000,0.000000000000000,2.525907427704613,2.525907427704613,2.814582562299426,2.814582562299426,0.000000000000000,0.000000000000000,-2.814582562299426,-2.814582562299426,-2.525907427704613,-2.525907427704613,0.000000000000000,0.000000000000000,2.886751345948129,2.886751345948129,3.175426480542942,3.175426480542942,0.000000000000000,0.000000000000000,-3.175426480542942,-3.175426480542942,-2.886751345948129,-2.886751345948129,0.000000000000000,0.000000000000000,3.247595264191645,3.247595264191645,3.536270398786458,3.536270398786458,0.000000000000000,0.000000000000000,-3.536270398786458,-3.536270398786458,-3.247595264191645,-3.247595264191645,0.000000000000000,0.000000000000000,3.608439182435161,3.608439182435161,3.897114317029974,3.897114317029974,0.000000000000000,0.000000000000000,-3.897114317029974,-3.897114317029974,-3.608439182435161,-3.608439182435161,0.000000000000000,0.000000000000000,3.969283100678677,3.969283100678677,4.257958235273490,4.257958235273490,0.000000000000000,0.000000000000000,-4.257958235273490,-4.257958235273490,-3.969283100678677,-3.969283100678677};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,6);
}
private static void TEST_FFT_double_complex_15() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
A.Reshape(new ILDimension(5,1,4,3));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResRA.Reshape(new ILDimension(1,1,4,3));
ResIAR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{1.000000000000000,1.000000000000000,6.000000000000000,6.000000000000000,11.000000000000000,11.000000000000000,16.000000000000000,16.000000000000000,21.000000000000000,21.000000000000000,26.000000000000000,26.000000000000000,31.000000000000000,31.000000000000000,36.000000000000000,36.000000000000000,41.000000000000000,41.000000000000000,46.000000000000000,46.000000000000000,51.000000000000000,51.000000000000000,56.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4,3));
ResRA = new double[]{0.500000000000000,0.500000000000000,3.000000000000000,3.000000000000000,5.500000000000000,5.500000000000000,8.000000000000000,8.000000000000000,10.500000000000000,10.500000000000000,13.000000000000000,13.000000000000000,15.500000000000000,15.500000000000000,18.000000000000000,18.000000000000000,20.500000000000000,20.500000000000000,23.000000000000000,23.000000000000000,25.500000000000000,25.500000000000000,28.000000000000000,28.000000000000000};
ResRA.Reshape(new ILDimension(1,2,4,3));
ResIAR = new double[]{0.500000000000000,0.500000000000000,3.000000000000000,3.000000000000000,5.500000000000000,5.500000000000000,8.000000000000000,8.000000000000000,10.500000000000000,10.500000000000000,13.000000000000000,13.000000000000000,15.500000000000000,15.500000000000000,18.000000000000000,18.000000000000000,20.500000000000000,20.500000000000000,23.000000000000000,23.000000000000000,25.500000000000000,25.500000000000000,28.000000000000000,28.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,11.500000000000000,-0.500000000000000,16.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,26.500000000000000,-0.500000000000000,31.500000000000000,-0.500000000000000,36.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000,46.500000000000000,-0.500000000000000,51.500000000000000,-0.500000000000000,56.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,4,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,11.500000000000000,-0.500000000000000,16.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,26.500000000000000,-0.500000000000000,31.500000000000000,-0.500000000000000,36.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000,46.500000000000000,-0.500000000000000,51.500000000000000,-0.500000000000000,56.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4,3));
ResRA = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000,10.750000000000000,-0.250000000000000,10.750000000000000,-0.250000000000000,13.250000000000000,-0.250000000000000,13.250000000000000,-0.250000000000000,15.750000000000000,-0.250000000000000,15.750000000000000,-0.250000000000000,18.250000000000000,-0.250000000000000,18.250000000000000,-0.250000000000000,20.750000000000000,-0.250000000000000,20.750000000000000,-0.250000000000000,23.250000000000000,-0.250000000000000,23.250000000000000,-0.250000000000000,25.750000000000000,-0.250000000000000,25.750000000000000,-0.250000000000000,28.250000000000000,-0.250000000000000,28.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2,4,3));
ResIAR = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000,10.750000000000000,-0.250000000000000,10.750000000000000,-0.250000000000000,13.250000000000000,-0.250000000000000,13.250000000000000,-0.250000000000000,15.750000000000000,-0.250000000000000,15.750000000000000,-0.250000000000000,18.250000000000000,-0.250000000000000,18.250000000000000,-0.250000000000000,20.750000000000000,-0.250000000000000,20.750000000000000,-0.250000000000000,23.250000000000000,-0.250000000000000,23.250000000000000,-0.250000000000000,25.750000000000000,-0.250000000000000,25.750000000000000,-0.250000000000000,28.250000000000000,-0.250000000000000,28.250000000000000,-0.250000000000000};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,1,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,4,3));
ResRA = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,11.000000000000000,-0.250000000000000,-0.250000000000000,11.000000000000000,-0.250000000000000,-0.250000000000000,13.500000000000000,-0.250000000000000,-0.250000000000000,13.500000000000000,-0.250000000000000,-0.250000000000000,16.000000000000000,-0.250000000000000,-0.250000000000000,16.000000000000000,-0.250000000000000,-0.250000000000000,18.500000000000000,-0.250000000000000,-0.250000000000000,18.500000000000000,-0.250000000000000,-0.250000000000000,21.000000000000000,-0.250000000000000,-0.250000000000000,21.000000000000000,-0.250000000000000,-0.250000000000000,23.500000000000000,-0.250000000000000,-0.250000000000000,23.500000000000000,-0.250000000000000,-0.250000000000000,26.000000000000000,-0.250000000000000,-0.250000000000000,26.000000000000000,-0.250000000000000,-0.250000000000000,28.500000000000000,-0.250000000000000,-0.250000000000000,28.500000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(3,2,4,3));
ResIAR = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,11.000000000000000,-0.250000000000000,-0.250000000000000,11.000000000000000,-0.250000000000000,-0.250000000000000,13.500000000000000,-0.250000000000000,-0.250000000000000,13.500000000000000,-0.250000000000000,-0.250000000000000,16.000000000000000,-0.250000000000000,-0.250000000000000,16.000000000000000,-0.250000000000000,-0.250000000000000,18.500000000000000,-0.250000000000000,-0.250000000000000,18.500000000000000,-0.250000000000000,-0.250000000000000,21.000000000000000,-0.250000000000000,-0.250000000000000,21.000000000000000,-0.250000000000000,-0.250000000000000,23.500000000000000,-0.250000000000000,-0.250000000000000,23.500000000000000,-0.250000000000000,-0.250000000000000,26.000000000000000,-0.250000000000000,-0.250000000000000,26.000000000000000,-0.250000000000000,-0.250000000000000,28.500000000000000,-0.250000000000000,-0.250000000000000,28.500000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4,3));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,12.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,17.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,32.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,37.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,52.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,57.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,4,3));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,12.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,17.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,32.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,37.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,52.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,57.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,110.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,110.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,130.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,130.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,150.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,150.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,190.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,190.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,210.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,210.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,230.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,230.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,4,3));
ResRA = new double[]{1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(4,2,4,3));
ResIAR = new double[]{1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,13.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,18.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,23.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,28.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000,0.000000000000000,-0.250000000000000,0.000000000000000,0.250000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,13.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,18.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,33.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,38.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,53.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,58.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(5,1,4,3));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,13.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,18.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,33.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,38.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,53.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,58.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4,3));
ResRA = new double[]{1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,14.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,14.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,19.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,19.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,24.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,24.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,29.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,29.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(5,2,4,3));
ResIAR = new double[]{1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,11.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,14.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,14.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,16.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,19.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,19.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,21.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,24.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,24.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,26.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,29.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,29.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(6,0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4,3));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,10.833333333333334,-1.833333333333333,0.833333333333333,2.166666666666667,0.833333333333333,-1.833333333333333,15.000000000000000,-2.250000000000000,1.250000000000000,3.000000000000000,1.250000000000000,-2.250000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,27.500000000000000,-3.500000000000000,2.500000000000000,5.500000000000000,2.500000000000000,-3.500000000000000,31.666666666666668,-3.916666666666667,2.916666666666667,6.333333333333333,2.916666666666667,-3.916666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,44.166666666666664,-5.166666666666667,4.166666666666667,8.833333333333334,4.166666666666667,-5.166666666666667,48.333333333333336,-5.583333333333333,4.583333333333333,9.666666666666666,4.583333333333333,-5.583333333333333};
ResRA.Reshape(new ILDimension(6,1,4,3));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,10.833333333333334,-1.833333333333333,0.833333333333333,2.166666666666667,0.833333333333333,-1.833333333333333,15.000000000000000,-2.250000000000000,1.250000000000000,3.000000000000000,1.250000000000000,-2.250000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,27.500000000000000,-3.500000000000000,2.500000000000000,5.500000000000000,2.500000000000000,-3.500000000000000,31.666666666666668,-3.916666666666667,2.916666666666667,6.333333333333333,2.916666666666667,-3.916666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,44.166666666666664,-5.166666666666667,4.166666666666667,8.833333333333334,4.166666666666667,-5.166666666666667,48.333333333333336,-5.583333333333333,4.583333333333333,9.666666666666666,4.583333333333333,-5.583333333333333};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000,0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,0.000000000000000,1.443375672974064,2.020725942163690,0.000000000000000,-2.020725942163690,-1.443375672974064,0.000000000000000,2.165063509461096,2.742413778650722,0.000000000000000,-2.742413778650722,-2.165063509461096,0.000000000000000,2.886751345948129,3.464101615137755,0.000000000000000,-3.464101615137755,-2.886751345948129,0.000000000000000,3.608439182435161,4.185789451624786,0.000000000000000,-4.185789451624786,-3.608439182435161,0.000000000000000,4.330127018922193,4.907477288111819,0.000000000000000,-4.907477288111819,-4.330127018922193,0.000000000000000,5.051814855409226,5.629165124598852,0.000000000000000,-5.629165124598852,-5.051814855409226,0.000000000000000,5.773502691896257,6.350852961085884,0.000000000000000,-6.350852961085884,-5.773502691896257,0.000000000000000,6.495190528383290,7.072540797572915,0.000000000000000,-7.072540797572915,-6.495190528383290,0.000000000000000,7.216878364870322,7.794228634059947,0.000000000000000,-7.794228634059947,-7.216878364870322,0.000000000000000,7.938566201357354,8.515916470546980,0.000000000000000,-8.515916470546980,-7.938566201357354};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,4,3));
ResRA = new double[]{1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000,9.583333333333334,-1.333333333333333,0.833333333333333,1.916666666666667,0.833333333333333,-1.333333333333333,9.583333333333334,-1.333333333333333,0.833333333333333,1.916666666666667,0.833333333333333,-1.333333333333333,11.666666666666666,-1.541666666666667,1.041666666666667,2.333333333333334,1.041666666666667,-1.541666666666667,11.666666666666666,-1.541666666666667,1.041666666666667,2.333333333333334,1.041666666666667,-1.541666666666667,13.750000000000000,-1.750000000000000,1.250000000000000,2.750000000000000,1.250000000000000,-1.750000000000000,13.750000000000000,-1.750000000000000,1.250000000000000,2.750000000000000,1.250000000000000,-1.750000000000000,15.833333333333334,-1.958333333333333,1.458333333333333,3.166666666666667,1.458333333333333,-1.958333333333333,15.833333333333334,-1.958333333333333,1.458333333333333,3.166666666666667,1.458333333333333,-1.958333333333333,17.916666666666668,-2.166666666666667,1.666666666666667,3.583333333333334,1.666666666666667,-2.166666666666667,17.916666666666668,-2.166666666666667,1.666666666666667,3.583333333333334,1.666666666666667,-2.166666666666667,20.000000000000000,-2.375000000000000,1.875000000000000,4.000000000000000,1.875000000000000,-2.375000000000000,20.000000000000000,-2.375000000000000,1.875000000000000,4.000000000000000,1.875000000000000,-2.375000000000000,22.083333333333332,-2.583333333333334,2.083333333333334,4.416666666666667,2.083333333333334,-2.583333333333334,22.083333333333332,-2.583333333333334,2.083333333333334,4.416666666666667,2.083333333333334,-2.583333333333334,24.166666666666668,-2.791666666666667,2.291666666666667,4.833333333333333,2.291666666666667,-2.791666666666667,24.166666666666668,-2.791666666666667,2.291666666666667,4.833333333333333,2.291666666666667,-2.791666666666667};
ResRA.Reshape(new ILDimension(6,2,4,3));
ResIAR = new double[]{1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000,9.583333333333334,-1.333333333333333,0.833333333333333,1.916666666666667,0.833333333333333,-1.333333333333333,9.583333333333334,-1.333333333333333,0.833333333333333,1.916666666666667,0.833333333333333,-1.333333333333333,11.666666666666666,-1.541666666666667,1.041666666666667,2.333333333333334,1.041666666666667,-1.541666666666667,11.666666666666666,-1.541666666666667,1.041666666666667,2.333333333333334,1.041666666666667,-1.541666666666667,13.750000000000000,-1.750000000000000,1.250000000000000,2.750000000000000,1.250000000000000,-1.750000000000000,13.750000000000000,-1.750000000000000,1.250000000000000,2.750000000000000,1.250000000000000,-1.750000000000000,15.833333333333334,-1.958333333333333,1.458333333333333,3.166666666666667,1.458333333333333,-1.958333333333333,15.833333333333334,-1.958333333333333,1.458333333333333,3.166666666666667,1.458333333333333,-1.958333333333333,17.916666666666668,-2.166666666666667,1.666666666666667,3.583333333333334,1.666666666666667,-2.166666666666667,17.916666666666668,-2.166666666666667,1.666666666666667,3.583333333333334,1.666666666666667,-2.166666666666667,20.000000000000000,-2.375000000000000,1.875000000000000,4.000000000000000,1.875000000000000,-2.375000000000000,20.000000000000000,-2.375000000000000,1.875000000000000,4.000000000000000,1.875000000000000,-2.375000000000000,22.083333333333332,-2.583333333333334,2.083333333333334,4.416666666666667,2.083333333333334,-2.583333333333334,22.083333333333332,-2.583333333333334,2.083333333333334,4.416666666666667,2.083333333333334,-2.583333333333334,24.166666666666668,-2.791666666666667,2.291666666666667,4.833333333333333,2.291666666666667,-2.791666666666667,24.166666666666668,-2.791666666666667,2.291666666666667,4.833333333333333,2.291666666666667,-2.791666666666667};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.288675134594813,0.000000000000000,-0.288675134594813,-0.000000000000000,0.000000000000000,-0.000000000000000,0.288675134594813,0.000000000000000,-0.288675134594813,-0.000000000000000,0.000000000000000,0.360843918243516,0.649519052838329,0.000000000000000,-0.649519052838329,-0.360843918243516,0.000000000000000,0.360843918243516,0.649519052838329,0.000000000000000,-0.649519052838329,-0.360843918243516,0.000000000000000,0.721687836487032,1.010362971081845,0.000000000000000,-1.010362971081845,-0.721687836487032,0.000000000000000,0.721687836487032,1.010362971081845,0.000000000000000,-1.010362971081845,-0.721687836487032,0.000000000000000,1.082531754730548,1.371206889325361,0.000000000000000,-1.371206889325361,-1.082531754730548,0.000000000000000,1.082531754730548,1.371206889325361,0.000000000000000,-1.371206889325361,-1.082531754730548,0.000000000000000,1.443375672974064,1.732050807568877,0.000000000000000,-1.732050807568877,-1.443375672974064,0.000000000000000,1.443375672974064,1.732050807568877,0.000000000000000,-1.732050807568877,-1.443375672974064,0.000000000000000,1.804219591217581,2.092894725812393,0.000000000000000,-2.092894725812393,-1.804219591217581,0.000000000000000,1.804219591217581,2.092894725812393,0.000000000000000,-2.092894725812393,-1.804219591217581,0.000000000000000,2.165063509461096,2.453738644055910,0.000000000000000,-2.453738644055910,-2.165063509461096,0.000000000000000,2.165063509461096,2.453738644055910,0.000000000000000,-2.453738644055910,-2.165063509461096,0.000000000000000,2.525907427704613,2.814582562299426,0.000000000000000,-2.814582562299426,-2.525907427704613,0.000000000000000,2.525907427704613,2.814582562299426,0.000000000000000,-2.814582562299426,-2.525907427704613,0.000000000000000,2.886751345948129,3.175426480542942,0.000000000000000,-3.175426480542942,-2.886751345948129,0.000000000000000,2.886751345948129,3.175426480542942,0.000000000000000,-3.175426480542942,-2.886751345948129,0.000000000000000,3.247595264191645,3.536270398786458,0.000000000000000,-3.536270398786458,-3.247595264191645,0.000000000000000,3.247595264191645,3.536270398786458,0.000000000000000,-3.536270398786458,-3.247595264191645,0.000000000000000,3.608439182435161,3.897114317029974,0.000000000000000,-3.897114317029974,-3.608439182435161,0.000000000000000,3.608439182435161,3.897114317029974,0.000000000000000,-3.897114317029974,-3.608439182435161,0.000000000000000,3.969283100678677,4.257958235273490,0.000000000000000,-4.257958235273490,-3.969283100678677,0.000000000000000,3.969283100678677,4.257958235273490,0.000000000000000,-4.257958235273490,-3.969283100678677};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
}
private static void TEST_FFT_double_complex_16() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
A.Reshape(new ILDimension(5,4,1,3));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{7.000000000000000,9.000000000000000,11.000000000000000,13.000000000000000,15.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,47.000000000000000,49.000000000000000,51.000000000000000,53.000000000000000,55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,87.000000000000000,89.000000000000000,91.000000000000000,93.000000000000000,95.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{34.000000000000000,38.000000000000000,42.000000000000000,46.000000000000000,50.000000000000000,-18.989356881873896,-19.298373876248846,-19.607390870623792,-19.916407864998739,-20.225424859373685,4.489356881873896,5.298373876248844,6.107390870623792,6.916407864998739,7.725424859373685,4.489356881873896,5.298373876248844,6.107390870623792,6.916407864998739,7.725424859373685,-18.989356881873896,-19.298373876248846,-19.607390870623792,-19.916407864998739,-20.225424859373685,114.000000000000000,118.000000000000000,122.000000000000000,126.000000000000000,130.000000000000000,-25.169696769372845,-25.478713763747791,-25.787730758122741,-26.096747752497688,-26.405764746872634,20.669696769372845,21.478713763747791,22.287730758122741,23.096747752497688,23.905764746872634,20.669696769372845,21.478713763747791,22.287730758122741,23.096747752497688,23.905764746872634,-25.169696769372845,-25.478713763747791,-25.787730758122741,-26.096747752497688,-26.405764746872634,194.000000000000000,198.000000000000000,202.000000000000000,206.000000000000000,210.000000000000000,-31.350036656871794,-31.659053651246744,-31.968070645621687,-32.277087639996637,-32.586104634371587,36.850036656871794,37.659053651246744,38.468070645621687,39.277087639996637,40.086104634371587,36.850036656871794,37.659053651246744,38.468070645621687,39.277087639996637,40.086104634371587,-31.350036656871794,-31.659053651246744,-31.968070645621687,-32.277087639996637,-32.586104634371587};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.767412836308555,-3.718469352603709,-4.669525868898862,-5.620582385194015,-6.571638901489169,-8.281994095230607,-8.869779347523078,-9.457564599815552,-10.045349852108025,-10.633135104400498,8.281994095230607,8.869779347523078,9.457564599815552,10.045349852108025,10.633135104400498,2.767412836308555,3.718469352603709,4.669525868898862,5.620582385194015,6.571638901489169,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.788543162211624,-22.739599678506778,-23.690656194801932,-24.641712711097085,-25.592769227392239,-20.037699141080068,-20.625484393372542,-21.213269645665015,-21.801054897957489,-22.388840150249962,20.037699141080068,20.625484393372542,21.213269645665015,21.801054897957489,22.388840150249962,21.788543162211624,22.739599678506778,23.690656194801932,24.641712711097085,25.592769227392239,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.809673488114697,-41.760730004409851,-42.711786520705004,-43.662843037000158,-44.613899553295312,-31.793404186929532,-32.381189439222005,-32.968974691514475,-33.556759943806952,-34.144545196099422,31.793404186929532,32.381189439222005,32.968974691514475,33.556759943806952,34.144545196099422,40.809673488114697,41.760730004409851,42.711786520705004,43.662843037000158,44.613899553295312};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,21.000000000000000,41.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,1,3));
ResRA = new double[]{1.000000000000000,21.000000000000000,41.000000000000000};
ResRA.Reshape(new ILDimension(1,1,1,3));
ResIAR = new double[]{1.000000000000000,21.000000000000000,41.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{7.000000000000000,-5.000000000000000,47.000000000000000,-5.000000000000000,87.000000000000000,-5.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,1,3));
ResRA = new double[]{3.500000000000000,-2.500000000000000,23.500000000000000,-2.500000000000000,43.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,2,1,3));
ResIAR = new double[]{3.500000000000000,-2.500000000000000,23.500000000000000,-2.500000000000000,43.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{18.000000000000000,-7.500000000000000,-7.500000000000000,78.000000000000000,-7.500000000000000,-7.500000000000000,138.000000000000000,-7.500000000000000,-7.500000000000000};
ResultI = new double[]{0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,1,3));
ResRA = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000,26.000000000000000,-2.500000000000000,-2.500000000000000,46.000000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,3,1,3));
ResIAR = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000,26.000000000000000,-2.500000000000000,-2.500000000000000,46.000000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{34.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,114.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,194.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000};
ResultI = new double[]{0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,1,3));
ResRA = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,28.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,48.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,4,1,3));
ResIAR = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,28.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,48.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{34.000000000000000,-18.989356881873896,4.489356881873896,4.489356881873896,-18.989356881873896,114.000000000000000,-25.169696769372845,20.669696769372845,20.669696769372845,-25.169696769372845,194.000000000000000,-31.350036656871794,36.850036656871794,36.850036656871794,-31.350036656871794};
ResultI = new double[]{0.000000000000000,-2.767412836308555,-8.281994095230607,8.281994095230607,2.767412836308555,0.000000000000000,-21.788543162211624,-20.037699141080068,20.037699141080068,21.788543162211624,0.000000000000000,-40.809673488114697,-31.793404186929532,31.793404186929532,40.809673488114697};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,1,3));
ResRA = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779,22.800000000000001,-5.033939353874569,4.133939353874569,4.133939353874569,-5.033939353874569,38.799999999999997,-6.270007331374359,7.370007331374358,7.370007331374358,-6.270007331374359};
ResRA.Reshape(new ILDimension(1,5,1,3));
ResIAR = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779,22.800000000000001,-5.033939353874569,4.133939353874569,4.133939353874569,-5.033939353874569,38.799999999999997,-6.270007331374359,7.370007331374358,7.370007331374358,-6.270007331374359};
ResIAI = new double[]{0.000000000000000,0.553482567261711,1.656398819046121,-1.656398819046121,-0.553482567261711,0.000000000000000,4.357708632442325,4.007539828216014,-4.007539828216014,-4.357708632442325,0.000000000000000,8.161934697622939,6.358680837385906,-6.358680837385906,-8.161934697622939};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,1,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,1,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{16.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,96.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,176.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,1,3));
ResRA = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,44.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2,1,3));
ResIAR = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,44.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{39.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,159.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,279.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,1,3));
ResRA = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,46.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3,1,3));
ResIAR = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,46.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,232.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,392.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,1,3));
ResRA = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,29.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,49.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4,1,3));
ResIAR = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,29.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,49.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-38.287730758122741,0.309016994374950,9.787730758122740,-0.809016994374948,9.787730758122740,-0.809016994374948,-38.287730758122741,0.309016994374950,232.000000000000000,-4.000000000000000,-50.648410533120639,0.309016994374947,42.148410533120639,-0.809016994374947,42.148410533120639,-0.809016994374947,-50.648410533120639,0.309016994374947,392.000000000000000,-4.000000000000000,-63.009090308118537,0.309016994374950,74.509090308118544,-0.809016994374950,74.509090308118544,-0.809016994374950,-63.009090308118537,0.309016994374950};
ResultI = new double[]{0.000000000000000,0.000000000000000,-6.485882188912264,0.951056516295154,-17.151773442753687,0.587785252292472,17.151773442753687,-0.587785252292472,6.485882188912264,-0.951056516295154,0.000000000000000,0.000000000000000,-44.528142840718402,0.951056516295154,-40.663183534452614,0.587785252292473,40.663183534452614,-0.587785252292473,44.528142840718402,-0.951056516295154,0.000000000000000,0.000000000000000,-82.570403492524548,0.951056516295154,-64.174593626151534,0.587785252292473,64.174593626151534,-0.587785252292473,82.570403492524548,-0.951056516295154};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,1,3));
ResRA = new double[]{7.199999999999999,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495,23.200000000000003,-0.400000000000000,-5.064841053312064,0.030901699437495,4.214841053312064,-0.080901699437495,4.214841053312064,-0.080901699437495,-5.064841053312064,0.030901699437495,39.200000000000003,-0.400000000000002,-6.300909030811853,0.030901699437495,7.450909030811854,-0.080901699437495,7.450909030811854,-0.080901699437495,-6.300909030811853,0.030901699437495};
ResRA.Reshape(new ILDimension(2,5,1,3));
ResIAR = new double[]{7.199999999999999,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495,23.200000000000003,-0.400000000000000,-5.064841053312064,0.030901699437495,4.214841053312064,-0.080901699437495,4.214841053312064,-0.080901699437495,-5.064841053312064,0.030901699437495,39.200000000000003,-0.400000000000002,-6.300909030811853,0.030901699437495,7.450909030811854,-0.080901699437495,7.450909030811854,-0.080901699437495,-6.300909030811853,0.030901699437495};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.648588218891226,-0.095105651629515,1.715177344275368,-0.058778525229247,-1.715177344275368,0.058778525229247,-0.648588218891226,0.095105651629515,0.000000000000000,0.000000000000000,4.452814284071840,-0.095105651629515,4.066318353445261,-0.058778525229247,-4.066318353445261,0.058778525229247,-4.452814284071840,0.095105651629515,0.000000000000000,0.000000000000000,8.257040349252454,-0.095105651629515,6.417459362615153,-0.058778525229247,-6.417459362615153,0.058778525229247,-8.257040349252454,0.095105651629515};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,1,3));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000,42.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1,1,3));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000,42.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{27.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,147.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,267.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,1,3));
ResRA = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,44.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2,1,3));
ResIAR = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,44.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{63.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,243.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,423.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,1,3));
ResRA = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,27.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,47.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3,1,3));
ResIAR = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,27.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,47.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,354.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,594.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,1,3));
ResRA = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,49.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,4,1,3));
ResIAR = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,49.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-57.895121628746530,1.287164595108754,-0.360113611983910,15.895121628746532,-0.704488531107295,-1.722562452017550,15.895121628746532,-1.722562452017550,-0.704488531107295,-57.895121628746530,-0.360113611983910,1.287164595108754,354.000000000000000,-6.000000000000000,-6.000000000000000,-76.436141291243374,1.287164595108754,-0.360113611983910,64.436141291243374,-0.704488531107294,-1.722562452017549,64.436141291243374,-1.722562452017549,-0.704488531107294,-76.436141291243374,-0.360113611983910,1.287164595108754,594.000000000000000,-6.000000000000000,-6.000000000000000,-94.977160953740224,1.287164595108754,-0.360113611983910,112.977160953740220,-0.704488531107297,-1.722562452017546,112.977160953740220,-1.722562452017546,-0.704488531107297,-94.977160953740224,-0.360113611983910,1.287164595108754};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,-11.155408057811126,1.158968207112914,1.694201341772547,-26.609338042569235,1.582307147660746,0.181048609216671,26.609338042569235,-0.181048609216671,-1.582307147660746,11.155408057811126,-1.694201341772547,-1.158968207112914,0.000000000000000,3.464101615137754,-3.464101615137754,-68.218799035520334,1.158968207112911,1.694201341772550,-61.876453180117622,1.582307147660747,0.181048609216669,61.876453180117622,-0.181048609216669,-1.582307147660747,68.218799035520334,-1.694201341772550,-1.158968207112911,0.000000000000000,3.464101615137754,-3.464101615137754,-125.282190013229550,1.158968207112917,1.694201341772544,-97.143568317666023,1.582307147660745,0.181048609216679,97.143568317666023,-0.181048609216679,-1.582307147660745,125.282190013229550,-1.694201341772544,-1.158968207112917};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,1,3));
ResRA = new double[]{7.600000000000001,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132260,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132260,0.085810973007250,23.599999999999998,-0.400000000000000,-0.400000000000000,-5.095742752749558,0.085810973007250,-0.024007574132261,4.295742752749558,-0.046965902073820,-0.114837496801170,4.295742752749558,-0.114837496801170,-0.046965902073820,-5.095742752749558,-0.024007574132261,0.085810973007250,39.600000000000001,-0.400000000000001,-0.400000000000001,-6.331810730249348,0.085810973007250,-0.024007574132261,7.531810730249347,-0.046965902073820,-0.114837496801170,7.531810730249347,-0.114837496801170,-0.046965902073820,-6.331810730249348,-0.024007574132261,0.085810973007250};
ResRA.Reshape(new ILDimension(3,5,1,3));
ResIAR = new double[]{7.600000000000001,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132260,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132260,0.085810973007250,23.599999999999998,-0.400000000000000,-0.400000000000000,-5.095742752749558,0.085810973007250,-0.024007574132261,4.295742752749558,-0.046965902073820,-0.114837496801170,4.295742752749558,-0.114837496801170,-0.046965902073820,-5.095742752749558,-0.024007574132261,0.085810973007250,39.600000000000001,-0.400000000000001,-0.400000000000001,-6.331810730249348,0.085810973007250,-0.024007574132261,7.531810730249347,-0.046965902073820,-0.114837496801170,7.531810730249347,-0.114837496801170,-0.046965902073820,-6.331810730249348,-0.024007574132261,0.085810973007250};
ResIAI = new double[]{0.000000000000000,-0.230940107675850,0.230940107675850,0.743693870520742,-0.077264547140861,-0.112946756118170,1.773955869504616,-0.105487143177383,-0.012069907281111,-1.773955869504616,0.012069907281111,0.105487143177383,-0.743693870520742,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,4.547919935701356,-0.077264547140861,-0.112946756118170,4.125096878674508,-0.105487143177383,-0.012069907281111,-4.125096878674508,0.012069907281111,0.105487143177383,-4.547919935701356,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,8.352146000881971,-0.077264547140861,-0.112946756118170,6.476237887844401,-0.105487143177383,-0.012069907281112,-6.476237887844401,0.012069907281112,0.105487143177383,-8.352146000881971,0.112946756118170,0.077264547140861};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,1,3));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,1,3));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{40.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,200.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,360.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,1,3));
ResRA = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2,1,3));
ResIAR = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{90.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,330.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,570.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,1,3));
ResRA = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,3,1,3));
ResIAR = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,480.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,800.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,1,3));
ResRA = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,4,1,3));
ResIAR = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-77.811529493745269,2.520147021340203,0.618033988749893,-1.284079043840410,22.811529493745269,-0.442463484164950,-1.618033988749895,-2.793604493334843,22.811529493745269,-2.793604493334843,-1.618033988749895,-0.442463484164950,-77.811529493745269,-1.284079043840410,0.618033988749893,2.520147021340203,480.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-102.532889043741060,2.520147021340204,0.618033988749900,-1.284079043840411,87.532889043741065,-0.442463484164950,-1.618033988749900,-2.793604493334843,87.532889043741065,-2.793604493334843,-1.618033988749900,-0.442463484164950,-102.532889043741060,-1.284079043840411,0.618033988749900,2.520147021340204,800.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-127.254248593736860,2.520147021340200,0.618033988749900,-1.284079043840414,152.254248593736860,-0.442463484164946,-1.618033988749914,-2.793604493334840,152.254248593736860,-2.793604493334840,-1.618033988749914,-0.442463484164946,-127.254248593736860,-1.284079043840414,0.618033988749900,2.520147021340200};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-16.775990443005142,1.284079043840414,1.902113032590307,2.520147021340200,-36.654687894677259,2.793604493334840,1.175570504584947,-0.442463484164950,36.654687894677259,0.442463484164950,-1.175570504584947,-2.793604493334840,16.775990443005142,-2.520147021340200,-1.902113032590307,-1.284079043840414,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-92.860511746617419,1.284079043840411,1.902113032590307,2.520147021340204,-83.677508078075107,2.793604493334843,1.175570504584947,-0.442463484164950,83.677508078075107,0.442463484164950,-1.175570504584947,-2.793604493334843,92.860511746617419,-2.520147021340204,-1.902113032590307,-1.284079043840411,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-168.945033050229710,1.284079043840414,1.902113032590307,2.520147021340200,-130.700328261472980,2.793604493334836,1.175570504584940,-0.442463484164950,130.700328261472980,0.442463484164950,-1.175570504584940,-2.793604493334836,168.945033050229710,-2.520147021340200,-1.902113032590307,-1.284079043840414};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,1,3));
ResRA = new double[]{7.999999999999999,-0.400000000000000,-0.399999999999999,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192020,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192020,0.030901699437495,0.126007351067010,24.000000000000000,-0.399999999999999,-0.399999999999999,-0.399999999999999,-5.126644452187053,0.126007351067010,0.030901699437495,-0.064203952192020,4.376644452187053,-0.022123174208247,-0.080901699437495,-0.139680224666742,4.376644452187053,-0.139680224666742,-0.080901699437495,-0.022123174208247,-5.126644452187053,-0.064203952192020,0.030901699437495,0.126007351067010,40.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-6.362712429686843,0.126007351067010,0.030901699437495,-0.064203952192021,7.612712429686843,-0.022123174208247,-0.080901699437495,-0.139680224666742,7.612712429686843,-0.139680224666742,-0.080901699437495,-0.022123174208247,-6.362712429686843,-0.064203952192021,0.030901699437495,0.126007351067010};
ResRA.Reshape(new ILDimension(4,5,1,3));
ResIAR = new double[]{7.999999999999999,-0.400000000000000,-0.399999999999999,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192020,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192020,0.030901699437495,0.126007351067010,24.000000000000000,-0.399999999999999,-0.399999999999999,-0.399999999999999,-5.126644452187053,0.126007351067010,0.030901699437495,-0.064203952192020,4.376644452187053,-0.022123174208247,-0.080901699437495,-0.139680224666742,4.376644452187053,-0.139680224666742,-0.080901699437495,-0.022123174208247,-5.126644452187053,-0.064203952192020,0.030901699437495,0.126007351067010,40.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-6.362712429686843,0.126007351067010,0.030901699437495,-0.064203952192021,7.612712429686843,-0.022123174208247,-0.080901699437495,-0.139680224666742,7.612712429686843,-0.139680224666742,-0.080901699437495,-0.022123174208247,-6.362712429686843,-0.064203952192021,0.030901699437495,0.126007351067010};
ResIAI = new double[]{0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,0.838799522150257,-0.064203952192021,-0.095105651629515,-0.126007351067010,1.832734394733863,-0.139680224666742,-0.058778525229247,0.022123174208248,-1.832734394733863,-0.022123174208248,0.058778525229247,0.139680224666742,-0.838799522150257,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.399999999999999,0.000000000000000,0.399999999999999,4.643025587330872,-0.064203952192021,-0.095105651629515,-0.126007351067010,4.183875403903755,-0.139680224666742,-0.058778525229247,0.022123174208247,-4.183875403903755,-0.022123174208247,0.058778525229247,0.139680224666742,-4.643025587330872,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,8.447251652511485,-0.064203952192021,-0.095105651629515,-0.126007351067010,6.535016413073648,-0.139680224666742,-0.058778525229248,0.022123174208247,-6.535016413073648,-0.022123174208247,0.058778525229248,0.139680224666742,-8.447251652511485,0.126007351067010,0.095105651629515,0.064203952192021};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,1,3));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(5,1,1,3));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,255.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,455.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,1,3));
ResRA = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,2,1,3));
ResIAR = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{120.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,420.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,720.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,1,3));
ResRA = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,3,1,3));
ResIAR = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1010.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,4,1,3));
ResIAR = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-98.036954353118972,4.045084971874739,1.545084971874741,0.000000000000003,-2.499999999999996,30.536954353118958,-0.000000000000002,-1.545084971874738,-2.500000000000001,-4.045084971874740,30.536954353118958,-4.045084971874740,-2.500000000000001,-1.545084971874738,-0.000000000000002,-98.036954353118972,-2.499999999999996,0.000000000000003,1.545084971874741,4.045084971874739,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-128.938653790613700,4.045084971874736,1.545084971874737,-0.000000000000000,-2.500000000000000,111.438653790613700,0.000000000000001,-1.545084971874737,-2.500000000000000,-4.045084971874737,111.438653790613700,-4.045084971874737,-2.500000000000000,-1.545084971874737,0.000000000000001,-128.938653790613700,-2.500000000000000,-0.000000000000000,1.545084971874737,4.045084971874736,1010.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-159.840353228108430,4.045084971874726,1.545084971874741,0.000000000000004,-2.500000000000012,192.340353228108430,0.000000000000012,-1.545084971874746,-2.499999999999999,-4.045084971874725,192.340353228108430,-4.045084971874725,-2.499999999999999,-1.545084971874746,0.000000000000012,-159.840353228108430,-2.500000000000012,0.000000000000004,1.545084971874741,4.045084971874726};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-23.347629344494312,1.314327780297837,2.126627020880101,2.628655560595667,3.440954801177931,-47.287822999077761,4.253254041760197,2.126627020880099,0.812299240582264,-1.314327780297834,47.287822999077761,1.314327780297834,-0.812299240582264,-2.126627020880099,-4.253254041760197,23.347629344494312,-3.440954801177931,-2.628655560595667,-2.126627020880101,-1.314327780297837,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-118.453280974009660,1.314327780297834,2.126627020880099,2.628655560595670,3.440954801177934,-106.066348228325080,4.253254041760203,2.126627020880104,0.812299240582267,-1.314327780297832,106.066348228325080,1.314327780297832,-0.812299240582267,-2.126627020880104,-4.253254041760203,118.453280974009660,-3.440954801177934,-2.628655560595670,-2.126627020880099,-1.314327780297834,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-213.558932603525020,1.314327780297832,2.126627020880102,2.628655560595666,3.440954801177937,-164.844873457572390,4.253254041760201,2.126627020880097,0.812299240582267,-1.314327780297838,164.844873457572390,1.314327780297838,-0.812299240582267,-2.126627020880097,-4.253254041760201,213.558932603525020,-3.440954801177937,-2.628655560595666,-2.126627020880102,-1.314327780297832};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,1,3));
ResRA = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874990,0.061803398874990,0.000000000000000,-0.100000000000000,1.221478174124758,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,1.221478174124758,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874990,24.399999999999999,-0.399999999999998,-0.400000000000000,-0.400000000000000,-0.399999999999998,-5.157546151624548,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,4.457546151624548,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,4.457546151624548,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-5.157546151624548,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,40.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-6.393614129124338,0.161803398874989,0.061803398874990,0.000000000000000,-0.100000000000000,7.693614129124337,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,7.693614129124337,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-6.393614129124338,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874989};
ResRA.Reshape(new ILDimension(5,5,1,3));
ResIAR = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874990,0.061803398874990,0.000000000000000,-0.100000000000000,1.221478174124758,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,1.221478174124758,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874990,24.399999999999999,-0.399999999999998,-0.400000000000000,-0.400000000000000,-0.399999999999998,-5.157546151624548,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,4.457546151624548,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,4.457546151624548,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-5.157546151624548,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,40.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-6.393614129124338,0.161803398874989,0.061803398874990,0.000000000000000,-0.100000000000000,7.693614129124337,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,7.693614129124337,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-6.393614129124338,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874989};
ResIAI = new double[]{0.000000000000000,-0.550552768188469,-0.129967878493163,0.129967878493163,0.550552768188469,0.933905173779772,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,1.891512919963110,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-1.891512919963110,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-0.933905173779772,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188469,-0.129967878493162,0.129967878493162,0.550552768188469,4.738131238960387,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,4.242653929133004,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-4.242653929133004,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-4.738131238960387,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188470,-0.129967878493162,0.129967878493162,0.550552768188470,8.542357304141001,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047118,6.593794938302895,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-6.593794938302895,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-8.542357304141001,0.137638192047118,0.105146222423827,0.085065080835204,0.052573111211913};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(6,0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,1,3));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333};
ResRA.Reshape(new ILDimension(6,1,1,3));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000,0.000000000000000,2.886751345948129,3.464101615137755,0.000000000000000,-3.464101615137755,-2.886751345948129,0.000000000000000,5.773502691896257,6.350852961085884,0.000000000000000,-6.350852961085884,-5.773502691896257};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new double[]{55.000000000000000,-14.500000000000000,2.500000000000000,11.000000000000000,2.500000000000000,-14.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,255.000000000000000,-34.500000000000000,22.500000000000000,51.000000000000000,22.500000000000000,-34.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,455.000000000000000,-54.500000000000000,42.500000000000000,91.000000000000000,42.500000000000000,-54.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000};
ResultI = new double[]{0.000000000000000,-4.330127018922193,-11.258330249197702,0.000000000000000,11.258330249197702,4.330127018922193,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-38.971143170299740,-45.899346400575247,0.000000000000000,45.899346400575247,38.971143170299740,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-73.612159321677282,-80.540362551952796,0.000000000000000,80.540362551952796,73.612159321677282,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,1,3));
ResRA = new double[]{4.583333333333333,-1.208333333333333,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,21.250000000000000,-2.875000000000000,1.875000000000000,4.250000000000000,1.875000000000000,-2.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,37.916666666666664,-4.541666666666667,3.541666666666667,7.583333333333333,3.541666666666667,-4.541666666666667,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResRA.Reshape(new ILDimension(6,2,1,3));
ResIAR = new double[]{4.583333333333333,-1.208333333333333,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,21.250000000000000,-2.875000000000000,1.875000000000000,4.250000000000000,1.875000000000000,-2.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,37.916666666666664,-4.541666666666667,3.541666666666667,7.583333333333333,3.541666666666667,-4.541666666666667,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResIAI = new double[]{0.000000000000000,0.360843918243516,0.938194187433142,0.000000000000000,-0.938194187433142,-0.360843918243516,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,3.247595264191645,3.824945533381271,0.000000000000000,-3.824945533381271,-3.247595264191645,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,6.134346610139773,6.711696879329399,0.000000000000000,-6.711696879329399,-6.134346610139773,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new double[]{120.000000000000000,-25.500000000000000,7.500000000000000,24.000000000000000,7.500000000000000,-25.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,420.000000000000000,-55.500000000000000,37.500000000000000,84.000000000000000,37.500000000000000,-55.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,720.000000000000000,-85.500000000000000,67.500000000000000,144.000000000000000,67.500000000000000,-85.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000};
ResultI = new double[]{0.000000000000000,-12.990381056766578,-23.382685902179841,0.000000000000000,23.382685902179841,12.990381056766578,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-64.951905283832900,-75.344210129246164,0.000000000000000,75.344210129246164,64.951905283832900,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-116.913429510899210,-127.305734356312470,0.000000000000000,127.305734356312470,116.913429510899210,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3,1,3));
ResRA = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667};
ResRA.Reshape(new ILDimension(6,3,1,3));
ResIAR = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667};
ResIAI = new double[]{0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,3.608439182435161,4.185789451624786,0.000000000000000,-4.185789451624786,-3.608439182435161,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,6.495190528383290,7.072540797572915,0.000000000000000,-7.072540797572915,-6.495190528383290,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,610.000000000000000,-79.000000000000000,55.000000000000000,122.000000000000000,55.000000000000000,-79.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,1010.000000000000000,-119.000000000000000,95.000000000000000,202.000000000000000,95.000000000000000,-119.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-95.262794416288244,-109.119200876839260,0.000000000000000,109.119200876839260,95.262794416288244,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-164.544826719043330,-178.401233179594360,0.000000000000000,178.401233179594360,164.544826719043330,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,1,3));
ResRA = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,25.416666666666668,-3.291666666666667,2.291666666666667,5.083333333333333,2.291666666666667,-3.291666666666667,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,42.083333333333336,-4.958333333333333,3.958333333333334,8.416666666666666,3.958333333333334,-4.958333333333333,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResRA.Reshape(new ILDimension(6,4,1,3));
ResIAR = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,25.416666666666668,-3.291666666666667,2.291666666666667,5.083333333333333,2.291666666666667,-3.291666666666667,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,42.083333333333336,-4.958333333333333,3.958333333333334,8.416666666666666,3.958333333333334,-4.958333333333333,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResIAI = new double[]{0.000000000000000,1.082531754730548,1.659882023920174,0.000000000000000,-1.659882023920174,-1.082531754730548,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,3.969283100678677,4.546633369868302,0.000000000000000,-4.546633369868302,-3.969283100678677,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,6.856034446626805,7.433384715816431,0.000000000000000,-7.433384715816431,-6.856034446626805,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-98.036954353118958,9.621261194543136,-14.207737073390824,-19.607390870623789,-4.472602814108122,12.767282625455183,30.536954353118958,-13.357652230006455,-6.859358218078331,6.107390870623791,10.539698105577276,-0.030891589991866,30.536954353118958,-0.030891589991866,10.539698105577276,6.107390870623791,-6.859358218078331,-13.357652230006455,-98.036954353118958,12.767282625455183,-4.472602814108122,-19.607390870623789,-14.207737073390824,9.621261194543136,610.000000000000000,-79.000000000000000,55.000000000000000,122.000000000000000,55.000000000000000,-79.000000000000000,-128.938653790613700,-3.761350932634024,-33.770689088066938,-25.787730758122741,8.910009313069033,32.330234640131295,111.438653790613700,-31.628561382858472,-8.949927483431399,22.287730758122741,28.810607258429304,2.059677675361201,111.438653790613700,2.059677675361201,28.810607258429304,22.287730758122741,-8.949927483431399,-31.628561382858472,-128.938653790613700,32.330234640131295,8.910009313069033,-25.787730758122741,-33.770689088066938,-3.761350932634024,1010.000000000000000,-119.000000000000000,95.000000000000000,202.000000000000000,95.000000000000000,-119.000000000000000,-159.840353228108460,-17.143963059811188,-53.333641102743044,-31.968070645621687,22.292621440246208,51.893186654807408,192.340353228108460,-49.899470535710492,-11.040496748784474,38.468070645621687,47.081516411281314,4.150246940714272,192.340353228108460,4.150246940714272,47.081516411281314,38.468070645621687,-11.040496748784474,-49.899470535710492,-159.840353228108460,51.893186654807408,22.292621440246208,-31.968070645621687,-53.333641102743044,-17.143963059811188};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,-23.347629344494312,22.792166151679456,16.339937003214402,-4.669525868898862,-18.156293323227807,-9.563131636124215,-47.287822999077761,4.186548098088650,-9.836889335492469,-9.457564599815553,2.142680492554329,10.561083772359158,47.287822999077761,-10.561083772359158,-2.142680492554329,9.457564599815553,9.836889335492469,-4.186548098088650,23.347629344494312,9.563131636124215,18.156293323227807,4.669525868898862,-16.339937003214402,-22.792166151679456,0.000000000000000,-95.262794416288244,-109.119200876839260,0.000000000000000,109.119200876839260,95.262794416288244,-118.453280974009660,37.655062661227333,12.181703186859213,-23.690656194801932,-33.019189832775680,-5.404897819769023,-106.066348228325070,-3.948184763427351,-29.727327242857928,-21.213269645665015,10.277413354070337,30.451521679724628,106.066348228325070,-30.451521679724628,-10.277413354070337,21.213269645665015,29.727327242857928,3.948184763427351,118.453280974009660,5.404897819769023,33.019189832775680,23.690656194801932,-12.181703186859213,-37.655062661227333,0.000000000000000,-164.544826719043330,-178.401233179594360,0.000000000000000,178.401233179594360,164.544826719043330,-213.558932603525020,52.517959170775221,8.023469370504035,-42.711786520705004,-47.882086342323575,-1.246664003413834,-164.844873457572390,-12.082917624943352,-49.617765150223413,-32.968974691514475,18.412146215586340,50.341959587090088,164.844873457572390,-50.341959587090088,-18.412146215586340,32.968974691514475,49.617765150223413,12.082917624943352,213.558932603525020,1.246664003413834,47.882086342323575,42.711786520705004,-8.023469370504035,-52.517959170775221};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5,1,3));
ResRA = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437299,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666396,1.017898478437299,-0.001029719666396,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437299,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771,20.333333333333332,-2.633333333333333,1.833333333333333,4.066666666666666,1.833333333333333,-2.633333333333333,-4.297955126353790,-0.125378364421134,-1.125689636268898,-0.859591025270758,0.297000310435635,1.077674488004377,3.714621793020457,-1.054285379428616,-0.298330916114380,0.742924358604091,0.960353575280976,0.068655922512040,3.714621793020457,0.068655922512040,0.960353575280976,0.742924358604091,-0.298330916114380,-1.054285379428616,-4.297955126353790,1.077674488004377,0.297000310435635,-0.859591025270758,-1.125689636268898,-0.125378364421134,33.666666666666664,-3.966666666666667,3.166666666666667,6.733333333333332,3.166666666666667,-3.966666666666667,-5.328011774270282,-0.571465435327039,-1.777788036758101,-1.065602354854056,0.743087381341540,1.729772888493580,6.411345107603616,-1.663315684523683,-0.368016558292816,1.282269021520723,1.569383880376044,0.138341564690476,6.411345107603616,0.138341564690476,1.569383880376044,1.282269021520723,-0.368016558292816,-1.663315684523683,-5.328011774270282,1.729772888493580,0.743087381341540,-1.065602354854056,-1.777788036758101,-0.571465435327039};
ResRA.Reshape(new ILDimension(6,5,1,3));
ResIAR = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437299,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666396,1.017898478437299,-0.001029719666396,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437299,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771,20.333333333333332,-2.633333333333333,1.833333333333333,4.066666666666666,1.833333333333333,-2.633333333333333,-4.297955126353790,-0.125378364421134,-1.125689636268898,-0.859591025270758,0.297000310435635,1.077674488004377,3.714621793020457,-1.054285379428616,-0.298330916114380,0.742924358604091,0.960353575280976,0.068655922512040,3.714621793020457,0.068655922512040,0.960353575280976,0.742924358604091,-0.298330916114380,-1.054285379428616,-4.297955126353790,1.077674488004377,0.297000310435635,-0.859591025270758,-1.125689636268898,-0.125378364421134,33.666666666666664,-3.966666666666667,3.166666666666667,6.733333333333332,3.166666666666667,-3.966666666666667,-5.328011774270282,-0.571465435327039,-1.777788036758101,-1.065602354854056,0.743087381341540,1.729772888493580,6.411345107603616,-1.663315684523683,-0.368016558292816,1.282269021520723,1.569383880376044,0.138341564690476,6.411345107603616,0.138341564690476,1.569383880376044,1.282269021520723,-0.368016558292816,-1.663315684523683,-5.328011774270282,1.729772888493580,0.743087381341540,-1.065602354854056,-1.777788036758101,-0.571465435327039};
ResIAI = new double[]{0.000000000000000,0.866025403784439,1.327905619136139,0.000000000000000,-1.327905619136139,-0.866025403784439,0.778254311483144,-0.759738871722649,-0.544664566773813,0.155650862296629,0.605209777440927,0.318771054537474,1.576260766635925,-0.139551603269622,0.327896311183082,0.315252153327185,-0.071422683085144,-0.352036125745305,-1.576260766635925,0.352036125745305,0.071422683085144,-0.315252153327185,-0.327896311183082,0.139551603269622,-0.778254311483144,-0.318771054537474,-0.605209777440927,-0.155650862296629,0.544664566773813,0.759738871722649,0.000000000000000,3.175426480542942,3.637306695894643,0.000000000000000,-3.637306695894643,-3.175426480542942,3.948442699133655,-1.255168755374245,-0.406056772895307,0.789688539826731,1.100639661092522,0.180163260658967,3.535544940944169,0.131606158780912,0.990910908095264,0.707108988188834,-0.342580445135678,-1.015050722657487,-3.535544940944169,1.015050722657487,0.342580445135678,-0.707108988188834,-0.990910908095264,-0.131606158780912,-3.948442699133655,-0.180163260658967,-1.100639661092522,-0.789688539826731,0.406056772895307,1.255168755374245,0.000000000000000,5.484827557301444,5.946707772653145,0.000000000000000,-5.946707772653145,-5.484827557301444,7.118631086784167,-1.750598639025841,-0.267448979016801,1.423726217356834,1.596069544744120,0.041555466780461,5.494829115252412,0.402763920831445,1.653925505007447,1.098965823050482,-0.613738207186212,-1.678065319569670,-5.494829115252412,1.678065319569670,0.613738207186212,-1.098965823050482,-1.653925505007447,-0.402763920831445,-7.118631086784167,-0.041555466780461,-1.596069544744120,-1.423726217356834,0.267448979016801,1.750598639025841};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_double_complex_17() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
A.Reshape(new ILDimension(5,4,3));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,26.000000000000000,27.000000000000000,28.000000000000000,29.000000000000000,30.000000000000000,31.000000000000000,32.000000000000000,33.000000000000000,34.000000000000000,35.000000000000000,36.000000000000000,37.000000000000000,38.000000000000000,39.000000000000000,40.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000,46.000000000000000,47.000000000000000,48.000000000000000,49.000000000000000,50.000000000000000,51.000000000000000,52.000000000000000,53.000000000000000,54.000000000000000,55.000000000000000,56.000000000000000,57.000000000000000,58.000000000000000,59.000000000000000,60.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,21.000000000000000,22.000000000000000,23.000000000000000,24.000000000000000,25.000000000000000,41.000000000000000,42.000000000000000,43.000000000000000,44.000000000000000,45.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{7.000000000000000,9.000000000000000,11.000000000000000,13.000000000000000,15.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,47.000000000000000,49.000000000000000,51.000000000000000,53.000000000000000,55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,87.000000000000000,89.000000000000000,91.000000000000000,93.000000000000000,95.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,3,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,4,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new double[]{34.000000000000000,38.000000000000000,42.000000000000000,46.000000000000000,50.000000000000000,-18.989356881873896,-19.298373876248846,-19.607390870623792,-19.916407864998739,-20.225424859373685,4.489356881873896,5.298373876248844,6.107390870623792,6.916407864998739,7.725424859373685,4.489356881873896,5.298373876248844,6.107390870623792,6.916407864998739,7.725424859373685,-18.989356881873896,-19.298373876248846,-19.607390870623792,-19.916407864998739,-20.225424859373685,114.000000000000000,118.000000000000000,122.000000000000000,126.000000000000000,130.000000000000000,-25.169696769372845,-25.478713763747791,-25.787730758122741,-26.096747752497688,-26.405764746872634,20.669696769372845,21.478713763747791,22.287730758122741,23.096747752497688,23.905764746872634,20.669696769372845,21.478713763747791,22.287730758122741,23.096747752497688,23.905764746872634,-25.169696769372845,-25.478713763747791,-25.787730758122741,-26.096747752497688,-26.405764746872634,194.000000000000000,198.000000000000000,202.000000000000000,206.000000000000000,210.000000000000000,-31.350036656871794,-31.659053651246744,-31.968070645621687,-32.277087639996637,-32.586104634371587,36.850036656871794,37.659053651246744,38.468070645621687,39.277087639996637,40.086104634371587,36.850036656871794,37.659053651246744,38.468070645621687,39.277087639996637,40.086104634371587,-31.350036656871794,-31.659053651246744,-31.968070645621687,-32.277087639996637,-32.586104634371587};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.767412836308555,-3.718469352603709,-4.669525868898862,-5.620582385194015,-6.571638901489169,-8.281994095230607,-8.869779347523078,-9.457564599815552,-10.045349852108025,-10.633135104400498,8.281994095230607,8.869779347523078,9.457564599815552,10.045349852108025,10.633135104400498,2.767412836308555,3.718469352603709,4.669525868898862,5.620582385194015,6.571638901489169,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.788543162211624,-22.739599678506778,-23.690656194801932,-24.641712711097085,-25.592769227392239,-20.037699141080068,-20.625484393372542,-21.213269645665015,-21.801054897957489,-22.388840150249962,20.037699141080068,20.625484393372542,21.213269645665015,21.801054897957489,22.388840150249962,21.788543162211624,22.739599678506778,23.690656194801932,24.641712711097085,25.592769227392239,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.809673488114697,-41.760730004409851,-42.711786520705004,-43.662843037000158,-44.613899553295312,-31.793404186929532,-32.381189439222005,-32.968974691514475,-33.556759943806952,-34.144545196099422,31.793404186929532,32.381189439222005,32.968974691514475,33.556759943806952,34.144545196099422,40.809673488114697,41.760730004409851,42.711786520705004,43.662843037000158,44.613899553295312};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,5,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000,21.000000000000000,26.000000000000000,31.000000000000000,36.000000000000000,41.000000000000000,46.000000000000000,51.000000000000000,56.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,21.000000000000000,41.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new double[]{1.000000000000000,21.000000000000000,41.000000000000000};
ResRA.Reshape(new ILDimension(1,1,3));
ResIAR = new double[]{1.000000000000000,21.000000000000000,41.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{7.000000000000000,-5.000000000000000,47.000000000000000,-5.000000000000000,87.000000000000000,-5.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new double[]{3.500000000000000,-2.500000000000000,23.500000000000000,-2.500000000000000,43.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,2,3));
ResIAR = new double[]{3.500000000000000,-2.500000000000000,23.500000000000000,-2.500000000000000,43.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{18.000000000000000,-7.500000000000000,-7.500000000000000,78.000000000000000,-7.500000000000000,-7.500000000000000,138.000000000000000,-7.500000000000000,-7.500000000000000};
ResultI = new double[]{0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193,0.000000000000000,4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3));
ResRA = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000,26.000000000000000,-2.500000000000000,-2.500000000000000,46.000000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,3,3));
ResIAR = new double[]{6.000000000000000,-2.500000000000000,-2.500000000000000,26.000000000000000,-2.500000000000000,-2.500000000000000,46.000000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064,0.000000000000000,-1.443375672974064,1.443375672974064};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new double[]{34.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,114.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,194.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000};
ResultI = new double[]{0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000,0.000000000000000,10.000000000000000,0.000000000000000,-10.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,28.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,48.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResRA.Reshape(new ILDimension(1,4,3));
ResIAR = new double[]{8.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,28.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,48.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResIAI = new double[]{0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,2.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new double[]{34.000000000000000,-18.989356881873896,4.489356881873896,4.489356881873896,-18.989356881873896,114.000000000000000,-25.169696769372845,20.669696769372845,20.669696769372845,-25.169696769372845,194.000000000000000,-31.350036656871794,36.850036656871794,36.850036656871794,-31.350036656871794};
ResultI = new double[]{0.000000000000000,-2.767412836308555,-8.281994095230607,8.281994095230607,2.767412836308555,0.000000000000000,-21.788543162211624,-20.037699141080068,20.037699141080068,21.788543162211624,0.000000000000000,-40.809673488114697,-31.793404186929532,31.793404186929532,40.809673488114697};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3));
ResRA = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779,22.800000000000001,-5.033939353874569,4.133939353874569,4.133939353874569,-5.033939353874569,38.799999999999997,-6.270007331374359,7.370007331374358,7.370007331374358,-6.270007331374359};
ResRA.Reshape(new ILDimension(1,5,3));
ResIAR = new double[]{6.800000000000000,-3.797871376374779,0.897871376374779,0.897871376374779,-3.797871376374779,22.800000000000001,-5.033939353874569,4.133939353874569,4.133939353874569,-5.033939353874569,38.799999999999997,-6.270007331374359,7.370007331374358,7.370007331374358,-6.270007331374359};
ResIAI = new double[]{0.000000000000000,0.553482567261711,1.656398819046121,-1.656398819046121,-0.553482567261711,0.000000000000000,4.357708632442325,4.007539828216014,-4.007539828216014,-4.357708632442325,0.000000000000000,8.161934697622939,6.358680837385906,-6.358680837385906,-8.161934697622939};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,53.000000000000000,-1.000000000000000,63.000000000000000,-1.000000000000000,73.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000,93.000000000000000,-1.000000000000000,103.000000000000000,-1.000000000000000,113.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,43.000000000000000,-1.000000000000000,83.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,3));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,21.500000000000000,-0.500000000000000,41.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{16.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,96.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000,176.000000000000000,-2.000000000000000,-10.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3));
ResRA = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,44.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,2,3));
ResIAR = new double[]{4.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,24.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,44.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{39.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,159.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000,279.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,-15.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000,0.000000000000000,0.000000000000000,8.660254037844386,0.000000000000000,-8.660254037844386,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,3));
ResRA = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,46.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,3,3));
ResIAR = new double[]{6.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,26.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,46.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-1.443375672974064,0.000000000000000,1.443375672974064,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,232.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,392.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-20.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,29.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,49.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(2,4,3));
ResIAR = new double[]{9.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,29.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,49.000000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,-2.500000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new double[]{72.000000000000000,-4.000000000000000,-38.287730758122741,0.309016994374950,9.787730758122740,-0.809016994374948,9.787730758122740,-0.809016994374948,-38.287730758122741,0.309016994374950,232.000000000000000,-4.000000000000000,-50.648410533120639,0.309016994374947,42.148410533120639,-0.809016994374947,42.148410533120639,-0.809016994374947,-50.648410533120639,0.309016994374947,392.000000000000000,-4.000000000000000,-63.009090308118537,0.309016994374950,74.509090308118544,-0.809016994374950,74.509090308118544,-0.809016994374950,-63.009090308118537,0.309016994374950};
ResultI = new double[]{0.000000000000000,0.000000000000000,-6.485882188912264,0.951056516295154,-17.151773442753687,0.587785252292472,17.151773442753687,-0.587785252292472,6.485882188912264,-0.951056516295154,0.000000000000000,0.000000000000000,-44.528142840718402,0.951056516295154,-40.663183534452614,0.587785252292473,40.663183534452614,-0.587785252292473,44.528142840718402,-0.951056516295154,0.000000000000000,0.000000000000000,-82.570403492524548,0.951056516295154,-64.174593626151534,0.587785252292473,64.174593626151534,-0.587785252292473,82.570403492524548,-0.951056516295154};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,3));
ResRA = new double[]{7.199999999999999,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495,23.200000000000003,-0.400000000000000,-5.064841053312064,0.030901699437495,4.214841053312064,-0.080901699437495,4.214841053312064,-0.080901699437495,-5.064841053312064,0.030901699437495,39.200000000000003,-0.400000000000002,-6.300909030811853,0.030901699437495,7.450909030811854,-0.080901699437495,7.450909030811854,-0.080901699437495,-6.300909030811853,0.030901699437495};
ResRA.Reshape(new ILDimension(2,5,3));
ResIAR = new double[]{7.199999999999999,-0.400000000000000,-3.828773075812274,0.030901699437495,0.978773075812274,-0.080901699437495,0.978773075812274,-0.080901699437495,-3.828773075812274,0.030901699437495,23.200000000000003,-0.400000000000000,-5.064841053312064,0.030901699437495,4.214841053312064,-0.080901699437495,4.214841053312064,-0.080901699437495,-5.064841053312064,0.030901699437495,39.200000000000003,-0.400000000000002,-6.300909030811853,0.030901699437495,7.450909030811854,-0.080901699437495,7.450909030811854,-0.080901699437495,-6.300909030811853,0.030901699437495};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.648588218891226,-0.095105651629515,1.715177344275368,-0.058778525229247,-1.715177344275368,0.058778525229247,-0.648588218891226,0.095105651629515,0.000000000000000,0.000000000000000,4.452814284071840,-0.095105651629515,4.066318353445261,-0.058778525229247,-4.066318353445261,0.058778525229247,-4.452814284071840,0.095105651629515,0.000000000000000,0.000000000000000,8.257040349252454,-0.095105651629515,6.417459362615153,-0.058778525229247,-6.417459362615153,0.058778525229247,-8.257040349252454,0.095105651629515};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,81.000000000000000,-1.500000000000000,-1.500000000000000,96.000000000000000,-1.500000000000000,-1.500000000000000,111.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000,141.000000000000000,-1.500000000000000,-1.500000000000000,156.000000000000000,-1.500000000000000,-1.500000000000000,171.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,66.000000000000000,-1.500000000000000,-1.500000000000000,126.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000,42.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1,3));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,22.000000000000000,-0.500000000000000,-0.500000000000000,42.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{27.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,147.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000,267.000000000000000,-3.000000000000000,-3.000000000000000,-15.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.732050807568877,-1.732050807568877,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3));
ResRA = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,44.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,2,3));
ResIAR = new double[]{4.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,24.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,44.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{63.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,243.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,423.000000000000000,-4.500000000000000,-4.500000000000000,-22.500000000000000,0.000000000000000,0.000000000000000,-22.500000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000,0.000000000000000,2.598076211353316,-2.598076211353316,12.990381056766578,0.000000000000000,0.000000000000000,-12.990381056766578,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,3));
ResRA = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,27.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,47.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,3,3));
ResIAR = new double[]{7.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,27.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,47.000000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-1.443375672974064,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,354.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,594.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,3.464101615137754,-3.464101615137754,30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3));
ResRA = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,49.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(3,4,3));
ResIAR = new double[]{9.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,29.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,49.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.288675134594813,0.288675134594813,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new double[]{114.000000000000000,-6.000000000000000,-6.000000000000000,-57.895121628746530,1.287164595108754,-0.360113611983910,15.895121628746532,-0.704488531107295,-1.722562452017550,15.895121628746532,-1.722562452017550,-0.704488531107295,-57.895121628746530,-0.360113611983910,1.287164595108754,354.000000000000000,-6.000000000000000,-6.000000000000000,-76.436141291243374,1.287164595108754,-0.360113611983910,64.436141291243374,-0.704488531107294,-1.722562452017549,64.436141291243374,-1.722562452017549,-0.704488531107294,-76.436141291243374,-0.360113611983910,1.287164595108754,594.000000000000000,-6.000000000000000,-6.000000000000000,-94.977160953740224,1.287164595108754,-0.360113611983910,112.977160953740220,-0.704488531107297,-1.722562452017546,112.977160953740220,-1.722562452017546,-0.704488531107297,-94.977160953740224,-0.360113611983910,1.287164595108754};
ResultI = new double[]{0.000000000000000,3.464101615137754,-3.464101615137754,-11.155408057811126,1.158968207112914,1.694201341772547,-26.609338042569235,1.582307147660746,0.181048609216671,26.609338042569235,-0.181048609216671,-1.582307147660746,11.155408057811126,-1.694201341772547,-1.158968207112914,0.000000000000000,3.464101615137754,-3.464101615137754,-68.218799035520334,1.158968207112911,1.694201341772550,-61.876453180117622,1.582307147660747,0.181048609216669,61.876453180117622,-0.181048609216669,-1.582307147660747,68.218799035520334,-1.694201341772550,-1.158968207112911,0.000000000000000,3.464101615137754,-3.464101615137754,-125.282190013229550,1.158968207112917,1.694201341772544,-97.143568317666023,1.582307147660745,0.181048609216679,97.143568317666023,-0.181048609216679,-1.582307147660745,125.282190013229550,-1.694201341772544,-1.158968207112917};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,3));
ResRA = new double[]{7.600000000000001,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132260,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132260,0.085810973007250,23.599999999999998,-0.400000000000000,-0.400000000000000,-5.095742752749558,0.085810973007250,-0.024007574132261,4.295742752749558,-0.046965902073820,-0.114837496801170,4.295742752749558,-0.114837496801170,-0.046965902073820,-5.095742752749558,-0.024007574132261,0.085810973007250,39.600000000000001,-0.400000000000001,-0.400000000000001,-6.331810730249348,0.085810973007250,-0.024007574132261,7.531810730249347,-0.046965902073820,-0.114837496801170,7.531810730249347,-0.114837496801170,-0.046965902073820,-6.331810730249348,-0.024007574132261,0.085810973007250};
ResRA.Reshape(new ILDimension(3,5,3));
ResIAR = new double[]{7.600000000000001,-0.400000000000000,-0.400000000000000,-3.859674775249769,0.085810973007250,-0.024007574132260,1.059674775249769,-0.046965902073820,-0.114837496801170,1.059674775249769,-0.114837496801170,-0.046965902073820,-3.859674775249769,-0.024007574132260,0.085810973007250,23.599999999999998,-0.400000000000000,-0.400000000000000,-5.095742752749558,0.085810973007250,-0.024007574132261,4.295742752749558,-0.046965902073820,-0.114837496801170,4.295742752749558,-0.114837496801170,-0.046965902073820,-5.095742752749558,-0.024007574132261,0.085810973007250,39.600000000000001,-0.400000000000001,-0.400000000000001,-6.331810730249348,0.085810973007250,-0.024007574132261,7.531810730249347,-0.046965902073820,-0.114837496801170,7.531810730249347,-0.114837496801170,-0.046965902073820,-6.331810730249348,-0.024007574132261,0.085810973007250};
ResIAI = new double[]{0.000000000000000,-0.230940107675850,0.230940107675850,0.743693870520742,-0.077264547140861,-0.112946756118170,1.773955869504616,-0.105487143177383,-0.012069907281111,-1.773955869504616,0.012069907281111,0.105487143177383,-0.743693870520742,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,4.547919935701356,-0.077264547140861,-0.112946756118170,4.125096878674508,-0.105487143177383,-0.012069907281111,-4.125096878674508,0.012069907281111,0.105487143177383,-4.547919935701356,0.112946756118170,0.077264547140861,0.000000000000000,-0.230940107675849,0.230940107675849,8.352146000881971,-0.077264547140861,-0.112946756118170,6.476237887844401,-0.105487143177383,-0.012069907281112,-6.476237887844401,0.012069907281112,0.105487143177383,-8.352146000881971,0.112946756118170,0.077264547140861};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new double[]{};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,90.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,170.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,3));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,22.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,42.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{40.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,200.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,360.000000000000000,-4.000000000000000,-4.000000000000000,-4.000000000000000,-20.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,4.000000000000000,0.000000000000000,-4.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,3));
ResRA = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,2,3));
ResIAR = new double[]{5.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{90.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,330.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,570.000000000000000,-6.000000000000000,-6.000000000000000,-6.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-30.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.000000000000000,0.000000000000000,-6.000000000000000,17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000,-17.320508075688771,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,3));
ResRA = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,3,3));
ResIAR = new double[]{7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,27.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,47.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,480.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,800.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-40.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3));
ResRA = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(4,4,3));
ResIAR = new double[]{10.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new double[]{160.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-77.811529493745269,2.520147021340203,0.618033988749893,-1.284079043840410,22.811529493745269,-0.442463484164950,-1.618033988749895,-2.793604493334843,22.811529493745269,-2.793604493334843,-1.618033988749895,-0.442463484164950,-77.811529493745269,-1.284079043840410,0.618033988749893,2.520147021340203,480.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-102.532889043741060,2.520147021340204,0.618033988749900,-1.284079043840411,87.532889043741065,-0.442463484164950,-1.618033988749900,-2.793604493334843,87.532889043741065,-2.793604493334843,-1.618033988749900,-0.442463484164950,-102.532889043741060,-1.284079043840411,0.618033988749900,2.520147021340204,800.000000000000000,-8.000000000000000,-8.000000000000000,-8.000000000000000,-127.254248593736860,2.520147021340200,0.618033988749900,-1.284079043840414,152.254248593736860,-0.442463484164946,-1.618033988749914,-2.793604493334840,152.254248593736860,-2.793604493334840,-1.618033988749914,-0.442463484164946,-127.254248593736860,-1.284079043840414,0.618033988749900,2.520147021340200};
ResultI = new double[]{0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-16.775990443005142,1.284079043840414,1.902113032590307,2.520147021340200,-36.654687894677259,2.793604493334840,1.175570504584947,-0.442463484164950,36.654687894677259,0.442463484164950,-1.175570504584947,-2.793604493334840,16.775990443005142,-2.520147021340200,-1.902113032590307,-1.284079043840414,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-92.860511746617419,1.284079043840411,1.902113032590307,2.520147021340204,-83.677508078075107,2.793604493334843,1.175570504584947,-0.442463484164950,83.677508078075107,0.442463484164950,-1.175570504584947,-2.793604493334843,92.860511746617419,-2.520147021340204,-1.902113032590307,-1.284079043840411,0.000000000000000,8.000000000000000,0.000000000000000,-8.000000000000000,-168.945033050229710,1.284079043840414,1.902113032590307,2.520147021340200,-130.700328261472980,2.793604493334836,1.175570504584940,-0.442463484164950,130.700328261472980,0.442463484164950,-1.175570504584940,-2.793604493334836,168.945033050229710,-2.520147021340200,-1.902113032590307,-1.284079043840414};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,3));
ResRA = new double[]{7.999999999999999,-0.400000000000000,-0.399999999999999,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192020,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192020,0.030901699437495,0.126007351067010,24.000000000000000,-0.399999999999999,-0.399999999999999,-0.399999999999999,-5.126644452187053,0.126007351067010,0.030901699437495,-0.064203952192020,4.376644452187053,-0.022123174208247,-0.080901699437495,-0.139680224666742,4.376644452187053,-0.139680224666742,-0.080901699437495,-0.022123174208247,-5.126644452187053,-0.064203952192020,0.030901699437495,0.126007351067010,40.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-6.362712429686843,0.126007351067010,0.030901699437495,-0.064203952192021,7.612712429686843,-0.022123174208247,-0.080901699437495,-0.139680224666742,7.612712429686843,-0.139680224666742,-0.080901699437495,-0.022123174208247,-6.362712429686843,-0.064203952192021,0.030901699437495,0.126007351067010};
ResRA.Reshape(new ILDimension(4,5,3));
ResIAR = new double[]{7.999999999999999,-0.400000000000000,-0.399999999999999,-0.400000000000000,-3.890576474687264,0.126007351067010,0.030901699437495,-0.064203952192020,1.140576474687264,-0.022123174208247,-0.080901699437495,-0.139680224666742,1.140576474687264,-0.139680224666742,-0.080901699437495,-0.022123174208247,-3.890576474687264,-0.064203952192020,0.030901699437495,0.126007351067010,24.000000000000000,-0.399999999999999,-0.399999999999999,-0.399999999999999,-5.126644452187053,0.126007351067010,0.030901699437495,-0.064203952192020,4.376644452187053,-0.022123174208247,-0.080901699437495,-0.139680224666742,4.376644452187053,-0.139680224666742,-0.080901699437495,-0.022123174208247,-5.126644452187053,-0.064203952192020,0.030901699437495,0.126007351067010,40.000000000000000,-0.400000000000000,-0.400000000000006,-0.400000000000000,-6.362712429686843,0.126007351067010,0.030901699437495,-0.064203952192021,7.612712429686843,-0.022123174208247,-0.080901699437495,-0.139680224666742,7.612712429686843,-0.139680224666742,-0.080901699437495,-0.022123174208247,-6.362712429686843,-0.064203952192021,0.030901699437495,0.126007351067010};
ResIAI = new double[]{0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,0.838799522150257,-0.064203952192021,-0.095105651629515,-0.126007351067010,1.832734394733863,-0.139680224666742,-0.058778525229247,0.022123174208248,-1.832734394733863,-0.022123174208248,0.058778525229247,0.139680224666742,-0.838799522150257,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.399999999999999,0.000000000000000,0.399999999999999,4.643025587330872,-0.064203952192021,-0.095105651629515,-0.126007351067010,4.183875403903755,-0.139680224666742,-0.058778525229247,0.022123174208247,-4.183875403903755,-0.022123174208247,0.058778525229247,0.139680224666742,-4.643025587330872,0.126007351067010,0.095105651629515,0.064203952192021,0.000000000000000,-0.400000000000000,0.000000000000000,0.400000000000000,8.447251652511485,-0.064203952192021,-0.095105651629515,-0.126007351067010,6.535016413073648,-0.139680224666742,-0.058778525229248,0.022123174208247,-6.535016413073648,-0.022123174208247,0.058778525229248,0.139680224666742,-8.447251652511485,0.126007351067010,0.095105651629515,0.064203952192021};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,140.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,165.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,190.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,240.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,265.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,290.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,115.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,215.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(5,1,3));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,23.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,43.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{55.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,255.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,455.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-5.000000000000000,-25.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,6.881909602355867,1.624598481164532,-1.624598481164532,-6.881909602355867,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3));
ResRA = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,2,3));
ResIAR = new double[]{5.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,25.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,45.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{120.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,420.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,720.000000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-7.500000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,10.322864403533801,2.436897721746798,-2.436897721746798,-10.322864403533801,21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-21.650635094610962,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3));
ResRA = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,3,3));
ResIAR = new double[]{8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,28.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,48.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1.443375672974064,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,1010.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-50.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResRA.Reshape(new ILDimension(5,4,3));
ResIAR = new double[]{10.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,30.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,50.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,-2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,2.500000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new double[]{210.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-98.036954353118972,4.045084971874739,1.545084971874741,0.000000000000003,-2.499999999999996,30.536954353118958,-0.000000000000002,-1.545084971874738,-2.500000000000001,-4.045084971874740,30.536954353118958,-4.045084971874740,-2.500000000000001,-1.545084971874738,-0.000000000000002,-98.036954353118972,-2.499999999999996,0.000000000000003,1.545084971874741,4.045084971874739,610.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-128.938653790613700,4.045084971874736,1.545084971874737,-0.000000000000000,-2.500000000000000,111.438653790613700,0.000000000000001,-1.545084971874737,-2.500000000000000,-4.045084971874737,111.438653790613700,-4.045084971874737,-2.500000000000000,-1.545084971874737,0.000000000000001,-128.938653790613700,-2.500000000000000,-0.000000000000000,1.545084971874737,4.045084971874736,1010.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-10.000000000000000,-159.840353228108430,4.045084971874726,1.545084971874741,0.000000000000004,-2.500000000000012,192.340353228108430,0.000000000000012,-1.545084971874746,-2.499999999999999,-4.045084971874725,192.340353228108430,-4.045084971874725,-2.499999999999999,-1.545084971874746,0.000000000000012,-159.840353228108430,-2.500000000000012,0.000000000000004,1.545084971874741,4.045084971874726};
ResultI = new double[]{0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-23.347629344494312,1.314327780297837,2.126627020880101,2.628655560595667,3.440954801177931,-47.287822999077761,4.253254041760197,2.126627020880099,0.812299240582264,-1.314327780297834,47.287822999077761,1.314327780297834,-0.812299240582264,-2.126627020880099,-4.253254041760197,23.347629344494312,-3.440954801177931,-2.628655560595667,-2.126627020880101,-1.314327780297837,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-118.453280974009660,1.314327780297834,2.126627020880099,2.628655560595670,3.440954801177934,-106.066348228325080,4.253254041760203,2.126627020880104,0.812299240582267,-1.314327780297832,106.066348228325080,1.314327780297832,-0.812299240582267,-2.126627020880104,-4.253254041760203,118.453280974009660,-3.440954801177934,-2.628655560595670,-2.126627020880099,-1.314327780297834,0.000000000000000,13.763819204711734,3.249196962329064,-3.249196962329064,-13.763819204711734,-213.558932603525020,1.314327780297832,2.126627020880102,2.628655560595666,3.440954801177937,-164.844873457572390,4.253254041760201,2.126627020880097,0.812299240582267,-1.314327780297838,164.844873457572390,1.314327780297838,-0.812299240582267,-2.126627020880097,-4.253254041760201,213.558932603525020,-3.440954801177937,-2.628655560595666,-2.126627020880102,-1.314327780297832};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3));
ResRA = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874990,0.061803398874990,0.000000000000000,-0.100000000000000,1.221478174124758,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,1.221478174124758,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874990,24.399999999999999,-0.399999999999998,-0.400000000000000,-0.400000000000000,-0.399999999999998,-5.157546151624548,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,4.457546151624548,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,4.457546151624548,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-5.157546151624548,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,40.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-6.393614129124338,0.161803398874989,0.061803398874990,0.000000000000000,-0.100000000000000,7.693614129124337,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,7.693614129124337,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-6.393614129124338,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874989};
ResRA.Reshape(new ILDimension(5,5,3));
ResIAR = new double[]{8.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-3.921478174124759,0.161803398874990,0.061803398874990,0.000000000000000,-0.100000000000000,1.221478174124758,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,1.221478174124758,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-3.921478174124759,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874990,24.399999999999999,-0.399999999999998,-0.400000000000000,-0.400000000000000,-0.399999999999998,-5.157546151624548,0.161803398874989,0.061803398874989,-0.000000000000000,-0.100000000000000,4.457546151624548,-0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874990,4.457546151624548,-0.161803398874990,-0.100000000000000,-0.061803398874990,-0.000000000000000,-5.157546151624548,-0.100000000000000,-0.000000000000000,0.061803398874989,0.161803398874989,40.399999999999999,-0.400000000000000,-0.400000000000000,-0.400000000000000,-0.400000000000000,-6.393614129124338,0.161803398874989,0.061803398874990,0.000000000000000,-0.100000000000000,7.693614129124337,0.000000000000000,-0.061803398874990,-0.100000000000000,-0.161803398874989,7.693614129124337,-0.161803398874989,-0.100000000000000,-0.061803398874990,0.000000000000000,-6.393614129124338,-0.100000000000000,0.000000000000000,0.061803398874990,0.161803398874989};
ResIAI = new double[]{0.000000000000000,-0.550552768188469,-0.129967878493163,0.129967878493163,0.550552768188469,0.933905173779772,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,1.891512919963110,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-1.891512919963110,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-0.933905173779772,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188469,-0.129967878493162,0.129967878493162,0.550552768188469,4.738131238960387,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047117,4.242653929133004,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-4.242653929133004,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-4.738131238960387,0.137638192047117,0.105146222423827,0.085065080835204,0.052573111211913,0.000000000000000,-0.550552768188470,-0.129967878493162,0.129967878493162,0.550552768188470,8.542357304141001,-0.052573111211913,-0.085065080835204,-0.105146222423827,-0.137638192047118,6.593794938302895,-0.170130161670408,-0.085065080835204,-0.032491969623291,0.052573111211913,-6.593794938302895,-0.052573111211913,0.032491969623291,0.085065080835204,0.170130161670408,-8.542357304141001,0.137638192047118,0.105146222423827,0.085065080835204,0.052573111211913};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,140.000000000000000,-18.500000000000000,12.500000000000000,28.000000000000000,12.500000000000000,-18.500000000000000,165.000000000000000,-21.000000000000000,15.000000000000000,33.000000000000000,15.000000000000000,-21.000000000000000,190.000000000000000,-23.500000000000000,17.500000000000000,38.000000000000000,17.500000000000000,-23.500000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000,240.000000000000000,-28.500000000000000,22.500000000000000,48.000000000000000,22.500000000000000,-28.500000000000000,265.000000000000000,-31.000000000000000,25.000000000000000,53.000000000000000,25.000000000000000,-31.000000000000000,290.000000000000000,-33.500000000000000,27.500000000000000,58.000000000000000,27.500000000000000,-33.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-21.650635094610966,-25.114736709748719,0.000000000000000,25.114736709748719,21.650635094610966,0.000000000000000,-25.980762113533157,-29.444863728670914,0.000000000000000,29.444863728670914,25.980762113533157,0.000000000000000,-30.310889132455351,-33.774990747593108,0.000000000000000,33.774990747593108,30.310889132455351,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542,0.000000000000000,-38.971143170299740,-42.435244785437490,0.000000000000000,42.435244785437490,38.971143170299740,0.000000000000000,-43.301270189221931,-46.765371804359681,0.000000000000000,46.765371804359681,43.301270189221931,0.000000000000000,-47.631397208144122,-51.095498823281879,0.000000000000000,51.095498823281879,47.631397208144122};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(6,0,3));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,115.000000000000000,-16.000000000000000,10.000000000000000,23.000000000000000,10.000000000000000,-16.000000000000000,215.000000000000000,-26.000000000000000,20.000000000000000,43.000000000000000,20.000000000000000,-26.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-17.320508075688771,-20.784609690826528,0.000000000000000,20.784609690826528,17.320508075688771,0.000000000000000,-34.641016151377542,-38.105117766515299,0.000000000000000,38.105117766515299,34.641016151377542};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,3));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333};
ResRA.Reshape(new ILDimension(6,1,3));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,19.166666666666668,-2.666666666666667,1.666666666666667,3.833333333333334,1.666666666666667,-2.666666666666667,35.833333333333336,-4.333333333333333,3.333333333333334,7.166666666666667,3.333333333333334,-4.333333333333333};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000,0.000000000000000,2.886751345948129,3.464101615137755,0.000000000000000,-3.464101615137755,-2.886751345948129,0.000000000000000,5.773502691896257,6.350852961085884,0.000000000000000,-6.350852961085884,-5.773502691896257};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new double[]{55.000000000000000,-14.500000000000000,2.500000000000000,11.000000000000000,2.500000000000000,-14.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,255.000000000000000,-34.500000000000000,22.500000000000000,51.000000000000000,22.500000000000000,-34.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000,455.000000000000000,-54.500000000000000,42.500000000000000,91.000000000000000,42.500000000000000,-54.500000000000000,-25.000000000000000,2.500000000000000,-2.500000000000000,-5.000000000000000,-2.500000000000000,2.500000000000000};
ResultI = new double[]{0.000000000000000,-4.330127018922193,-11.258330249197702,0.000000000000000,11.258330249197702,4.330127018922193,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-38.971143170299740,-45.899346400575247,0.000000000000000,45.899346400575247,38.971143170299740,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193,0.000000000000000,-73.612159321677282,-80.540362551952796,0.000000000000000,80.540362551952796,73.612159321677282,0.000000000000000,4.330127018922193,4.330127018922193,0.000000000000000,-4.330127018922193,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,3));
ResRA = new double[]{4.583333333333333,-1.208333333333333,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,21.250000000000000,-2.875000000000000,1.875000000000000,4.250000000000000,1.875000000000000,-2.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,37.916666666666664,-4.541666666666667,3.541666666666667,7.583333333333333,3.541666666666667,-4.541666666666667,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResRA.Reshape(new ILDimension(6,2,3));
ResIAR = new double[]{4.583333333333333,-1.208333333333333,0.208333333333333,0.916666666666667,0.208333333333333,-1.208333333333333,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,21.250000000000000,-2.875000000000000,1.875000000000000,4.250000000000000,1.875000000000000,-2.875000000000000,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,37.916666666666664,-4.541666666666667,3.541666666666667,7.583333333333333,3.541666666666667,-4.541666666666667,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333};
ResIAI = new double[]{0.000000000000000,0.360843918243516,0.938194187433142,0.000000000000000,-0.938194187433142,-0.360843918243516,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,3.247595264191645,3.824945533381271,0.000000000000000,-3.824945533381271,-3.247595264191645,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,0.000000000000000,6.134346610139773,6.711696879329399,0.000000000000000,-6.711696879329399,-6.134346610139773,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new double[]{120.000000000000000,-25.500000000000000,7.500000000000000,24.000000000000000,7.500000000000000,-25.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,420.000000000000000,-55.500000000000000,37.500000000000000,84.000000000000000,37.500000000000000,-55.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000,720.000000000000000,-85.500000000000000,67.500000000000000,144.000000000000000,67.500000000000000,-85.500000000000000,-37.500000000000000,7.500000000000000,-0.000000000000000,-7.500000000000000,-7.500000000000000,0.000000000000000,-37.500000000000000,0.000000000000000,-7.500000000000000,-7.500000000000000,-0.000000000000000,7.500000000000000};
ResultI = new double[]{0.000000000000000,-12.990381056766578,-23.382685902179841,0.000000000000000,23.382685902179841,12.990381056766578,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-64.951905283832900,-75.344210129246164,0.000000000000000,75.344210129246164,64.951905283832900,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193,0.000000000000000,-116.913429510899210,-127.305734356312470,0.000000000000000,127.305734356312470,116.913429510899210,21.650635094610962,4.330127018922193,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-21.650635094610962,8.660254037844386,4.330127018922193,-4.330127018922193,-8.660254037844386,-4.330127018922193};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3,3));
ResRA = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667};
ResRA.Reshape(new ILDimension(6,3,3));
ResIAR = new double[]{6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,23.333333333333332,-3.083333333333334,2.083333333333334,4.666666666666667,2.083333333333334,-3.083333333333334,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667,40.000000000000000,-4.750000000000000,3.750000000000000,8.000000000000000,3.750000000000000,-4.750000000000000,-2.083333333333334,0.416666666666667,-0.000000000000000,-0.416666666666667,-0.416666666666667,0.000000000000000,-2.083333333333334,0.000000000000000,-0.416666666666667,-0.416666666666667,-0.000000000000000,0.416666666666667};
ResIAI = new double[]{0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,3.608439182435161,4.185789451624786,0.000000000000000,-4.185789451624786,-3.608439182435161,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344,0.000000000000000,6.495190528383290,7.072540797572915,0.000000000000000,-7.072540797572915,-6.495190528383290,-1.202813060811720,-0.240562612162344,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,1.202813060811720,-0.481125224324688,-0.240562612162344,0.240562612162344,0.481125224324688,0.240562612162344};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,610.000000000000000,-79.000000000000000,55.000000000000000,122.000000000000000,55.000000000000000,-79.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386,1010.000000000000000,-119.000000000000000,95.000000000000000,202.000000000000000,95.000000000000000,-119.000000000000000,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,-50.000000000000000,5.000000000000000,-5.000000000000000,-10.000000000000000,-5.000000000000000,5.000000000000000,-50.000000000000000,-3.660254037844386,-13.660254037844386,-10.000000000000000,3.660254037844386,13.660254037844386};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-95.262794416288244,-109.119200876839260,0.000000000000000,109.119200876839260,95.262794416288244,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386,0.000000000000000,-164.544826719043330,-178.401233179594360,0.000000000000000,178.401233179594360,164.544826719043330,50.000000000000000,3.660254037844386,13.660254037844386,10.000000000000000,-3.660254037844386,-13.660254037844386,0.000000000000000,8.660254037844386,8.660254037844386,0.000000000000000,-8.660254037844386,-8.660254037844386,-50.000000000000000,13.660254037844386,3.660254037844386,-10.000000000000000,-13.660254037844386,-3.660254037844386};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3));
ResRA = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,25.416666666666668,-3.291666666666667,2.291666666666667,5.083333333333333,2.291666666666667,-3.291666666666667,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,42.083333333333336,-4.958333333333333,3.958333333333334,8.416666666666666,3.958333333333334,-4.958333333333333,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResRA.Reshape(new ILDimension(6,4,3));
ResIAR = new double[]{8.750000000000000,-1.625000000000000,0.625000000000000,1.750000000000000,0.625000000000000,-1.625000000000000,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,25.416666666666668,-3.291666666666667,2.291666666666667,5.083333333333333,2.291666666666667,-3.291666666666667,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,42.083333333333336,-4.958333333333333,3.958333333333334,8.416666666666666,3.958333333333334,-4.958333333333333,-2.083333333333334,0.569177251576849,0.152510584910183,-0.416666666666667,-0.569177251576849,-0.152510584910183,-2.083333333333334,0.208333333333333,-0.208333333333333,-0.416666666666667,-0.208333333333333,0.208333333333333,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849};
ResIAI = new double[]{0.000000000000000,1.082531754730548,1.659882023920174,0.000000000000000,-1.659882023920174,-1.082531754730548,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,3.969283100678677,4.546633369868302,0.000000000000000,-4.546633369868302,-3.969283100678677,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183,0.000000000000000,6.856034446626805,7.433384715816431,0.000000000000000,-7.433384715816431,-6.856034446626805,-2.083333333333334,-0.152510584910183,-0.569177251576849,-0.416666666666667,0.152510584910183,0.569177251576849,0.000000000000000,-0.360843918243516,-0.360843918243516,0.000000000000000,0.360843918243516,0.360843918243516,2.083333333333334,-0.569177251576849,-0.152510584910183,0.416666666666667,0.569177251576849,0.152510584910183};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new double[]{210.000000000000000,-39.000000000000000,15.000000000000000,42.000000000000000,15.000000000000000,-39.000000000000000,-98.036954353118958,9.621261194543136,-14.207737073390824,-19.607390870623789,-4.472602814108122,12.767282625455183,30.536954353118958,-13.357652230006455,-6.859358218078331,6.107390870623791,10.539698105577276,-0.030891589991866,30.536954353118958,-0.030891589991866,10.539698105577276,6.107390870623791,-6.859358218078331,-13.357652230006455,-98.036954353118958,12.767282625455183,-4.472602814108122,-19.607390870623789,-14.207737073390824,9.621261194543136,610.000000000000000,-79.000000000000000,55.000000000000000,122.000000000000000,55.000000000000000,-79.000000000000000,-128.938653790613700,-3.761350932634024,-33.770689088066938,-25.787730758122741,8.910009313069033,32.330234640131295,111.438653790613700,-31.628561382858472,-8.949927483431399,22.287730758122741,28.810607258429304,2.059677675361201,111.438653790613700,2.059677675361201,28.810607258429304,22.287730758122741,-8.949927483431399,-31.628561382858472,-128.938653790613700,32.330234640131295,8.910009313069033,-25.787730758122741,-33.770689088066938,-3.761350932634024,1010.000000000000000,-119.000000000000000,95.000000000000000,202.000000000000000,95.000000000000000,-119.000000000000000,-159.840353228108460,-17.143963059811188,-53.333641102743044,-31.968070645621687,22.292621440246208,51.893186654807408,192.340353228108460,-49.899470535710492,-11.040496748784474,38.468070645621687,47.081516411281314,4.150246940714272,192.340353228108460,4.150246940714272,47.081516411281314,38.468070645621687,-11.040496748784474,-49.899470535710492,-159.840353228108460,51.893186654807408,22.292621440246208,-31.968070645621687,-53.333641102743044,-17.143963059811188};
ResultI = new double[]{0.000000000000000,-25.980762113533157,-39.837168574084174,0.000000000000000,39.837168574084174,25.980762113533157,-23.347629344494312,22.792166151679456,16.339937003214402,-4.669525868898862,-18.156293323227807,-9.563131636124215,-47.287822999077761,4.186548098088650,-9.836889335492469,-9.457564599815553,2.142680492554329,10.561083772359158,47.287822999077761,-10.561083772359158,-2.142680492554329,9.457564599815553,9.836889335492469,-4.186548098088650,23.347629344494312,9.563131636124215,18.156293323227807,4.669525868898862,-16.339937003214402,-22.792166151679456,0.000000000000000,-95.262794416288244,-109.119200876839260,0.000000000000000,109.119200876839260,95.262794416288244,-118.453280974009660,37.655062661227333,12.181703186859213,-23.690656194801932,-33.019189832775680,-5.404897819769023,-106.066348228325070,-3.948184763427351,-29.727327242857928,-21.213269645665015,10.277413354070337,30.451521679724628,106.066348228325070,-30.451521679724628,-10.277413354070337,21.213269645665015,29.727327242857928,3.948184763427351,118.453280974009660,5.404897819769023,33.019189832775680,23.690656194801932,-12.181703186859213,-37.655062661227333,0.000000000000000,-164.544826719043330,-178.401233179594360,0.000000000000000,178.401233179594360,164.544826719043330,-213.558932603525020,52.517959170775221,8.023469370504035,-42.711786520705004,-47.882086342323575,-1.246664003413834,-164.844873457572390,-12.082917624943352,-49.617765150223413,-32.968974691514475,18.412146215586340,50.341959587090088,164.844873457572390,-50.341959587090088,-18.412146215586340,32.968974691514475,49.617765150223413,12.082917624943352,213.558932603525020,1.246664003413834,47.882086342323575,42.711786520705004,-8.023469370504035,-52.517959170775221};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5,3));
ResRA = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437299,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666396,1.017898478437299,-0.001029719666396,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437299,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771,20.333333333333332,-2.633333333333333,1.833333333333333,4.066666666666666,1.833333333333333,-2.633333333333333,-4.297955126353790,-0.125378364421134,-1.125689636268898,-0.859591025270758,0.297000310435635,1.077674488004377,3.714621793020457,-1.054285379428616,-0.298330916114380,0.742924358604091,0.960353575280976,0.068655922512040,3.714621793020457,0.068655922512040,0.960353575280976,0.742924358604091,-0.298330916114380,-1.054285379428616,-4.297955126353790,1.077674488004377,0.297000310435635,-0.859591025270758,-1.125689636268898,-0.125378364421134,33.666666666666664,-3.966666666666667,3.166666666666667,6.733333333333332,3.166666666666667,-3.966666666666667,-5.328011774270282,-0.571465435327039,-1.777788036758101,-1.065602354854056,0.743087381341540,1.729772888493580,6.411345107603616,-1.663315684523683,-0.368016558292816,1.282269021520723,1.569383880376044,0.138341564690476,6.411345107603616,0.138341564690476,1.569383880376044,1.282269021520723,-0.368016558292816,-1.663315684523683,-5.328011774270282,1.729772888493580,0.743087381341540,-1.065602354854056,-1.777788036758101,-0.571465435327039};
ResRA.Reshape(new ILDimension(6,5,3));
ResIAR = new double[]{7.000000000000000,-1.300000000000000,0.500000000000000,1.400000000000000,0.500000000000000,-1.300000000000000,-3.267898478437299,0.320708706484771,-0.473591235779694,-0.653579695687460,-0.149086760470271,0.425576087515173,1.017898478437299,-0.445255074333548,-0.228645273935944,0.203579695687460,0.351323270185909,-0.001029719666396,1.017898478437299,-0.001029719666396,0.351323270185909,0.203579695687460,-0.228645273935944,-0.445255074333548,-3.267898478437299,0.425576087515173,-0.149086760470271,-0.653579695687460,-0.473591235779694,0.320708706484771,20.333333333333332,-2.633333333333333,1.833333333333333,4.066666666666666,1.833333333333333,-2.633333333333333,-4.297955126353790,-0.125378364421134,-1.125689636268898,-0.859591025270758,0.297000310435635,1.077674488004377,3.714621793020457,-1.054285379428616,-0.298330916114380,0.742924358604091,0.960353575280976,0.068655922512040,3.714621793020457,0.068655922512040,0.960353575280976,0.742924358604091,-0.298330916114380,-1.054285379428616,-4.297955126353790,1.077674488004377,0.297000310435635,-0.859591025270758,-1.125689636268898,-0.125378364421134,33.666666666666664,-3.966666666666667,3.166666666666667,6.733333333333332,3.166666666666667,-3.966666666666667,-5.328011774270282,-0.571465435327039,-1.777788036758101,-1.065602354854056,0.743087381341540,1.729772888493580,6.411345107603616,-1.663315684523683,-0.368016558292816,1.282269021520723,1.569383880376044,0.138341564690476,6.411345107603616,0.138341564690476,1.569383880376044,1.282269021520723,-0.368016558292816,-1.663315684523683,-5.328011774270282,1.729772888493580,0.743087381341540,-1.065602354854056,-1.777788036758101,-0.571465435327039};
ResIAI = new double[]{0.000000000000000,0.866025403784439,1.327905619136139,0.000000000000000,-1.327905619136139,-0.866025403784439,0.778254311483144,-0.759738871722649,-0.544664566773813,0.155650862296629,0.605209777440927,0.318771054537474,1.576260766635925,-0.139551603269622,0.327896311183082,0.315252153327185,-0.071422683085144,-0.352036125745305,-1.576260766635925,0.352036125745305,0.071422683085144,-0.315252153327185,-0.327896311183082,0.139551603269622,-0.778254311483144,-0.318771054537474,-0.605209777440927,-0.155650862296629,0.544664566773813,0.759738871722649,0.000000000000000,3.175426480542942,3.637306695894643,0.000000000000000,-3.637306695894643,-3.175426480542942,3.948442699133655,-1.255168755374245,-0.406056772895307,0.789688539826731,1.100639661092522,0.180163260658967,3.535544940944169,0.131606158780912,0.990910908095264,0.707108988188834,-0.342580445135678,-1.015050722657487,-3.535544940944169,1.015050722657487,0.342580445135678,-0.707108988188834,-0.990910908095264,-0.131606158780912,-3.948442699133655,-0.180163260658967,-1.100639661092522,-0.789688539826731,0.406056772895307,1.255168755374245,0.000000000000000,5.484827557301444,5.946707772653145,0.000000000000000,-5.946707772653145,-5.484827557301444,7.118631086784167,-1.750598639025841,-0.267448979016801,1.423726217356834,1.596069544744120,0.041555466780461,5.494829115252412,0.402763920831445,1.653925505007447,1.098965823050482,-0.613738207186212,-1.678065319569670,-5.494829115252412,1.678065319569670,0.613738207186212,-1.098965823050482,-1.653925505007447,-0.402763920831445,-7.118631086784167,-0.041555466780461,-1.596069544744120,-1.423726217356834,0.267448979016801,1.750598639025841};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_double_complex_18() { 
ILArray<double> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<complex> Result,ResIA;
A = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000};
A.Reshape(new ILDimension(5,1,4));
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,1,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new double[]{1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,1.000000000000000,2.000000000000000,3.000000000000000,4.000000000000000,5.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,6.000000000000000,7.000000000000000,8.000000000000000,9.000000000000000,10.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,11.000000000000000,12.000000000000000,13.000000000000000,14.000000000000000,15.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000,16.000000000000000,17.000000000000000,18.000000000000000,19.000000000000000,20.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(0,2,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(1,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000};
ResRA.Reshape(new ILDimension(1,1,4));
ResIAR = new double[]{1.000000000000000,6.000000000000000,11.000000000000000,16.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new double[]{1.000000000000000,1.000000000000000,6.000000000000000,6.000000000000000,11.000000000000000,11.000000000000000,16.000000000000000,16.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4));
ResRA = new double[]{0.500000000000000,0.500000000000000,3.000000000000000,3.000000000000000,5.500000000000000,5.500000000000000,8.000000000000000,8.000000000000000};
ResRA.Reshape(new ILDimension(1,2,4));
ResIAR = new double[]{0.500000000000000,0.500000000000000,3.000000000000000,3.000000000000000,5.500000000000000,5.500000000000000,8.000000000000000,8.000000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(2,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new double[]{3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4));
ResRA = new double[]{1.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,11.500000000000000,-0.500000000000000,16.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(2,1,4));
ResIAR = new double[]{1.500000000000000,-0.500000000000000,6.500000000000000,-0.500000000000000,11.500000000000000,-0.500000000000000,16.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new double[]{3.000000000000000,-1.000000000000000,3.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,13.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,23.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000,33.000000000000000,-1.000000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4));
ResRA = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(2,2,4));
ResIAR = new double[]{0.750000000000000,-0.250000000000000,0.750000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,3.250000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,5.750000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000,8.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000,0.000000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(3,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4));
ResRA = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,7.000000000000000,-0.500000000000000,-0.500000000000000,12.000000000000000,-0.500000000000000,-0.500000000000000,17.000000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(3,1,4));
ResIAR = new double[]{2.000000000000000,-0.500000000000000,-0.500000000000000,7.000000000000000,-0.500000000000000,-0.500000000000000,12.000000000000000,-0.500000000000000,-0.500000000000000,17.000000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813,0.000000000000000,-0.288675134594813,0.288675134594813};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new double[]{6.000000000000000,-1.500000000000000,-1.500000000000000,6.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,21.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,36.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000,51.000000000000000,-1.500000000000000,-1.500000000000000};
ResultI = new double[]{0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439,0.000000000000000,0.866025403784439,-0.866025403784439};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,4));
ResRA = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(3,2,4));
ResIAR = new double[]{1.000000000000000,-0.250000000000000,-0.250000000000000,1.000000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,3.500000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,6.000000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000,8.500000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406,0.000000000000000,-0.144337567297406,0.144337567297406};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(4,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000,0.000000000000000,2.000000000000000,0.000000000000000,-2.000000000000000};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4));
ResRA = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,12.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,17.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(4,1,4));
ResIAR = new double[]{2.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,7.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,12.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,17.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000,0.000000000000000,-0.500000000000000,0.000000000000000,0.500000000000000};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new double[]{10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,10.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,30.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,50.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000,70.000000000000000,-2.000000000000000,-2.000000000000000,-2.000000000000000};
ResultI = new double[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,4));
ResRA = new double[]{1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(4,2,4));
ResIAR = new double[]{1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,3.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,8.750000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(5,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,13.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,18.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResRA.Reshape(new ILDimension(5,1,4));
ResIAR = new double[]{3.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,8.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,13.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,18.000000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000,-0.500000000000000};
ResIAI = new double[]{0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587,0.000000000000000,-0.688190960235587,-0.162459848116453,0.162459848116453,0.688190960235587};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new double[]{15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,15.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,40.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,65.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,90.000000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000,-2.500000000000000};
ResultI = new double[]{0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933,0.000000000000000,3.440954801177933,0.812299240582266,-0.812299240582266,-3.440954801177933};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4));
ResRA = new double[]{1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResRA.Reshape(new ILDimension(5,2,4));
ResIAR = new double[]{1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,1.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,4.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,6.500000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,9.000000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000,-0.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793,0.000000000000000,-0.344095480117793,-0.081229924058227,0.081229924058227,0.344095480117793};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4));
ResRA = new double[]{};
ResRA.Reshape(new ILDimension(6,0,4));
ResIAR = new double[]{};
ResIAI = new double[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4));
ResRA = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,10.833333333333334,-1.833333333333333,0.833333333333333,2.166666666666667,0.833333333333333,-1.833333333333333,15.000000000000000,-2.250000000000000,1.250000000000000,3.000000000000000,1.250000000000000,-2.250000000000000};
ResRA.Reshape(new ILDimension(6,1,4));
ResIAR = new double[]{2.500000000000000,-1.000000000000000,-0.000000000000000,0.500000000000000,0.000000000000000,-1.000000000000000,6.666666666666667,-1.416666666666667,0.416666666666667,1.333333333333333,0.416666666666667,-1.416666666666667,10.833333333333334,-1.833333333333333,0.833333333333333,2.166666666666667,0.833333333333333,-1.833333333333333,15.000000000000000,-2.250000000000000,1.250000000000000,3.000000000000000,1.250000000000000,-2.250000000000000};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.577350269189626,0.000000000000000,-0.577350269189626,-0.000000000000000,0.000000000000000,0.721687836487032,1.299038105676658,0.000000000000000,-1.299038105676658,-0.721687836487032,0.000000000000000,1.443375672974064,2.020725942163690,0.000000000000000,-2.020725942163690,-1.443375672974064,0.000000000000000,2.165063509461096,2.742413778650722,0.000000000000000,-2.742413778650722,-2.165063509461096};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new double[]{15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,15.000000000000000,-6.000000000000000,0.000000000000000,3.000000000000000,0.000000000000000,-6.000000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,40.000000000000000,-8.500000000000000,2.500000000000000,8.000000000000000,2.500000000000000,-8.500000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,65.000000000000000,-11.000000000000000,5.000000000000000,13.000000000000000,5.000000000000000,-11.000000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000,90.000000000000000,-13.500000000000000,7.500000000000000,18.000000000000000,7.500000000000000,-13.500000000000000};
ResultI = new double[]{0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,0.000000000000000,-3.464101615137754,0.000000000000000,3.464101615137754,0.000000000000000,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-4.330127018922193,-7.794228634059947,0.000000000000000,7.794228634059947,4.330127018922193,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-8.660254037844386,-12.124355652982141,0.000000000000000,12.124355652982141,8.660254037844386,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578,0.000000000000000,-12.990381056766578,-16.454482671904334,0.000000000000000,16.454482671904334,12.990381056766578};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,4));
ResRA = new double[]{1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000};
ResRA.Reshape(new ILDimension(6,2,4));
ResIAR = new double[]{1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,1.250000000000000,-0.500000000000000,-0.000000000000000,0.250000000000000,0.000000000000000,-0.500000000000000,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,3.333333333333334,-0.708333333333333,0.208333333333333,0.666666666666667,0.208333333333333,-0.708333333333333,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,5.416666666666667,-0.916666666666667,0.416666666666667,1.083333333333333,0.416666666666667,-0.916666666666667,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000,7.500000000000000,-1.125000000000000,0.625000000000000,1.500000000000000,0.625000000000000,-1.125000000000000};
ResIAI = new double[]{0.000000000000000,-0.000000000000000,0.288675134594813,0.000000000000000,-0.288675134594813,-0.000000000000000,0.000000000000000,-0.000000000000000,0.288675134594813,0.000000000000000,-0.288675134594813,-0.000000000000000,0.000000000000000,0.360843918243516,0.649519052838329,0.000000000000000,-0.649519052838329,-0.360843918243516,0.000000000000000,0.360843918243516,0.649519052838329,0.000000000000000,-0.649519052838329,-0.360843918243516,0.000000000000000,0.721687836487032,1.010362971081845,0.000000000000000,-1.010362971081845,-0.721687836487032,0.000000000000000,0.721687836487032,1.010362971081845,0.000000000000000,-1.010362971081845,-0.721687836487032,0.000000000000000,1.082531754730548,1.371206889325361,0.000000000000000,-1.371206889325361,-1.082531754730548,0.000000000000000,1.082531754730548,1.371206889325361,0.000000000000000,-1.371206889325361,-1.082531754730548};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
}
private static void TEST_FFT_float_fcomplex_1() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f};
A.Reshape(new ILDimension(1,1));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{1.000000000000000f,1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{0.500000000000000f,0.500000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{1.000000000000000f,1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{0.500000000000000f,0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,1.000000000000000f,1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{0.250000000000000f,0.250000000000000f,0.250000000000000f,0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{0.250000000000000f,0.250000000000000f,0.250000000000000f,0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
}
private static void TEST_FFT_float_fcomplex_2() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f};
A.Reshape(new ILDimension(3,1));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{1.000000000000000f,1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{0.500000000000000f,0.500000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new float[]{0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new float[]{0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
}
private static void TEST_FFT_float_fcomplex_3() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f};
A.Reshape(new ILDimension(1,3));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{1.000000000000000f,1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{0.500000000000000f,0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,3.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{6.000000000000000f,6.000000000000000f,-2.000000000000000f,-2.000000000000000f,2.000000000000000f,2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,0.250000000000000f,0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,0.250000000000000f,0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
}
private static void TEST_FFT_float_fcomplex_4() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f};
A.Reshape(new ILDimension(2,3));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{4.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{2.000000000000000f,-1.000000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{2.000000000000000f,-1.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{9.000000000000000f,-3.000000000000000f,-3.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new float[]{3.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new float[]{3.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.577350269189626f,0.577350269189626f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{9.000000000000000f,-4.000000000000000f,3.000000000000000f,-4.000000000000000f};
ResultI = new float[]{0.000000000000000f,-3.000000000000000f,0.000000000000000f,3.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new float[]{2.250000000000000f,-1.000000000000000f,0.750000000000000f,-1.000000000000000f};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new float[]{2.250000000000000f,-1.000000000000000f,0.750000000000000f,-1.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.750000000000000f,0.000000000000000f,-0.750000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-4.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-1.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-1.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{21.000000000000000f,-3.000000000000000f,-6.000000000000000f,0.000000000000000f,-6.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,3.464101615137754f,0.000000000000000f,-3.464101615137754f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new float[]{3.500000000000000f,-0.500000000000000f,-1.000000000000000f,0.000000000000000f,-1.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new float[]{3.500000000000000f,-0.500000000000000f,-1.000000000000000f,0.000000000000000f,-1.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.577350269189626f,0.000000000000000f,0.577350269189626f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{21.000000000000000f,-3.000000000000000f,-8.000000000000000f,0.000000000000000f,7.000000000000000f,-1.000000000000000f,-8.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-7.000000000000000f,1.000000000000000f,0.000000000000000f,0.000000000000000f,7.000000000000000f,-1.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new float[]{2.625000000000000f,-0.375000000000000f,-1.000000000000000f,0.000000000000000f,0.875000000000000f,-0.125000000000000f,-1.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new float[]{2.625000000000000f,-0.375000000000000f,-1.000000000000000f,0.000000000000000f,0.875000000000000f,-0.125000000000000f,-1.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.875000000000000f,-0.125000000000000f,0.000000000000000f,0.000000000000000f,-0.875000000000000f,0.125000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{3.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,-1.732050807568877f,1.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new float[]{1.000000000000000f,-0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new float[]{1.000000000000000f,-0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.577350269189626f,-0.577350269189626f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{10.000000000000000f,1.000000000000000f,1.000000000000000f,-4.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,-5.196152422706632f,5.196152422706632f,0.000000000000000f,1.732050807568877f,-1.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new float[]{1.666666666666667f,0.166666666666667f,0.166666666666667f,-0.666666666666667f,-0.166666666666667f,-0.166666666666667f};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new float[]{1.666666666666667f,0.166666666666667f,0.166666666666667f,-0.666666666666667f,-0.166666666666667f,-0.166666666666667f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{21.000000000000000f,3.000000000000000f,3.000000000000000f,-6.000000000000000f,0.000000000000000f,-3.000000000000000f,-6.000000000000000f,-3.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,-10.392304845413262f,10.392304845413262f,3.464101615137754f,3.464101615137754f,-1.732050807568877f,-3.464101615137754f,1.732050807568877f,-3.464101615137754f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new float[]{2.333333333333334f,0.333333333333333f,0.333333333333333f,-0.666666666666667f,0.000000000000000f,-0.333333333333333f,-0.666666666666667f,-0.333333333333333f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new float[]{2.333333333333334f,0.333333333333333f,0.333333333333333f,-0.666666666666667f,0.000000000000000f,-0.333333333333333f,-0.666666666666667f,-0.333333333333333f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,1.154700538379252f,-1.154700538379252f,-0.384900179459750f,-0.384900179459751f,0.192450089729875f,0.384900179459750f,-0.192450089729875f,0.384900179459750f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{21.000000000000000f,3.000000000000000f,3.000000000000000f,-8.000000000000000f,-5.464101615137754f,1.464101615137754f,7.000000000000000f,1.000000000000000f,1.000000000000000f,-8.000000000000000f,1.464101615137754f,-5.464101615137754f};
ResultI = new float[]{0.000000000000000f,-10.392304845413264f,10.392304845413264f,-7.000000000000000f,2.464101615137755f,-4.464101615137755f,0.000000000000000f,-3.464101615137754f,3.464101615137754f,7.000000000000000f,4.464101615137755f,-2.464101615137755f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4));
ResRA = new float[]{1.750000000000000f,0.250000000000000f,0.250000000000000f,-0.666666666666667f,-0.455341801261480f,0.122008467928146f,0.583333333333333f,0.083333333333333f,0.083333333333333f,-0.666666666666667f,0.122008467928146f,-0.455341801261480f};
ResRA.Reshape(new ILDimension(3,4));
ResIAR = new float[]{1.750000000000000f,0.250000000000000f,0.250000000000000f,-0.666666666666667f,-0.455341801261480f,0.122008467928146f,0.583333333333333f,0.083333333333333f,0.083333333333333f,-0.666666666666667f,0.122008467928146f,-0.455341801261480f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.583333333333333f,-0.205341801261480f,0.372008467928146f,0.000000000000000f,0.288675134594813f,-0.288675134594813f,-0.583333333333333f,-0.372008467928146f,0.205341801261480f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
}
private static void TEST_FFT_float_fcomplex_5() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f};
A.Reshape(new ILDimension(3,2));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{5.000000000000000f,-3.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{2.500000000000000f,-1.500000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{2.500000000000000f,-1.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{5.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,-3.464101615137754f,3.464101615137754f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new float[]{1.666666666666667f,-0.333333333333333f,-0.333333333333333f};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new float[]{1.666666666666667f,-0.333333333333333f,-0.333333333333333f};
ResIAI = new float[]{0.000000000000000f,1.154700538379252f,-1.154700538379252f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{12.000000000000000f,-2.000000000000000f,-6.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{12.000000000000000f,-2.000000000000000f,-1.500000000000000f,-0.500000000000000f,-1.500000000000000f,-0.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-7.794228634059947f,0.866025403784439f,7.794228634059947f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new float[]{2.000000000000000f,-0.333333333333333f,-0.250000000000000f,-0.083333333333333f,-0.250000000000000f,-0.083333333333333f};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new float[]{2.000000000000000f,-0.333333333333333f,-0.250000000000000f,-0.083333333333333f,-0.250000000000000f,-0.083333333333333f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,1.299038105676658f,-0.144337567297406f,-1.299038105676658f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{21.000000000000000f,-3.000000000000000f,-3.000000000000000f,-9.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new float[]{3.500000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new float[]{3.500000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{21.000000000000000f,-3.000000000000000f,-3.000000000000000f,-1.500000000000000f,-0.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,-12.990381056766578f,1.732050807568877f,0.866025403784439f,12.990381056766578f,-0.866025403784439f,-1.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new float[]{2.333333333333334f,-0.333333333333333f,-0.333333333333333f,-0.166666666666667f,-0.000000000000000f,-0.166666666666667f,-0.166666666666667f,-0.166666666666667f,-0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new float[]{2.333333333333334f,-0.333333333333333f,-0.333333333333333f,-0.166666666666667f,-0.000000000000000f,-0.166666666666667f,-0.166666666666667f,-0.166666666666667f,-0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.192450089729875f,0.192450089729875f,1.443375672974064f,-0.192450089729875f,-0.096225044864938f,-1.443375672974064f,0.096225044864938f,0.192450089729875f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{21.000000000000000f,-4.000000000000000f,7.000000000000000f,-4.000000000000000f,-9.000000000000000f,0.000000000000000f,-3.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,-7.000000000000000f,0.000000000000000f,7.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-3.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new float[]{2.625000000000000f,-0.500000000000000f,0.875000000000000f,-0.500000000000000f,-1.125000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new float[]{2.625000000000000f,-0.500000000000000f,0.875000000000000f,-0.500000000000000f,-1.125000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.875000000000000f,0.000000000000000f,-0.875000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f,0.375000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{21.000000000000000f,-4.000000000000000f,7.000000000000000f,-4.000000000000000f,-1.500000000000000f,-5.330127018922193f,-0.500000000000000f,3.330127018922193f,-1.500000000000000f,3.330127018922193f,-0.500000000000000f,-5.330127018922193f};
ResultI = new float[]{0.000000000000000f,-7.000000000000000f,0.000000000000000f,7.000000000000000f,-12.990381056766578f,2.232050807568877f,-4.330127018922193f,1.232050807568877f,12.990381056766578f,-1.232050807568877f,4.330127018922193f,-2.232050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3));
ResRA = new float[]{1.750000000000000f,-0.333333333333333f,0.583333333333333f,-0.333333333333333f,-0.125000000000000f,-0.444177251576849f,-0.041666666666667f,0.277510584910183f,-0.125000000000000f,0.277510584910183f,-0.041666666666667f,-0.444177251576849f};
ResRA.Reshape(new ILDimension(4,3));
ResIAR = new float[]{1.750000000000000f,-0.333333333333333f,0.583333333333333f,-0.333333333333333f,-0.125000000000000f,-0.444177251576849f,-0.041666666666667f,0.277510584910183f,-0.125000000000000f,0.277510584910183f,-0.041666666666667f,-0.444177251576849f};
ResIAI = new float[]{0.000000000000000f,0.583333333333333f,0.000000000000000f,-0.583333333333333f,1.082531754730548f,-0.186004233964073f,0.360843918243516f,-0.102670900630740f,-1.082531754730548f,0.102670900630740f,-0.360843918243516f,0.186004233964073f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
}
private static void TEST_FFT_float_fcomplex_6() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f};
A.Reshape(new ILDimension(2,2));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{4.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{2.000000000000000f,-1.000000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{2.000000000000000f,-1.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{4.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResultI = new float[]{0.000000000000000f,-2.598076211353316f,2.598076211353316f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new float[]{1.333333333333333f,-0.166666666666667f,-0.166666666666667f};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new float[]{1.333333333333333f,-0.166666666666667f,-0.166666666666667f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-4.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-1.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-1.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-6.062177826491070f,0.866025403784439f,6.062177826491070f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new float[]{1.666666666666667f,-0.333333333333333f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new float[]{1.666666666666667f,-0.333333333333333f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,1.010362971081845f,-0.144337567297406f,-1.010362971081845f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{3.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,-1.732050807568877f,1.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new float[]{1.000000000000000f,-0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new float[]{1.000000000000000f,-0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.577350269189626f,-0.577350269189626f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{10.000000000000000f,1.000000000000000f,1.000000000000000f,-4.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,-5.196152422706632f,5.196152422706632f,0.000000000000000f,1.732050807568877f,-1.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new float[]{1.666666666666667f,0.166666666666667f,0.166666666666667f,-0.666666666666667f,-0.166666666666667f,-0.166666666666667f};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new float[]{1.666666666666667f,0.166666666666667f,0.166666666666667f,-0.666666666666667f,-0.166666666666667f,-0.166666666666667f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{10.000000000000000f,1.000000000000000f,1.000000000000000f,-0.500000000000000f,-3.500000000000000f,2.500000000000000f,-0.500000000000000f,2.500000000000000f,-3.500000000000000f};
ResultI = new float[]{0.000000000000000f,-5.196152422706632f,5.196152422706632f,-6.062177826491070f,-0.866025403784439f,-0.866025403784439f,6.062177826491070f,0.866025403784439f,0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new float[]{1.111111111111111f,0.111111111111111f,0.111111111111111f,-0.055555555555556f,-0.388888888888889f,0.277777777777778f,-0.055555555555556f,0.277777777777778f,-0.388888888888889f};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new float[]{1.111111111111111f,0.111111111111111f,0.111111111111111f,-0.055555555555556f,-0.388888888888889f,0.277777777777778f,-0.055555555555556f,0.277777777777778f,-0.388888888888889f};
ResIAI = new float[]{0.000000000000000f,0.577350269189626f,-0.577350269189626f,0.673575314054563f,0.096225044864938f,0.096225044864938f,-0.673575314054563f,-0.096225044864938f,-0.096225044864938f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
}
private static void TEST_FFT_float_fcomplex_7() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f};
A.Reshape(new ILDimension(4,5,2));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{6.000000000000000f,8.000000000000000f,10.000000000000000f,12.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,46.000000000000000f,48.000000000000000f,50.000000000000000f,52.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{15.000000000000000f,18.000000000000000f,21.000000000000000f,24.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,75.000000000000000f,78.000000000000000f,81.000000000000000f,84.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,3.464101615137754f,3.464101615137754f,3.464101615137754f,-3.464101615137754f,-3.464101615137754f,-3.464101615137754f,-3.464101615137754f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,3.464101615137754f,3.464101615137754f,3.464101615137754f,-3.464101615137754f,-3.464101615137754f,-3.464101615137754f,-3.464101615137754f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{28.000000000000000f,32.000000000000000f,36.000000000000000f,40.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,108.000000000000000f,112.000000000000000f,116.000000000000000f,120.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,8.000000000000000f,8.000000000000000f,8.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,8.000000000000000f,8.000000000000000f,8.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{45.000000000000000f,50.000000000000000f,55.000000000000000f,60.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,145.000000000000000f,150.000000000000000f,155.000000000000000f,160.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,13.763819204711734f,13.763819204711734f,13.763819204711734f,3.249196962329064f,3.249196962329064f,3.249196962329064f,3.249196962329064f,-3.249196962329064f,-3.249196962329064f,-3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-13.763819204711734f,-13.763819204711734f,-13.763819204711734f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,13.763819204711734f,13.763819204711734f,13.763819204711734f,3.249196962329064f,3.249196962329064f,3.249196962329064f,3.249196962329064f,-3.249196962329064f,-3.249196962329064f,-3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-13.763819204711734f,-13.763819204711734f,-13.763819204711734f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{45.000000000000000f,50.000000000000000f,55.000000000000000f,60.000000000000000f,-22.500000000000000f,-23.000000000000000f,-23.500000000000000f,-24.000000000000000f,-1.500000000000000f,-1.000000000000000f,-0.500000000000000f,0.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,-1.500000000000000f,-1.000000000000000f,-0.500000000000000f,0.000000000000000f,-22.500000000000000f,-23.000000000000000f,-23.500000000000000f,-24.000000000000000f,145.000000000000000f,150.000000000000000f,155.000000000000000f,160.000000000000000f,-32.500000000000000f,-33.000000000000000f,-33.500000000000000f,-34.000000000000000f,8.500000000000000f,9.000000000000000f,9.500000000000000f,10.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,8.500000000000000f,9.000000000000000f,9.500000000000000f,10.000000000000000f,-32.500000000000000f,-33.000000000000000f,-33.500000000000000f,-34.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,1.732050807568877f,0.866025403784439f,0.000000000000000f,-11.258330249197702f,-12.124355652982141f,-12.990381056766578f,-13.856406460551018f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,11.258330249197702f,12.124355652982141f,12.990381056766578f,13.856406460551018f,-2.598076211353316f,-1.732050807568877f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-14.722431864335457f,-15.588457268119894f,-16.454482671904334f,-17.320508075688771f,-28.578838324886473f,-29.444863728670914f,-30.310889132455351f,-31.176914536239789f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.578838324886473f,29.444863728670914f,30.310889132455351f,31.176914536239789f,14.722431864335457f,15.588457268119894f,16.454482671904334f,17.320508075688771f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,6,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,6,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,6);
ResultR = new float[]{1.000000000000000f,5.000000000000000f,9.000000000000000f,13.000000000000000f,17.000000000000000f,21.000000000000000f,25.000000000000000f,29.000000000000000f,33.000000000000000f,37.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,21.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,2));
ResRA = new float[]{1.000000000000000f,21.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,2));
ResIAR = new float[]{1.000000000000000f,21.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{6.000000000000000f,-4.000000000000000f,46.000000000000000f,-4.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,2));
ResRA = new float[]{3.000000000000000f,-2.000000000000000f,23.000000000000000f,-2.000000000000000f};
ResRA.Reshape(new ILDimension(1,2,2));
ResIAR = new float[]{3.000000000000000f,-2.000000000000000f,23.000000000000000f,-2.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,-6.000000000000000f,75.000000000000000f,-6.000000000000000f,-6.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,-3.464101615137754f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,2));
ResRA = new float[]{5.000000000000000f,-2.000000000000000f,-2.000000000000000f,25.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResRA.Reshape(new ILDimension(1,3,2));
ResIAR = new float[]{5.000000000000000f,-2.000000000000000f,-2.000000000000000f,25.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-1.154700538379252f,1.154700538379252f,0.000000000000000f,-1.154700538379252f,1.154700538379252f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{28.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,108.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,2));
ResRA = new float[]{7.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,27.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResRA.Reshape(new ILDimension(1,4,2));
ResIAR = new float[]{7.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,27.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{45.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,145.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,2));
ResRA = new float[]{9.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,29.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResRA.Reshape(new ILDimension(1,5,2));
ResIAR = new float[]{9.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,29.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-2.752763840942347f,-0.649839392465813f,0.649839392465813f,2.752763840942347f,0.000000000000000f,-2.752763840942347f,-0.649839392465813f,0.649839392465813f,2.752763840942347f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{45.000000000000000f,-22.500000000000000f,-1.500000000000000f,9.000000000000000f,-1.500000000000000f,-22.500000000000000f,145.000000000000000f,-32.500000000000000f,8.500000000000000f,29.000000000000000f,8.500000000000000f,-32.500000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-11.258330249197702f,0.000000000000000f,11.258330249197702f,-2.598076211353316f,0.000000000000000f,-14.722431864335457f,-28.578838324886473f,0.000000000000000f,28.578838324886473f,14.722431864335457f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,6,2));
ResRA = new float[]{7.500000000000000f,-3.750000000000000f,-0.250000000000000f,1.500000000000000f,-0.250000000000000f,-3.750000000000000f,24.166666666666668f,-5.416666666666667f,1.416666666666667f,4.833333333333333f,1.416666666666667f,-5.416666666666667f};
ResRA.Reshape(new ILDimension(1,6,2));
ResIAR = new float[]{7.500000000000000f,-3.750000000000000f,-0.250000000000000f,1.500000000000000f,-0.250000000000000f,-3.750000000000000f,24.166666666666668f,-5.416666666666667f,1.416666666666667f,4.833333333333333f,1.416666666666667f,-5.416666666666667f};
ResIAI = new float[]{0.000000000000000f,-0.433012701892219f,1.876388374866284f,0.000000000000000f,-1.876388374866284f,0.433012701892219f,0.000000000000000f,2.453738644055910f,4.763139720814412f,0.000000000000000f,-4.763139720814412f,-2.453738644055910f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,6);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,11.000000000000000f,-1.000000000000000f,19.000000000000000f,-1.000000000000000f,27.000000000000000f,-1.000000000000000f,35.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,51.000000000000000f,-1.000000000000000f,59.000000000000000f,-1.000000000000000f,67.000000000000000f,-1.000000000000000f,75.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,2));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,2));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{14.000000000000000f,-2.000000000000000f,-8.000000000000000f,0.000000000000000f,94.000000000000000f,-2.000000000000000f,-8.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,2));
ResRA = new float[]{3.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,23.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2,2));
ResIAR = new float[]{3.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,23.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{33.000000000000000f,-3.000000000000000f,-12.000000000000000f,0.000000000000000f,-12.000000000000000f,0.000000000000000f,153.000000000000000f,-3.000000000000000f,-12.000000000000000f,0.000000000000000f,-12.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,6.928203230275509f,0.000000000000000f,-6.928203230275509f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.928203230275509f,0.000000000000000f,-6.928203230275509f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,2));
ResRA = new float[]{5.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3,2));
ResIAR = new float[]{5.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-1.154700538379252f,0.000000000000000f,1.154700538379252f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.154700538379252f,0.000000000000000f,1.154700538379252f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{60.000000000000000f,-4.000000000000000f,-16.000000000000000f,0.000000000000000f,-16.000000000000000f,0.000000000000000f,-16.000000000000000f,0.000000000000000f,220.000000000000000f,-4.000000000000000f,-16.000000000000000f,0.000000000000000f,-16.000000000000000f,0.000000000000000f,-16.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,16.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-16.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,16.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-16.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,2));
ResRA = new float[]{7.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4,2));
ResIAR = new float[]{7.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{95.000000000000000f,-5.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,295.000000000000000f,-5.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,27.527638409423467f,0.000000000000000f,6.498393924658127f,0.000000000000000f,-6.498393924658127f,0.000000000000000f,-27.527638409423467f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.527638409423467f,0.000000000000000f,6.498393924658127f,0.000000000000000f,-6.498393924658127f,0.000000000000000f,-27.527638409423467f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,2));
ResRA = new float[]{9.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,5,2));
ResIAR = new float[]{9.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-2.752763840942347f,0.000000000000000f,-0.649839392465813f,0.000000000000000f,0.649839392465813f,0.000000000000000f,2.752763840942347f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.752763840942347f,0.000000000000000f,-0.649839392465813f,0.000000000000000f,0.649839392465813f,0.000000000000000f,2.752763840942347f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{95.000000000000000f,-5.000000000000000f,-45.500000000000000f,0.500000000000000f,-2.500000000000000f,-0.500000000000000f,19.000000000000000f,-1.000000000000000f,-2.500000000000000f,-0.500000000000000f,-45.500000000000000f,0.500000000000000f,295.000000000000000f,-5.000000000000000f,-65.500000000000000f,0.500000000000000f,17.500000000000000f,-0.500000000000000f,59.000000000000000f,-1.000000000000000f,17.500000000000000f,-0.500000000000000f,-65.500000000000000f,0.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,4.330127018922193f,0.866025403784439f,-23.382685902179844f,0.866025403784439f,0.000000000000000f,0.000000000000000f,23.382685902179844f,-0.866025403784439f,-4.330127018922193f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,-30.310889132455351f,0.866025403784437f,-58.023702053557386f,0.866025403784441f,0.000000000000000f,0.000000000000000f,58.023702053557386f,-0.866025403784441f,30.310889132455351f,-0.866025403784437f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,6,2));
ResRA = new float[]{7.916666666666667f,-0.416666666666667f,-3.791666666666667f,0.041666666666667f,-0.208333333333333f,-0.041666666666667f,1.583333333333334f,-0.083333333333333f,-0.208333333333333f,-0.041666666666667f,-3.791666666666667f,0.041666666666667f,24.583333333333336f,-0.416666666666666f,-5.458333333333334f,0.041666666666667f,1.458333333333334f,-0.041666666666667f,4.916666666666666f,-0.083333333333333f,1.458333333333334f,-0.041666666666667f,-5.458333333333334f,0.041666666666667f};
ResRA.Reshape(new ILDimension(2,6,2));
ResIAR = new float[]{7.916666666666667f,-0.416666666666667f,-3.791666666666667f,0.041666666666667f,-0.208333333333333f,-0.041666666666667f,1.583333333333334f,-0.083333333333333f,-0.208333333333333f,-0.041666666666667f,-3.791666666666667f,0.041666666666667f,24.583333333333336f,-0.416666666666666f,-5.458333333333334f,0.041666666666667f,1.458333333333334f,-0.041666666666667f,4.916666666666666f,-0.083333333333333f,1.458333333333334f,-0.041666666666667f,-5.458333333333334f,0.041666666666667f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.360843918243516f,-0.072168783648703f,1.948557158514987f,-0.072168783648703f,0.000000000000000f,0.000000000000000f,-1.948557158514987f,0.072168783648703f,0.360843918243516f,0.072168783648703f,0.000000000000000f,0.000000000000000f,2.525907427704612f,-0.072168783648703f,4.835308504463116f,-0.072168783648703f,0.000000000000000f,0.000000000000000f,-4.835308504463116f,0.072168783648703f,-2.525907427704612f,0.072168783648703f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,6);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,18.000000000000000f,-1.500000000000000f,-1.500000000000000f,30.000000000000000f,-1.500000000000000f,-1.500000000000000f,42.000000000000000f,-1.500000000000000f,-1.500000000000000f,54.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,78.000000000000000f,-1.500000000000000f,-1.500000000000000f,90.000000000000000f,-1.500000000000000f,-1.500000000000000f,102.000000000000000f,-1.500000000000000f,-1.500000000000000f,114.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,2));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,2));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{24.000000000000000f,-3.000000000000000f,-3.000000000000000f,-12.000000000000000f,0.000000000000000f,0.000000000000000f,144.000000000000000f,-3.000000000000000f,-3.000000000000000f,-12.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,2));
ResRA = new float[]{4.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2,2));
ResIAR = new float[]{4.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{54.000000000000000f,-4.500000000000000f,-4.500000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f,234.000000000000000f,-4.500000000000000f,-4.500000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f,10.392304845413264f,0.000000000000000f,0.000000000000000f,-10.392304845413264f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,10.392304845413264f,0.000000000000000f,0.000000000000000f,-10.392304845413264f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,2));
ResRA = new float[]{6.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,26.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3,2));
ResIAR = new float[]{6.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,26.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.154700538379252f,0.000000000000000f,0.000000000000000f,1.154700538379252f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.154700538379252f,0.000000000000000f,0.000000000000000f,1.154700538379252f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{96.000000000000000f,-6.000000000000000f,-6.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,336.000000000000000f,-6.000000000000000f,-6.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,2));
ResRA = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,4,2));
ResIAR = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new float[]{150.000000000000000f,-7.500000000000000f,-7.500000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,450.000000000000000f,-7.500000000000000f,-7.500000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,4.330127018922193f,-4.330127018922193f,41.291457614135197f,0.000000000000000f,0.000000000000000f,9.747590886987190f,0.000000000000000f,0.000000000000000f,-9.747590886987190f,0.000000000000000f,0.000000000000000f,-41.291457614135197f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,41.291457614135197f,0.000000000000000f,0.000000000000000f,9.747590886987190f,0.000000000000000f,0.000000000000000f,-9.747590886987190f,0.000000000000000f,0.000000000000000f,-41.291457614135197f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,2));
ResRA = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,5,2));
ResIAR = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.752763840942347f,0.000000000000000f,0.000000000000000f,-0.649839392465813f,0.000000000000000f,0.000000000000000f,0.649839392465813f,0.000000000000000f,0.000000000000000f,2.752763840942347f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.752763840942347f,0.000000000000000f,0.000000000000000f,-0.649839392465813f,0.000000000000000f,0.000000000000000f,0.649839392465813f,0.000000000000000f,0.000000000000000f,2.752763840942347f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new float[]{150.000000000000000f,-7.500000000000000f,-7.500000000000000f,-69.000000000000000f,1.500000000000000f,0.000000000000000f,-3.000000000000000f,-0.000000000000001f,-1.499999999999999f,30.000000000000000f,-1.500000000000000f,-1.500000000000000f,-3.000000000000000f,-1.499999999999999f,-0.000000000000001f,-69.000000000000000f,0.000000000000000f,1.500000000000000f,450.000000000000000f,-7.500000000000000f,-7.500000000000000f,-99.000000000000000f,1.500000000000000f,-0.000000000000000f,27.000000000000000f,-0.000000000000001f,-1.499999999999999f,90.000000000000000f,-1.500000000000000f,-1.500000000000000f,27.000000000000000f,-1.499999999999999f,-0.000000000000001f,-99.000000000000000f,-0.000000000000000f,1.500000000000000f};
ResultI = new float[]{0.000000000000000f,4.330127018922193f,-4.330127018922193f,5.196152422706632f,0.866025403784439f,1.732050807568877f,-36.373066958946424f,1.732050807568877f,0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,36.373066958946424f,-0.866025403784439f,-1.732050807568877f,-5.196152422706632f,-1.732050807568877f,-0.866025403784439f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,-46.765371804359681f,0.866025403784437f,1.732050807568875f,-88.334591186012744f,1.732050807568881f,0.866025403784442f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,88.334591186012744f,-0.866025403784442f,-1.732050807568881f,46.765371804359681f,-1.732050807568875f,-0.866025403784437f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,6,2));
ResRA = new float[]{8.333333333333334f,-0.416666666666667f,-0.416666666666667f,-3.833333333333334f,0.083333333333333f,0.000000000000000f,-0.166666666666667f,-0.000000000000000f,-0.083333333333333f,1.666666666666667f,-0.083333333333333f,-0.083333333333333f,-0.166666666666667f,-0.083333333333333f,-0.000000000000000f,-3.833333333333334f,0.000000000000000f,0.083333333333333f,25.000000000000000f,-0.416666666666665f,-0.416666666666665f,-5.500000000000000f,0.083333333333333f,-0.000000000000000f,1.500000000000000f,0.000000000000000f,-0.083333333333333f,5.000000000000000f,-0.083333333333334f,-0.083333333333334f,1.500000000000000f,-0.083333333333333f,0.000000000000000f,-5.500000000000000f,-0.000000000000000f,0.083333333333333f};
ResRA.Reshape(new ILDimension(3,6,2));
ResIAR = new float[]{8.333333333333334f,-0.416666666666667f,-0.416666666666667f,-3.833333333333334f,0.083333333333333f,0.000000000000000f,-0.166666666666667f,-0.000000000000000f,-0.083333333333333f,1.666666666666667f,-0.083333333333333f,-0.083333333333333f,-0.166666666666667f,-0.083333333333333f,-0.000000000000000f,-3.833333333333334f,0.000000000000000f,0.083333333333333f,25.000000000000000f,-0.416666666666665f,-0.416666666666665f,-5.500000000000000f,0.083333333333333f,-0.000000000000000f,1.500000000000000f,0.000000000000000f,-0.083333333333333f,5.000000000000000f,-0.083333333333334f,-0.083333333333334f,1.500000000000000f,-0.083333333333333f,0.000000000000000f,-5.500000000000000f,-0.000000000000000f,0.083333333333333f};
ResIAI = new float[]{0.000000000000000f,-0.240562612162344f,0.240562612162344f,-0.288675134594813f,-0.048112522432469f,-0.096225044864938f,2.020725942163690f,-0.096225044864938f,-0.048112522432469f,0.000000000000000f,-0.048112522432469f,0.048112522432469f,-2.020725942163690f,0.048112522432469f,0.096225044864938f,0.288675134594813f,0.096225044864938f,0.048112522432469f,0.000000000000000f,-0.240562612162344f,0.240562612162344f,2.598076211353316f,-0.048112522432469f,-0.096225044864937f,4.907477288111818f,-0.096225044864938f,-0.048112522432469f,0.000000000000000f,-0.048112522432469f,0.048112522432469f,-4.907477288111818f,0.048112522432469f,0.096225044864938f,-2.598076211353316f,0.096225044864937f,0.048112522432469f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,6);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,26.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,42.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,58.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,74.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,106.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,122.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,138.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,154.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,2));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,2));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{36.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-16.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,196.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-16.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,2));
ResRA = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2,2));
ResIAR = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{78.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,318.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-24.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,13.856406460551018f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-13.856406460551018f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,13.856406460551018f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-13.856406460551018f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,2));
ResRA = new float[]{6.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,3,2));
ResIAR = new float[]{6.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.154700538379252f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.154700538379252f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.154700538379252f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.154700538379252f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new float[]{136.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,456.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-32.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,2));
ResRA = new float[]{8.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,4,2));
ResIAR = new float[]{8.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,55.055276818846934f,0.000000000000000f,0.000000000000000f,0.000000000000000f,12.996787849316254f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-12.996787849316254f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-55.055276818846934f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,55.055276818846934f,0.000000000000000f,0.000000000000000f,0.000000000000000f,12.996787849316254f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-12.996787849316254f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-55.055276818846934f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,2));
ResRA = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,5,2));
ResIAR = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.752763840942347f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.649839392465813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.649839392465813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.752763840942347f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.752763840942347f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.649839392465813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.649839392465813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.752763840942347f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-93.000000000000000f,2.732050807568877f,1.000000000000000f,-0.732050807568877f,-3.000000000000000f,0.732050807568877f,-1.000000000000000f,-2.732050807568877f,42.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-3.000000000000000f,-2.732050807568877f,-1.000000000000000f,0.732050807568877f,-93.000000000000000f,-0.732050807568877f,1.000000000000000f,2.732050807568877f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-133.000000000000000f,2.732050807568877f,1.000000000000000f,-0.732050807568877f,37.000000000000000f,0.732050807568875f,-1.000000000000000f,-2.732050807568875f,122.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,37.000000000000000f,-2.732050807568875f,-1.000000000000000f,0.732050807568875f,-133.000000000000000f,-0.732050807568877f,1.000000000000000f,2.732050807568877f};
ResultI = new float[]{0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,5.196152422706632f,0.732050807568877f,1.732050807568877f,2.732050807568878f,-50.229473419497438f,2.732050807568877f,1.732050807568882f,0.732050807568877f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,50.229473419497438f,-0.732050807568877f,-1.732050807568882f,-2.732050807568877f,-5.196152422706632f,-2.732050807568878f,-1.732050807568877f,-0.732050807568877f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,-64.085879880048452f,0.732050807568877f,1.732050807568875f,2.732050807568877f,-119.511505722252520f,2.732050807568879f,1.732050807568882f,0.732050807568879f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,119.511505722252520f,-0.732050807568879f,-1.732050807568882f,-2.732050807568879f,64.085879880048452f,-2.732050807568877f,-1.732050807568875f,-0.732050807568877f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,6,2));
ResRA = new float[]{8.750000000000000f,-0.416666666666667f,-0.416666666666668f,-0.416666666666667f,-3.875000000000000f,0.113835450315370f,0.041666666666667f,-0.030502116982037f,-0.125000000000000f,0.030502116982036f,-0.041666666666667f,-0.113835450315370f,1.750000000000000f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f,-0.125000000000000f,-0.113835450315370f,-0.041666666666667f,0.030502116982036f,-3.875000000000000f,-0.030502116982037f,0.041666666666667f,0.113835450315370f,25.416666666666668f,-0.416666666666666f,-0.416666666666668f,-0.416666666666666f,-5.541666666666667f,0.113835450315370f,0.041666666666667f,-0.030502116982037f,1.541666666666667f,0.030502116982036f,-0.041666666666667f,-0.113835450315370f,5.083333333333333f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f,1.541666666666667f,-0.113835450315370f,-0.041666666666667f,0.030502116982036f,-5.541666666666667f,-0.030502116982037f,0.041666666666667f,0.113835450315370f};
ResRA.Reshape(new ILDimension(4,6,2));
ResIAR = new float[]{8.750000000000000f,-0.416666666666667f,-0.416666666666668f,-0.416666666666667f,-3.875000000000000f,0.113835450315370f,0.041666666666667f,-0.030502116982037f,-0.125000000000000f,0.030502116982036f,-0.041666666666667f,-0.113835450315370f,1.750000000000000f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f,-0.125000000000000f,-0.113835450315370f,-0.041666666666667f,0.030502116982036f,-3.875000000000000f,-0.030502116982037f,0.041666666666667f,0.113835450315370f,25.416666666666668f,-0.416666666666666f,-0.416666666666668f,-0.416666666666666f,-5.541666666666667f,0.113835450315370f,0.041666666666667f,-0.030502116982037f,1.541666666666667f,0.030502116982036f,-0.041666666666667f,-0.113835450315370f,5.083333333333333f,-0.083333333333333f,-0.083333333333333f,-0.083333333333333f,1.541666666666667f,-0.113835450315370f,-0.041666666666667f,0.030502116982036f,-5.541666666666667f,-0.030502116982037f,0.041666666666667f,0.113835450315370f};
ResIAI = new float[]{0.000000000000000f,-0.416666666666667f,0.000000000000000f,0.416666666666667f,-0.216506350946110f,-0.030502116982037f,-0.072168783648703f,-0.113835450315370f,2.092894725812393f,-0.113835450315370f,-0.072168783648703f,-0.030502116982037f,0.000000000000000f,-0.083333333333333f,0.000000000000000f,0.083333333333333f,-2.092894725812393f,0.030502116982037f,0.072168783648703f,0.113835450315370f,0.216506350946110f,0.113835450315370f,0.072168783648703f,0.030502116982037f,0.000000000000000f,-0.416666666666667f,0.000000000000000f,0.416666666666667f,2.670244995002019f,-0.030502116982036f,-0.072168783648703f,-0.113835450315370f,4.979646071760522f,-0.113835450315370f,-0.072168783648703f,-0.030502116982037f,0.000000000000000f,-0.083333333333333f,0.000000000000000f,0.083333333333333f,-4.979646071760522f,0.030502116982037f,0.072168783648703f,0.113835450315370f,-2.670244995002019f,0.113835450315370f,0.072168783648703f,0.030502116982036f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,6);
ResultR = new float[]{10.000000000000000f,-4.045084971874737f,1.545084971874737f,1.545084971874737f,-4.045084971874737f,26.000000000000000f,-5.281152949374527f,4.781152949374527f,4.781152949374527f,-5.281152949374527f,42.000000000000000f,-6.517220926874317f,8.017220926874316f,8.017220926874316f,-6.517220926874317f,58.000000000000000f,-7.753288904374106f,11.253288904374106f,11.253288904374106f,-7.753288904374106f,74.000000000000000f,-8.989356881873896f,14.489356881873896f,14.489356881873896f,-8.989356881873896f,90.000000000000000f,-10.225424859373685f,17.725424859373685f,17.725424859373685f,-10.225424859373685f,106.000000000000000f,-11.461492836873475f,20.961492836873475f,20.961492836873475f,-11.461492836873475f,122.000000000000000f,-12.697560814373265f,24.197560814373265f,24.197560814373265f,-12.697560814373265f,138.000000000000000f,-13.933628791873055f,27.433628791873055f,27.433628791873055f,-13.933628791873055f,154.000000000000000f,-15.169696769372845f,30.669696769372845f,30.669696769372845f,-15.169696769372845f};
ResultI = new float[]{0.000000000000000f,-1.314327780297834f,-2.126627020880100f,2.126627020880100f,1.314327780297834f,0.000000000000000f,-5.118553845478448f,-4.477768030049992f,4.477768030049992f,5.118553845478448f,0.000000000000000f,-8.922779910659061f,-6.828909039219886f,6.828909039219886f,8.922779910659061f,0.000000000000000f,-12.727005975839676f,-9.180050048389777f,9.180050048389777f,12.727005975839676f,0.000000000000000f,-16.531232041020289f,-11.531191057559671f,11.531191057559671f,16.531232041020289f,0.000000000000000f,-20.335458106200903f,-13.882332066729562f,13.882332066729562f,20.335458106200903f,0.000000000000000f,-24.139684171381518f,-16.233473075899454f,16.233473075899454f,24.139684171381518f,0.000000000000000f,-27.943910236562132f,-18.584614085069347f,18.584614085069347f,27.943910236562132f,0.000000000000000f,-31.748136301742743f,-20.935755094239241f,20.935755094239241f,31.748136301742743f,0.000000000000000f,-35.552362366923361f,-23.286896103409134f,23.286896103409134f,35.552362366923361f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{10.000000000000000f,-4.045084971874737f,1.545084971874737f,1.545084971874737f,-4.045084971874737f,90.000000000000000f,-10.225424859373685f,17.725424859373685f,17.725424859373685f,-10.225424859373685f};
ResultI = new float[]{0.000000000000000f,-1.314327780297834f,-2.126627020880100f,2.126627020880100f,1.314327780297834f,0.000000000000000f,-20.335458106200903f,-13.882332066729562f,13.882332066729562f,20.335458106200903f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,2));
ResRA = new float[]{2.000000000000000f,-0.809016994374947f,0.309016994374947f,0.309016994374948f,-0.809016994374947f,18.000000000000000f,-2.045084971874737f,3.545084971874737f,3.545084971874737f,-2.045084971874737f};
ResRA.Reshape(new ILDimension(5,1,2));
ResIAR = new float[]{2.000000000000000f,-0.809016994374947f,0.309016994374947f,0.309016994374948f,-0.809016994374947f,18.000000000000000f,-2.045084971874737f,3.545084971874737f,3.545084971874737f,-2.045084971874737f};
ResIAI = new float[]{0.000000000000000f,0.262865556059567f,0.425325404176020f,-0.425325404176020f,-0.262865556059567f,0.000000000000000f,4.067091621240181f,2.776466413345912f,-2.776466413345912f,-4.067091621240181f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{36.000000000000000f,-9.326237921249264f,6.326237921249264f,6.326237921249264f,-9.326237921249264f,-16.000000000000000f,1.236067977499790f,-3.236067977499790f,-3.236067977499790f,1.236067977499790f,196.000000000000000f,-21.686917696247164f,38.686917696247164f,38.686917696247164f,-21.686917696247164f,-16.000000000000000f,1.236067977499790f,-3.236067977499790f,-3.236067977499790f,1.236067977499790f};
ResultI = new float[]{0.000000000000000f,-6.432881625776282f,-6.604395050930092f,6.604395050930092f,6.432881625776282f,0.000000000000000f,3.804226065180614f,2.351141009169893f,-2.351141009169893f,-3.804226065180614f,0.000000000000000f,-44.475142277582421f,-30.115805142629018f,30.115805142629018f,44.475142277582421f,0.000000000000000f,3.804226065180614f,2.351141009169893f,-2.351141009169893f,-3.804226065180614f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,2));
ResRA = new float[]{3.600000000000000f,-0.932623792124926f,0.632623792124926f,0.632623792124926f,-0.932623792124926f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f,19.600000000000001f,-2.168691769624716f,3.868691769624717f,3.868691769624717f,-2.168691769624716f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f};
ResRA.Reshape(new ILDimension(5,2,2));
ResIAR = new float[]{3.600000000000000f,-0.932623792124926f,0.632623792124926f,0.632623792124926f,-0.932623792124926f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f,19.600000000000001f,-2.168691769624716f,3.868691769624717f,3.868691769624717f,-2.168691769624716f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f};
ResIAI = new float[]{0.000000000000000f,0.643288162577628f,0.660439505093009f,-0.660439505093009f,-0.643288162577628f,0.000000000000000f,-0.380422606518061f,-0.235114100916989f,0.235114100916989f,0.380422606518061f,0.000000000000000f,4.447514227758243f,3.011580514262902f,-3.011580514262902f,-4.447514227758243f,0.000000000000000f,-0.380422606518061f,-0.235114100916989f,0.235114100916989f,0.380422606518061f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{78.000000000000000f,-15.843458848123582f,14.343458848123582f,14.343458848123582f,-15.843458848123582f,-24.000000000000000f,5.148658380435013f,-2.817954124429176f,-6.890249808070193f,-1.440454447935643f,-24.000000000000000f,-1.440454447935643f,-6.890249808070193f,-2.817954124429176f,5.148658380435013f,318.000000000000000f,-34.384478510620426f,62.884478510620426f,62.884478510620426f,-34.384478510620426f,-24.000000000000000f,5.148658380435013f,-2.817954124429176f,-6.890249808070193f,-1.440454447935643f,-24.000000000000000f,-1.440454447935643f,-6.890249808070193f,-2.817954124429176f,5.148658380435013f};
ResultI = new float[]{0.000000000000000f,-15.355661536435342f,-13.433304090149978f,13.433304090149978f,15.355661536435342f,13.856406460551018f,4.635872828451651f,6.329228590642986f,-0.724194436866692f,-6.776805367090191f,-13.856406460551018f,6.776805367090191f,0.724194436866692f,-6.329228590642986f,-4.635872828451651f,0.000000000000000f,-72.419052514144553f,-48.700419227698369f,48.700419227698369f,72.419052514144553f,13.856406460551018f,4.635872828451651f,6.329228590642986f,-0.724194436866692f,-6.776805367090191f,-13.856406460551018f,6.776805367090191f,0.724194436866692f,-6.329228590642986f,-4.635872828451651f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,2));
ResRA = new float[]{5.200000000000000f,-1.056230589874905f,0.956230589874905f,0.956230589874905f,-1.056230589874905f,-1.600000000000000f,0.343243892029001f,-0.187863608295278f,-0.459349987204680f,-0.096030296529043f,-1.600000000000000f,-0.096030296529043f,-0.459349987204680f,-0.187863608295278f,0.343243892029001f,21.199999999999999f,-2.292298567374695f,4.192298567374695f,4.192298567374695f,-2.292298567374695f,-1.600000000000000f,0.343243892029001f,-0.187863608295278f,-0.459349987204680f,-0.096030296529043f,-1.600000000000000f,-0.096030296529043f,-0.459349987204680f,-0.187863608295278f,0.343243892029001f};
ResRA.Reshape(new ILDimension(5,3,2));
ResIAR = new float[]{5.200000000000000f,-1.056230589874905f,0.956230589874905f,0.956230589874905f,-1.056230589874905f,-1.600000000000000f,0.343243892029001f,-0.187863608295278f,-0.459349987204680f,-0.096030296529043f,-1.600000000000000f,-0.096030296529043f,-0.459349987204680f,-0.187863608295278f,0.343243892029001f,21.199999999999999f,-2.292298567374695f,4.192298567374695f,4.192298567374695f,-2.292298567374695f,-1.600000000000000f,0.343243892029001f,-0.187863608295278f,-0.459349987204680f,-0.096030296529043f,-1.600000000000000f,-0.096030296529043f,-0.459349987204680f,-0.187863608295278f,0.343243892029001f};
ResIAI = new float[]{0.000000000000000f,1.023710769095690f,0.895553606009998f,-0.895553606009998f,-1.023710769095690f,-0.923760430703401f,-0.309058188563443f,-0.421948572709532f,0.048279629124446f,0.451787024472679f,0.923760430703401f,-0.451787024472679f,-0.048279629124446f,0.421948572709532f,0.309058188563443f,0.000000000000000f,4.827936834276303f,3.246694615179891f,-3.246694615179891f,-4.827936834276303f,-0.923760430703401f,-0.309058188563443f,-0.421948572709532f,0.048279629124446f,0.451787024472679f,0.923760430703401f,-0.451787024472679f,-0.048279629124446f,0.421948572709532f,0.309058188563443f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new float[]{136.000000000000000f,-23.596747752497688f,25.596747752497688f,25.596747752497688f,-23.596747752497688f,-32.000000000000000f,10.080588085360809f,-1.769853936659795f,-11.174417973339365f,-5.136316175361649f,-32.000000000000000f,2.472135954999580f,-6.472135954999580f,-6.472135954999580f,2.472135954999580f,-32.000000000000000f,-5.136316175361649f,-11.174417973339365f,-1.769853936659795f,10.080588085360809f,456.000000000000000f,-48.318107302493488f,90.318107302493488f,90.318107302493488f,-48.318107302493488f,-32.000000000000000f,10.080588085360809f,-1.769853936659795f,-11.174417973339365f,-5.136316175361649f,-32.000000000000000f,2.472135954999580f,-6.472135954999580f,-6.472135954999580f,2.472135954999580f,-32.000000000000000f,-5.136316175361649f,-11.174417973339365f,-1.769853936659795f,10.080588085360809f};
ResultI = new float[]{0.000000000000000f,-28.082667512275020f,-22.613354138539755f,22.613354138539755f,28.082667512275020f,32.000000000000000f,5.136316175361649f,11.174417973339365f,1.769853936659795f,-10.080588085360809f,0.000000000000000f,7.608452130361228f,4.702282018339785f,-4.702282018339785f,-7.608452130361228f,-32.000000000000000f,10.080588085360809f,-1.769853936659795f,-11.174417973339365f,-5.136316175361649f,0.000000000000000f,-104.167188815887300f,-69.636174321937602f,69.636174321937602f,104.167188815887300f,32.000000000000000f,5.136316175361649f,11.174417973339365f,1.769853936659795f,-10.080588085360809f,0.000000000000000f,7.608452130361228f,4.702282018339785f,-4.702282018339785f,-7.608452130361228f,-32.000000000000000f,10.080588085360809f,-1.769853936659795f,-11.174417973339365f,-5.136316175361649f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,2));
ResRA = new float[]{6.800000000000000f,-1.179837387624884f,1.279837387624884f,1.279837387624884f,-1.179837387624884f,-1.600000000000000f,0.504029404268040f,-0.088492696832990f,-0.558720898666968f,-0.256815808768082f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f,-1.600000000000000f,-0.256815808768082f,-0.558720898666968f,-0.088492696832990f,0.504029404268040f,22.800000000000001f,-2.415905365124675f,4.515905365124675f,4.515905365124675f,-2.415905365124675f,-1.600000000000000f,0.504029404268040f,-0.088492696832990f,-0.558720898666968f,-0.256815808768082f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f,-1.600000000000000f,-0.256815808768082f,-0.558720898666968f,-0.088492696832990f,0.504029404268040f};
ResRA.Reshape(new ILDimension(5,4,2));
ResIAR = new float[]{6.800000000000000f,-1.179837387624884f,1.279837387624884f,1.279837387624884f,-1.179837387624884f,-1.600000000000000f,0.504029404268040f,-0.088492696832990f,-0.558720898666968f,-0.256815808768082f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f,-1.600000000000000f,-0.256815808768082f,-0.558720898666968f,-0.088492696832990f,0.504029404268040f,22.800000000000001f,-2.415905365124675f,4.515905365124675f,4.515905365124675f,-2.415905365124675f,-1.600000000000000f,0.504029404268040f,-0.088492696832990f,-0.558720898666968f,-0.256815808768082f,-1.600000000000000f,0.123606797749979f,-0.323606797749979f,-0.323606797749979f,0.123606797749979f,-1.600000000000000f,-0.256815808768082f,-0.558720898666968f,-0.088492696832990f,0.504029404268040f};
ResIAI = new float[]{0.000000000000000f,1.404133375613751f,1.130667706926988f,-1.130667706926988f,-1.404133375613751f,-1.600000000000000f,-0.256815808768082f,-0.558720898666968f,-0.088492696832990f,0.504029404268040f,0.000000000000000f,-0.380422606518061f,-0.235114100916989f,0.235114100916989f,0.380422606518061f,1.600000000000000f,-0.504029404268040f,0.088492696832990f,0.558720898666968f,0.256815808768082f,0.000000000000000f,5.208359440794365f,3.481808716096880f,-3.481808716096880f,-5.208359440794365f,-1.600000000000000f,-0.256815808768082f,-0.558720898666968f,-0.088492696832990f,0.504029404268040f,0.000000000000000f,-0.380422606518061f,-0.235114100916989f,0.235114100916989f,0.380422606518061f,1.600000000000000f,-0.504029404268040f,0.088492696832990f,0.558720898666968f,0.256815808768082f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new float[]{210.000000000000000f,-32.586104634371587f,40.086104634371587f,40.086104634371587f,-32.586104634371587f,-40.000000000000000f,16.180339887498945f,-0.000000000000002f,-16.180339887498945f,-9.999999999999998f,-40.000000000000000f,6.180339887498949f,-6.180339887498949f,-10.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,-10.000000000000000f,-6.180339887498949f,6.180339887498949f,-40.000000000000000f,-9.999999999999998f,-16.180339887498945f,-0.000000000000002f,16.180339887498945f,610.000000000000000f,-63.487804071866336f,120.987804071866340f,120.987804071866340f,-63.487804071866336f,-40.000000000000000f,16.180339887498945f,-0.000000000000002f,-16.180339887498945f,-9.999999999999998f,-40.000000000000000f,6.180339887498949f,-6.180339887498949f,-10.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,-10.000000000000000f,-6.180339887498949f,6.180339887498949f,-40.000000000000000f,-9.999999999999998f,-16.180339887498945f,-0.000000000000002f,16.180339887498945f};
ResultI = new float[]{0.000000000000000f,-44.613899553295312f,-34.144545196099422f,34.144545196099422f,44.613899553295312f,55.055276818846934f,5.257311121191336f,17.013016167040799f,5.257311121191336f,-13.763819204711734f,12.996787849316254f,8.506508083520398f,8.506508083520401f,-3.249196962329063f,-10.514622242382671f,-12.996787849316254f,10.514622242382671f,3.249196962329063f,-8.506508083520401f,-8.506508083520398f,-55.055276818846934f,13.763819204711734f,-5.257311121191336f,-17.013016167040799f,-5.257311121191336f,0.000000000000000f,-139.719551182810650f,-92.923070425346737f,92.923070425346737f,139.719551182810650f,55.055276818846934f,5.257311121191336f,17.013016167040799f,5.257311121191336f,-13.763819204711734f,12.996787849316254f,8.506508083520398f,8.506508083520401f,-3.249196962329063f,-10.514622242382671f,-12.996787849316254f,10.514622242382671f,3.249196962329063f,-8.506508083520401f,-8.506508083520398f,-55.055276818846934f,13.763819204711734f,-5.257311121191336f,-17.013016167040799f,-5.257311121191336f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,2));
ResRA = new float[]{8.400000000000000f,-1.303444185374863f,1.603444185374863f,1.603444185374863f,-1.303444185374863f,-1.600000000000000f,0.647213595499958f,-0.000000000000000f,-0.647213595499958f,-0.400000000000000f,-1.600000000000000f,0.247213595499958f,-0.247213595499958f,-0.400000000000000f,0.000000000000000f,-1.600000000000000f,0.000000000000000f,-0.400000000000000f,-0.247213595499958f,0.247213595499958f,-1.600000000000000f,-0.400000000000000f,-0.647213595499958f,-0.000000000000000f,0.647213595499958f,24.399999999999999f,-2.539512162874653f,4.839512162874653f,4.839512162874653f,-2.539512162874653f,-1.600000000000000f,0.647213595499958f,-0.000000000000000f,-0.647213595499958f,-0.400000000000000f,-1.600000000000000f,0.247213595499958f,-0.247213595499958f,-0.400000000000000f,0.000000000000000f,-1.600000000000000f,0.000000000000000f,-0.400000000000000f,-0.247213595499958f,0.247213595499958f,-1.600000000000000f,-0.400000000000000f,-0.647213595499958f,-0.000000000000000f,0.647213595499958f};
ResRA.Reshape(new ILDimension(5,5,2));
ResIAR = new float[]{8.400000000000000f,-1.303444185374863f,1.603444185374863f,1.603444185374863f,-1.303444185374863f,-1.600000000000000f,0.647213595499958f,-0.000000000000000f,-0.647213595499958f,-0.400000000000000f,-1.600000000000000f,0.247213595499958f,-0.247213595499958f,-0.400000000000000f,0.000000000000000f,-1.600000000000000f,0.000000000000000f,-0.400000000000000f,-0.247213595499958f,0.247213595499958f,-1.600000000000000f,-0.400000000000000f,-0.647213595499958f,-0.000000000000000f,0.647213595499958f,24.399999999999999f,-2.539512162874653f,4.839512162874653f,4.839512162874653f,-2.539512162874653f,-1.600000000000000f,0.647213595499958f,-0.000000000000000f,-0.647213595499958f,-0.400000000000000f,-1.600000000000000f,0.247213595499958f,-0.247213595499958f,-0.400000000000000f,0.000000000000000f,-1.600000000000000f,0.000000000000000f,-0.400000000000000f,-0.247213595499958f,0.247213595499958f,-1.600000000000000f,-0.400000000000000f,-0.647213595499958f,-0.000000000000000f,0.647213595499958f};
ResIAI = new float[]{0.000000000000000f,1.784555982131812f,1.365781807843977f,-1.365781807843977f,-1.784555982131812f,-2.202211072753877f,-0.210292444847653f,-0.680520646681632f,-0.210292444847653f,0.550552768188469f,-0.519871513972650f,-0.340260323340816f,-0.340260323340816f,0.129967878493163f,0.420584889695307f,0.519871513972650f,-0.420584889695307f,-0.129967878493163f,0.340260323340816f,0.340260323340816f,2.202211072753877f,-0.550552768188469f,0.210292444847653f,0.680520646681632f,0.210292444847653f,0.000000000000000f,5.588782047312426f,3.716922817013869f,-3.716922817013869f,-5.588782047312426f,-2.202211072753877f,-0.210292444847653f,-0.680520646681632f,-0.210292444847653f,0.550552768188469f,-0.519871513972650f,-0.340260323340816f,-0.340260323340816f,0.129967878493163f,0.420584889695307f,0.519871513972650f,-0.420584889695307f,-0.129967878493163f,0.340260323340816f,0.340260323340816f,2.202211072753877f,-0.550552768188469f,0.210292444847653f,0.680520646681632f,0.210292444847653f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new float[]{210.000000000000000f,-32.586104634371587f,40.086104634371587f,40.086104634371587f,-32.586104634371587f,-93.000000000000000f,10.977231529734002f,-18.376481544822287f,-18.765351179550134f,6.664601194638421f,-3.000000000000000f,-12.426418986380993f,-8.795648052730639f,7.104665047105586f,9.617401992006046f,42.000000000000000f,-6.517220926874317f,8.017220926874316f,8.017220926874316f,-6.517220926874317f,-3.000000000000000f,9.617401992006046f,7.104665047105586f,-8.795648052730639f,-12.426418986380993f,-93.000000000000000f,6.664601194638421f,-18.765351179550134f,-18.376481544822287f,10.977231529734002f,610.000000000000000f,-63.487804071866336f,120.987804071866340f,120.987804071866340f,-63.487804071866336f,-133.000000000000000f,-2.405380597443159f,-36.647390697674304f,-16.674781914197069f,26.227553209314532f,37.000000000000000f,-31.989371001057105f,-10.886217318083705f,25.375574199957601f,23.000014119183209f,122.000000000000000f,-12.697560814373265f,24.197560814373265f,24.197560814373265f,-12.697560814373265f,37.000000000000000f,23.000014119183209f,25.375574199957601f,-10.886217318083705f,-31.989371001057105f,-133.000000000000000f,26.227553209314532f,-16.674781914197069f,-36.647390697674304f,-2.405380597443159f};
ResultI = new float[]{0.000000000000000f,-44.613899553295312f,-34.144545196099422f,34.144545196099422f,44.613899553295312f,5.196152422706632f,24.013087325433208f,15.459023301113518f,-12.530154820635399f,-19.147727171851383f,-50.229473419497438f,7.959494296509382f,-9.633377073168632f,-9.857891061458425f,5.469596011626601f,0.000000000000000f,-8.922779910659061f,-6.828909039219886f,6.828909039219886f,8.922779910659061f,50.229473419497438f,-5.469596011626601f,9.857891061458425f,9.633377073168632f,-7.959494296509382f,-5.196152422706632f,19.147727171851383f,12.530154820635399f,-15.459023301113518f,-24.013087325433208f,0.000000000000000f,-139.719551182810650f,-92.923070425346737f,92.923070425346737f,139.719551182810650f,-64.085879880048466f,38.875983834981099f,7.324290439597515f,-32.420592728000869f,-23.305960988206568f,-119.511505722252520f,3.801260480154195f,-29.523814980534098f,-17.992623922974424f,20.332492521174483f,0.000000000000000f,-27.943910236562132f,-18.584614085069347f,18.584614085069347f,27.943910236562132f,119.511505722252520f,-20.332492521174483f,17.992623922974424f,29.523814980534098f,-3.801260480154195f,64.085879880048466f,23.305960988206568f,32.420592728000869f,-7.324290439597515f,-38.875983834981099f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,6,2));
ResRA = new float[]{7.000000000000000f,-1.086203487812386f,1.336203487812386f,1.336203487812386f,-1.086203487812386f,-3.100000000000000f,0.365907717657800f,-0.612549384827410f,-0.625511705985004f,0.222153373154614f,-0.100000000000000f,-0.414213966212700f,-0.293188268424355f,0.236822168236853f,0.320580066400202f,1.400000000000000f,-0.217240697562477f,0.267240697562477f,0.267240697562477f,-0.217240697562477f,-0.100000000000000f,0.320580066400202f,0.236822168236853f,-0.293188268424355f,-0.414213966212700f,-3.100000000000000f,0.222153373154614f,-0.625511705985004f,-0.612549384827410f,0.365907717657800f,20.333333333333336f,-2.116260135728878f,4.032926802395545f,4.032926802395545f,-2.116260135728878f,-4.433333333333334f,-0.080179353248105f,-1.221579689922477f,-0.555826063806569f,0.874251773643818f,1.233333333333333f,-1.066312366701903f,-0.362873910602790f,0.845852473331920f,0.766667137306107f,4.066666666666666f,-0.423252027145776f,0.806585360479109f,0.806585360479109f,-0.423252027145776f,1.233333333333333f,0.766667137306107f,0.845852473331920f,-0.362873910602790f,-1.066312366701903f,-4.433333333333334f,0.874251773643818f,-0.555826063806569f,-1.221579689922477f,-0.080179353248105f};
ResRA.Reshape(new ILDimension(5,6,2));
ResIAR = new float[]{7.000000000000000f,-1.086203487812386f,1.336203487812386f,1.336203487812386f,-1.086203487812386f,-3.100000000000000f,0.365907717657800f,-0.612549384827410f,-0.625511705985004f,0.222153373154614f,-0.100000000000000f,-0.414213966212700f,-0.293188268424355f,0.236822168236853f,0.320580066400202f,1.400000000000000f,-0.217240697562477f,0.267240697562477f,0.267240697562477f,-0.217240697562477f,-0.100000000000000f,0.320580066400202f,0.236822168236853f,-0.293188268424355f,-0.414213966212700f,-3.100000000000000f,0.222153373154614f,-0.625511705985004f,-0.612549384827410f,0.365907717657800f,20.333333333333336f,-2.116260135728878f,4.032926802395545f,4.032926802395545f,-2.116260135728878f,-4.433333333333334f,-0.080179353248105f,-1.221579689922477f,-0.555826063806569f,0.874251773643818f,1.233333333333333f,-1.066312366701903f,-0.362873910602790f,0.845852473331920f,0.766667137306107f,4.066666666666666f,-0.423252027145776f,0.806585360479109f,0.806585360479109f,-0.423252027145776f,1.233333333333333f,0.766667137306107f,0.845852473331920f,-0.362873910602790f,-1.066312366701903f,-4.433333333333334f,0.874251773643818f,-0.555826063806569f,-1.221579689922477f,-0.080179353248105f};
ResIAI = new float[]{0.000000000000000f,1.487129985109844f,1.138151506536647f,-1.138151506536647f,-1.487129985109844f,-0.173205080756888f,-0.800436244181107f,-0.515300776703784f,0.417671827354513f,0.638257572395046f,1.674315780649915f,-0.265316476550313f,0.321112569105621f,0.328596368715281f,-0.182319867054220f,0.000000000000000f,0.297425997021969f,0.227630301307330f,-0.227630301307330f,-0.297425997021969f,-1.674315780649915f,0.182319867054220f,-0.328596368715281f,-0.321112569105621f,0.265316476550313f,0.173205080756888f,-0.638257572395046f,-0.417671827354513f,0.515300776703784f,0.800436244181107f,0.000000000000000f,4.657318372760355f,3.097435680844892f,-3.097435680844892f,-4.657318372760355f,2.136195996001615f,-1.295866127832703f,-0.244143014653251f,1.080686424266696f,0.776865366273552f,3.983716857408417f,-0.126708682671807f,0.984127166017803f,0.599754130765814f,-0.677749750705816f,0.000000000000000f,0.931463674552071f,0.619487136168978f,-0.619487136168978f,-0.931463674552071f,-3.983716857408417f,0.677749750705816f,-0.599754130765814f,-0.984127166017803f,0.126708682671807f,-2.136195996001615f,-0.776865366273552f,-1.080686424266696f,0.244143014653251f,1.295866127832703f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,6);
}
private static void TEST_FFT_float_fcomplex_8() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f};
A.Reshape(new ILDimension(3,1,3));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,3));
ResIAR = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,4.000000000000000f,4.000000000000000f,7.000000000000000f,7.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new float[]{0.500000000000000f,0.500000000000000f,2.000000000000000f,2.000000000000000f,3.500000000000000f,3.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,3));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f,2.000000000000000f,2.000000000000000f,3.500000000000000f,3.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,9.000000000000000f,-1.000000000000000f,15.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,9.000000000000000f,-1.000000000000000f,15.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,4.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,4.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,3.000000000000000f,-1.000000000000000f,9.000000000000000f,-1.000000000000000f,9.000000000000000f,-1.000000000000000f,15.000000000000000f,-1.000000000000000f,15.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3));
ResRA = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,2.250000000000000f,-0.250000000000000f,2.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2,3));
ResIAR = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,2.250000000000000f,-0.250000000000000f,2.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,5.000000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,5.000000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3));
ResRA = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,2.500000000000000f,-0.250000000000000f,-0.250000000000000f,2.500000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(3,2,3));
ResIAR = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,2.500000000000000f,-0.250000000000000f,-0.250000000000000f,2.500000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,15.000000000000000f,-2.000000000000000f,5.000000000000000f,-2.000000000000000f,24.000000000000000f,-2.000000000000000f,8.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-5.000000000000000f,0.000000000000000f,5.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,15.000000000000000f,-2.000000000000000f,5.000000000000000f,-2.000000000000000f,24.000000000000000f,-2.000000000000000f,8.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-5.000000000000000f,0.000000000000000f,5.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f,3.750000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,6.000000000000000f,-0.500000000000000f,2.000000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f,3.750000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,6.000000000000000f,-0.500000000000000f,2.000000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,1.250000000000000f,0.000000000000000f,-1.250000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,15.000000000000000f,-2.000000000000000f,5.000000000000000f,-2.000000000000000f,15.000000000000000f,-2.000000000000000f,5.000000000000000f,-2.000000000000000f,24.000000000000000f,-2.000000000000000f,8.000000000000000f,-2.000000000000000f,24.000000000000000f,-2.000000000000000f,8.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-5.000000000000000f,0.000000000000000f,5.000000000000000f,0.000000000000000f,-5.000000000000000f,0.000000000000000f,5.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,3));
ResRA = new float[]{0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f,1.875000000000000f,-0.250000000000000f,0.625000000000000f,-0.250000000000000f,1.875000000000000f,-0.250000000000000f,0.625000000000000f,-0.250000000000000f,3.000000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,3.000000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(4,2,3));
ResIAR = new float[]{0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,0.250000000000000f,-0.250000000000000f,1.875000000000000f,-0.250000000000000f,0.625000000000000f,-0.250000000000000f,1.875000000000000f,-0.250000000000000f,0.625000000000000f,-0.250000000000000f,3.000000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,3.000000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.625000000000000f,0.000000000000000f,-0.625000000000000f,0.000000000000000f,0.625000000000000f,0.000000000000000f,-0.625000000000000f,0.000000000000000f,1.000000000000000f,0.000000000000000f,-1.000000000000000f,0.000000000000000f,1.000000000000000f,0.000000000000000f,-1.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
}
private static void TEST_FFT_float_fcomplex_9() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
A.Reshape(new ILDimension(1,3,4));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f,10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,9.000000000000000f,-1.000000000000000f,15.000000000000000f,-1.000000000000000f,21.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f,33.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,15.000000000000000f,-2.000000000000000f,5.000000000000000f,-2.000000000000000f,24.000000000000000f,-2.000000000000000f,8.000000000000000f,-2.000000000000000f,33.000000000000000f,-2.000000000000000f,11.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-5.000000000000000f,0.000000000000000f,5.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-11.000000000000000f,0.000000000000000f,11.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f,10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f,10.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,4));
ResIAR = new float[]{1.000000000000000f,4.000000000000000f,7.000000000000000f,10.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,9.000000000000000f,-1.000000000000000f,15.000000000000000f,-1.000000000000000f,21.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,4.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,10.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,4));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,4.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,10.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f,33.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,5.000000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,11.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,3,4));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,5.000000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,11.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f,15.000000000000000f,-2.000000000000000f,5.000000000000000f,-2.000000000000000f,24.000000000000000f,-2.000000000000000f,8.000000000000000f,-2.000000000000000f,33.000000000000000f,-2.000000000000000f,11.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-5.000000000000000f,0.000000000000000f,5.000000000000000f,0.000000000000000f,-8.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-11.000000000000000f,0.000000000000000f,11.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f,3.750000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,6.000000000000000f,-0.500000000000000f,2.000000000000000f,-0.500000000000000f,8.250000000000000f,-0.500000000000000f,2.750000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,4,4));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f,3.750000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,6.000000000000000f,-0.500000000000000f,2.000000000000000f,-0.500000000000000f,8.250000000000000f,-0.500000000000000f,2.750000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,1.250000000000000f,0.000000000000000f,-1.250000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.750000000000000f,0.000000000000000f,-2.750000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,2.000000000000000f,2.000000000000000f,3.000000000000000f,3.000000000000000f,4.000000000000000f,4.000000000000000f,5.000000000000000f,5.000000000000000f,6.000000000000000f,6.000000000000000f,7.000000000000000f,7.000000000000000f,8.000000000000000f,8.000000000000000f,9.000000000000000f,9.000000000000000f,10.000000000000000f,10.000000000000000f,11.000000000000000f,11.000000000000000f,12.000000000000000f,12.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,4.000000000000000f,4.000000000000000f,7.000000000000000f,7.000000000000000f,10.000000000000000f,10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4));
ResRA = new float[]{0.500000000000000f,0.500000000000000f,2.000000000000000f,2.000000000000000f,3.500000000000000f,3.500000000000000f,5.000000000000000f,5.000000000000000f};
ResRA.Reshape(new ILDimension(2,1,4));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f,2.000000000000000f,2.000000000000000f,3.500000000000000f,3.500000000000000f,5.000000000000000f,5.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,3.000000000000000f,-1.000000000000000f,-1.000000000000000f,9.000000000000000f,9.000000000000000f,-1.000000000000000f,-1.000000000000000f,15.000000000000000f,15.000000000000000f,-1.000000000000000f,-1.000000000000000f,21.000000000000000f,21.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4));
ResRA = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,2.250000000000000f,2.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,5.250000000000000f,5.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2,4));
ResIAR = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,2.250000000000000f,2.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,5.250000000000000f,5.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,15.000000000000000f,15.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,24.000000000000000f,24.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,33.000000000000000f,33.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,4));
ResRA = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,2.500000000000000f,2.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.500000000000000f,5.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,3,4));
ResIAR = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,2.500000000000000f,2.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.500000000000000f,5.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{6.000000000000000f,6.000000000000000f,-2.000000000000000f,-2.000000000000000f,2.000000000000000f,2.000000000000000f,-2.000000000000000f,-2.000000000000000f,15.000000000000000f,15.000000000000000f,-2.000000000000000f,-2.000000000000000f,5.000000000000000f,5.000000000000000f,-2.000000000000000f,-2.000000000000000f,24.000000000000000f,24.000000000000000f,-2.000000000000000f,-2.000000000000000f,8.000000000000000f,8.000000000000000f,-2.000000000000000f,-2.000000000000000f,33.000000000000000f,33.000000000000000f,-2.000000000000000f,-2.000000000000000f,11.000000000000000f,11.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-5.000000000000000f,-5.000000000000000f,0.000000000000000f,0.000000000000000f,5.000000000000000f,5.000000000000000f,0.000000000000000f,0.000000000000000f,-8.000000000000000f,-8.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,8.000000000000000f,0.000000000000000f,0.000000000000000f,-11.000000000000000f,-11.000000000000000f,0.000000000000000f,0.000000000000000f,11.000000000000000f,11.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,4));
ResRA = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,0.250000000000000f,0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.875000000000000f,1.875000000000000f,-0.250000000000000f,-0.250000000000000f,0.625000000000000f,0.625000000000000f,-0.250000000000000f,-0.250000000000000f,3.000000000000000f,3.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,4.125000000000000f,4.125000000000000f,-0.250000000000000f,-0.250000000000000f,1.375000000000000f,1.375000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,4,4));
ResIAR = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,0.250000000000000f,0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.875000000000000f,1.875000000000000f,-0.250000000000000f,-0.250000000000000f,0.625000000000000f,0.625000000000000f,-0.250000000000000f,-0.250000000000000f,3.000000000000000f,3.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,4.125000000000000f,4.125000000000000f,-0.250000000000000f,-0.250000000000000f,1.375000000000000f,1.375000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.625000000000000f,0.625000000000000f,0.000000000000000f,0.000000000000000f,-0.625000000000000f,-0.625000000000000f,0.000000000000000f,0.000000000000000f,1.000000000000000f,1.000000000000000f,0.000000000000000f,0.000000000000000f,-1.000000000000000f,-1.000000000000000f,0.000000000000000f,0.000000000000000f,1.375000000000000f,1.375000000000000f,0.000000000000000f,0.000000000000000f,-1.375000000000000f,-1.375000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
}
private static void TEST_FFT_float_fcomplex_10() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
A.Reshape(new ILDimension(1,4,3));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,5.000000000000000f,9.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,11.000000000000000f,-1.000000000000000f,19.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,18.000000000000000f,-1.500000000000000f,-1.500000000000000f,30.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,26.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,42.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{10.000000000000000f,-4.045084971874737f,1.545084971874737f,1.545084971874737f,-4.045084971874737f,26.000000000000000f,-5.281152949374527f,4.781152949374527f,4.781152949374527f,-5.281152949374527f,42.000000000000000f,-6.517220926874317f,8.017220926874316f,8.017220926874316f,-6.517220926874317f};
ResultI = new float[]{0.000000000000000f,-1.314327780297834f,-2.126627020880100f,2.126627020880100f,1.314327780297834f,0.000000000000000f,-5.118553845478448f,-4.477768030049992f,4.477768030049992f,5.118553845478448f,0.000000000000000f,-8.922779910659061f,-6.828909039219886f,6.828909039219886f,8.922779910659061f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,5.000000000000000f,9.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new float[]{1.000000000000000f,5.000000000000000f,9.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,3));
ResIAR = new float[]{1.000000000000000f,5.000000000000000f,9.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,11.000000000000000f,-1.000000000000000f,19.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,5.500000000000000f,-0.500000000000000f,9.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,5.500000000000000f,-0.500000000000000f,9.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,18.000000000000000f,-1.500000000000000f,-1.500000000000000f,30.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,6.000000000000000f,-0.500000000000000f,-0.500000000000000f,10.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,3,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,6.000000000000000f,-0.500000000000000f,-0.500000000000000f,10.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,26.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,42.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,4,3));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{10.000000000000000f,-4.045084971874737f,1.545084971874737f,1.545084971874737f,-4.045084971874737f,26.000000000000000f,-5.281152949374527f,4.781152949374527f,4.781152949374527f,-5.281152949374527f,42.000000000000000f,-6.517220926874317f,8.017220926874316f,8.017220926874316f,-6.517220926874317f};
ResultI = new float[]{0.000000000000000f,-1.314327780297834f,-2.126627020880100f,2.126627020880100f,1.314327780297834f,0.000000000000000f,-5.118553845478448f,-4.477768030049992f,4.477768030049992f,5.118553845478448f,0.000000000000000f,-8.922779910659061f,-6.828909039219886f,6.828909039219886f,8.922779910659061f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3));
ResRA = new float[]{2.000000000000000f,-0.809016994374947f,0.309016994374947f,0.309016994374948f,-0.809016994374947f,5.200000000000000f,-1.056230589874905f,0.956230589874905f,0.956230589874905f,-1.056230589874905f,8.400000000000000f,-1.303444185374863f,1.603444185374863f,1.603444185374863f,-1.303444185374863f};
ResRA.Reshape(new ILDimension(1,5,3));
ResIAR = new float[]{2.000000000000000f,-0.809016994374947f,0.309016994374947f,0.309016994374948f,-0.809016994374947f,5.200000000000000f,-1.056230589874905f,0.956230589874905f,0.956230589874905f,-1.056230589874905f,8.400000000000000f,-1.303444185374863f,1.603444185374863f,1.603444185374863f,-1.303444185374863f};
ResIAI = new float[]{0.000000000000000f,0.262865556059567f,0.425325404176020f,-0.425325404176020f,-0.262865556059567f,0.000000000000000f,1.023710769095690f,0.895553606009998f,-0.895553606009998f,-1.023710769095690f,0.000000000000000f,1.784555982131812f,1.365781807843977f,-1.365781807843977f,-1.784555982131812f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,2.000000000000000f,2.000000000000000f,3.000000000000000f,3.000000000000000f,4.000000000000000f,4.000000000000000f,5.000000000000000f,5.000000000000000f,6.000000000000000f,6.000000000000000f,7.000000000000000f,7.000000000000000f,8.000000000000000f,8.000000000000000f,9.000000000000000f,9.000000000000000f,10.000000000000000f,10.000000000000000f,11.000000000000000f,11.000000000000000f,12.000000000000000f,12.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,5.000000000000000f,5.000000000000000f,9.000000000000000f,9.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new float[]{0.500000000000000f,0.500000000000000f,2.500000000000000f,2.500000000000000f,4.500000000000000f,4.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,3));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f,2.500000000000000f,2.500000000000000f,4.500000000000000f,4.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,3.000000000000000f,-1.000000000000000f,-1.000000000000000f,11.000000000000000f,11.000000000000000f,-1.000000000000000f,-1.000000000000000f,19.000000000000000f,19.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3));
ResRA = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,2.750000000000000f,2.750000000000000f,-0.250000000000000f,-0.250000000000000f,4.750000000000000f,4.750000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2,3));
ResIAR = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,2.750000000000000f,2.750000000000000f,-0.250000000000000f,-0.250000000000000f,4.750000000000000f,4.750000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,18.000000000000000f,18.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,30.000000000000000f,30.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,3));
ResRA = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.000000000000000f,3.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.000000000000000f,5.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,3,3));
ResIAR = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.000000000000000f,3.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.000000000000000f,5.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{10.000000000000000f,10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,26.000000000000000f,26.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,42.000000000000000f,42.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new float[]{1.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.250000000000000f,3.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.250000000000000f,5.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,4,3));
ResIAR = new float[]{1.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.250000000000000f,3.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.250000000000000f,5.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{10.000000000000000f,10.000000000000000f,-4.045084971874737f,-4.045084971874737f,1.545084971874737f,1.545084971874737f,1.545084971874737f,1.545084971874737f,-4.045084971874737f,-4.045084971874737f,26.000000000000000f,26.000000000000000f,-5.281152949374527f,-5.281152949374527f,4.781152949374527f,4.781152949374527f,4.781152949374527f,4.781152949374527f,-5.281152949374527f,-5.281152949374527f,42.000000000000000f,42.000000000000000f,-6.517220926874317f,-6.517220926874317f,8.017220926874316f,8.017220926874316f,8.017220926874316f,8.017220926874316f,-6.517220926874317f,-6.517220926874317f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-1.314327780297834f,-1.314327780297834f,-2.126627020880100f,-2.126627020880100f,2.126627020880100f,2.126627020880100f,1.314327780297834f,1.314327780297834f,0.000000000000000f,0.000000000000000f,-5.118553845478448f,-5.118553845478448f,-4.477768030049992f,-4.477768030049992f,4.477768030049992f,4.477768030049992f,5.118553845478448f,5.118553845478448f,0.000000000000000f,0.000000000000000f,-8.922779910659061f,-8.922779910659061f,-6.828909039219886f,-6.828909039219886f,6.828909039219886f,6.828909039219886f,8.922779910659061f,8.922779910659061f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,3));
ResRA = new float[]{1.000000000000000f,1.000000000000000f,-0.404508497187474f,-0.404508497187474f,0.154508497187474f,0.154508497187474f,0.154508497187474f,0.154508497187474f,-0.404508497187474f,-0.404508497187474f,2.600000000000000f,2.600000000000000f,-0.528115294937453f,-0.528115294937453f,0.478115294937453f,0.478115294937453f,0.478115294937453f,0.478115294937453f,-0.528115294937453f,-0.528115294937453f,4.200000000000000f,4.200000000000000f,-0.651722092687432f,-0.651722092687432f,0.801722092687432f,0.801722092687432f,0.801722092687432f,0.801722092687432f,-0.651722092687432f,-0.651722092687432f};
ResRA.Reshape(new ILDimension(2,5,3));
ResIAR = new float[]{1.000000000000000f,1.000000000000000f,-0.404508497187474f,-0.404508497187474f,0.154508497187474f,0.154508497187474f,0.154508497187474f,0.154508497187474f,-0.404508497187474f,-0.404508497187474f,2.600000000000000f,2.600000000000000f,-0.528115294937453f,-0.528115294937453f,0.478115294937453f,0.478115294937453f,0.478115294937453f,0.478115294937453f,-0.528115294937453f,-0.528115294937453f,4.200000000000000f,4.200000000000000f,-0.651722092687432f,-0.651722092687432f,0.801722092687432f,0.801722092687432f,0.801722092687432f,0.801722092687432f,-0.651722092687432f,-0.651722092687432f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.131432778029783f,0.131432778029783f,0.212662702088010f,0.212662702088010f,-0.212662702088010f,-0.212662702088010f,-0.131432778029783f,-0.131432778029783f,0.000000000000000f,0.000000000000000f,0.511855384547845f,0.511855384547845f,0.447776803004999f,0.447776803004999f,-0.447776803004999f,-0.447776803004999f,-0.511855384547845f,-0.511855384547845f,0.000000000000000f,0.000000000000000f,0.892277991065906f,0.892277991065906f,0.682890903921989f,0.682890903921989f,-0.682890903921989f,-0.682890903921989f,-0.892277991065906f,-0.892277991065906f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
}
private static void TEST_FFT_float_fcomplex_11() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f};
A.Reshape(new ILDimension(3,4));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,5));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{5.000000000000000f,-3.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{2.500000000000000f,-1.500000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{2.500000000000000f,-1.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{12.000000000000000f,-4.500000000000000f,-4.500000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new float[]{4.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new float[]{4.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.866025403784439f,0.866025403784439f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{22.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new float[]{5.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new float[]{5.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-1.500000000000000f,0.000000000000000f,1.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{22.000000000000000f,-11.517220926874316f,3.017220926874317f,3.017220926874317f,-11.517220926874316f};
ResultI = new float[]{0.000000000000000f,-2.040870308303195f,-5.204310558055353f,5.204310558055353f,2.040870308303195f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5));
ResRA = new float[]{4.400000000000000f,-2.303444185374863f,0.603444185374863f,0.603444185374863f,-2.303444185374863f};
ResRA.Reshape(new ILDimension(1,5));
ResIAR = new float[]{4.400000000000000f,-2.303444185374863f,0.603444185374863f,0.603444185374863f,-2.303444185374863f};
ResIAI = new float[]{0.000000000000000f,0.408174061660639f,1.040862111611071f,-1.040862111611071f,-0.408174061660639f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{12.000000000000000f,-2.000000000000000f,-6.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{27.000000000000000f,-3.000000000000000f,-9.000000000000000f,0.000000000000000f,-9.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,5.196152422706632f,0.000000000000000f,-5.196152422706632f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new float[]{4.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new float[]{4.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{48.000000000000000f,-4.000000000000000f,-12.000000000000000f,0.000000000000000f,-12.000000000000000f,0.000000000000000f,-12.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,12.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-12.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new float[]{6.000000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new float[]{6.000000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.500000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{48.000000000000000f,-4.000000000000000f,-23.343458848123582f,0.309016994374947f,6.843458848123582f,-0.809016994374947f,6.843458848123582f,-0.809016994374947f,-23.343458848123582f,0.309016994374947f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-5.032797132901543f,0.951056516295154f,-10.996406368403179f,0.587785252292473f,10.996406368403179f,-0.587785252292473f,5.032797132901543f,-0.951056516295154f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5));
ResRA = new float[]{4.800000000000000f,-0.400000000000000f,-2.334345884812358f,0.030901699437495f,0.684345884812358f,-0.080901699437495f,0.684345884812358f,-0.080901699437495f,-2.334345884812358f,0.030901699437495f};
ResRA.Reshape(new ILDimension(2,5));
ResIAR = new float[]{4.800000000000000f,-0.400000000000000f,-2.334345884812358f,0.030901699437495f,0.684345884812358f,-0.080901699437495f,0.684345884812358f,-0.080901699437495f,-2.334345884812358f,0.030901699437495f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.503279713290154f,-0.095105651629515f,1.099640636840318f,-0.058778525229247f,-1.099640636840318f,0.058778525229247f,-0.503279713290154f,0.095105651629515f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{21.000000000000000f,-3.000000000000000f,-3.000000000000000f,-9.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new float[]{3.500000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new float[]{3.500000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{45.000000000000000f,-4.500000000000000f,-4.500000000000000f,-13.500000000000000f,0.000000000000000f,0.000000000000000f,-13.500000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f,7.794228634059947f,0.000000000000000f,0.000000000000000f,-7.794228634059947f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{78.000000000000000f,-6.000000000000000f,-6.000000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,18.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-18.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4));
ResRA = new float[]{6.500000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,4));
ResIAR = new float[]{6.500000000000000f,-0.500000000000000f,-0.500000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,-1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new float[]{78.000000000000000f,-6.000000000000000f,-6.000000000000000f,-35.478713763747791f,1.287164595108753f,-0.360113611983911f,11.478713763747791f,-0.704488531107294f,-1.722562452017548f,11.478713763747791f,-1.722562452017548f,-0.704488531107294f,-35.478713763747791f,-0.360113611983911f,1.287164595108753f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,-8.975780473795044f,1.158968207112913f,1.694201341772548f,-17.376287431043480f,1.582307147660746f,0.181048609216673f,17.376287431043480f,-0.181048609216673f,-1.582307147660746f,8.975780473795044f,-1.694201341772548f,-1.158968207112913f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5));
ResRA = new float[]{5.200000000000000f,-0.400000000000000f,-0.400000000000000f,-2.365247584249853f,0.085810973007250f,-0.024007574132261f,0.765247584249853f,-0.046965902073820f,-0.114837496801170f,0.765247584249853f,-0.114837496801170f,-0.046965902073820f,-2.365247584249853f,-0.024007574132261f,0.085810973007250f};
ResRA.Reshape(new ILDimension(3,5));
ResIAR = new float[]{5.200000000000000f,-0.400000000000000f,-0.400000000000000f,-2.365247584249853f,0.085810973007250f,-0.024007574132261f,0.765247584249853f,-0.046965902073820f,-0.114837496801170f,0.765247584249853f,-0.114837496801170f,-0.046965902073820f,-2.365247584249853f,-0.024007574132261f,0.085810973007250f};
ResIAI = new float[]{0.000000000000000f,-0.230940107675850f,0.230940107675850f,0.598385364919670f,-0.077264547140861f,-0.112946756118170f,1.158419162069565f,-0.105487143177383f,-0.012069907281112f,-1.158419162069565f,0.012069907281112f,0.105487143177383f,-0.598385364919670f,0.112946756118170f,0.077264547140861f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{6.000000000000000f,-2.000000000000000f,2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{21.000000000000000f,-4.000000000000000f,7.000000000000000f,-4.000000000000000f,-9.000000000000000f,0.000000000000000f,-3.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,-7.000000000000000f,0.000000000000000f,7.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-3.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new float[]{2.625000000000000f,-0.500000000000000f,0.875000000000000f,-0.500000000000000f,-1.125000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new float[]{2.625000000000000f,-0.500000000000000f,0.875000000000000f,-0.500000000000000f,-1.125000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.875000000000000f,0.000000000000000f,-0.875000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f,0.375000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{45.000000000000000f,-6.000000000000000f,15.000000000000000f,-6.000000000000000f,-13.500000000000000f,2.598076211353316f,-4.500000000000000f,-2.598076211353316f,-13.500000000000000f,-2.598076211353316f,-4.500000000000000f,2.598076211353316f};
ResultI = new float[]{0.000000000000000f,-15.000000000000000f,0.000000000000000f,15.000000000000000f,7.794228634059947f,4.500000000000000f,2.598076211353316f,-4.500000000000000f,-7.794228634059947f,4.500000000000000f,-2.598076211353316f,-4.500000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3));
ResRA = new float[]{3.750000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,-1.125000000000000f,0.216506350946110f,-0.375000000000000f,-0.216506350946110f,-1.125000000000000f,-0.216506350946110f,-0.375000000000000f,0.216506350946110f};
ResRA.Reshape(new ILDimension(4,3));
ResIAR = new float[]{3.750000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,-1.125000000000000f,0.216506350946110f,-0.375000000000000f,-0.216506350946110f,-1.125000000000000f,-0.216506350946110f,-0.375000000000000f,0.216506350946110f};
ResIAI = new float[]{0.000000000000000f,1.250000000000000f,0.000000000000000f,-1.250000000000000f,-0.649519052838329f,-0.375000000000000f,-0.216506350946110f,0.375000000000000f,0.649519052838329f,-0.375000000000000f,0.216506350946110f,0.375000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new float[]{78.000000000000000f,-8.000000000000000f,26.000000000000000f,-8.000000000000000f,-18.000000000000000f,6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-18.000000000000000f,0.000000000000000f,-6.000000000000000f,0.000000000000000f,-18.000000000000000f,-6.000000000000000f,-6.000000000000000f,6.000000000000000f};
ResultI = new float[]{0.000000000000000f,-26.000000000000000f,0.000000000000000f,26.000000000000000f,18.000000000000000f,6.000000000000000f,6.000000000000000f,-6.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,-18.000000000000000f,6.000000000000000f,-6.000000000000000f,-6.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4));
ResRA = new float[]{4.875000000000000f,-0.500000000000000f,1.625000000000000f,-0.500000000000000f,-1.125000000000000f,0.375000000000000f,-0.375000000000000f,-0.375000000000000f,-1.125000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f,-1.125000000000000f,-0.375000000000000f,-0.375000000000000f,0.375000000000000f};
ResRA.Reshape(new ILDimension(4,4));
ResIAR = new float[]{4.875000000000000f,-0.500000000000000f,1.625000000000000f,-0.500000000000000f,-1.125000000000000f,0.375000000000000f,-0.375000000000000f,-0.375000000000000f,-1.125000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f,-1.125000000000000f,-0.375000000000000f,-0.375000000000000f,0.375000000000000f};
ResIAI = new float[]{0.000000000000000f,1.625000000000000f,0.000000000000000f,-1.625000000000000f,-1.125000000000000f,-0.375000000000000f,-0.375000000000000f,0.375000000000000f,0.000000000000000f,-0.375000000000000f,0.000000000000000f,0.375000000000000f,1.125000000000000f,-0.375000000000000f,0.375000000000000f,0.375000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new float[]{78.000000000000000f,-8.000000000000000f,26.000000000000000f,-8.000000000000000f,-35.478713763747791f,-2.373892835848453f,-11.826237921249264f,3.609960813348243f,11.478713763747791f,-7.410129799097721f,3.826237921249264f,4.174061821597931f,11.478713763747791f,4.174061821597931f,3.826237921249264f,-7.410129799097721f,-35.478713763747791f,3.609960813348243f,-11.826237921249264f,-2.373892835848453f};
ResultI = new float[]{0.000000000000000f,-26.000000000000000f,0.000000000000000f,26.000000000000000f,-8.975780473795044f,13.728350953839572f,-2.991926824598348f,-9.924124888658957f,-17.376287431043480f,-2.650667416664318f,-5.792095810347826f,5.001808425834211f,17.376287431043480f,-5.001808425834211f,5.792095810347826f,2.650667416664318f,8.975780473795044f,9.924124888658957f,2.991926824598348f,-13.728350953839572f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5));
ResRA = new float[]{3.900000000000000f,-0.400000000000000f,1.300000000000000f,-0.400000000000000f,-1.773935688187390f,-0.118694641792423f,-0.591311896062463f,0.180498040667412f,0.573935688187390f,-0.370506489954886f,0.191311896062463f,0.208703091079897f,0.573935688187390f,0.208703091079897f,0.191311896062463f,-0.370506489954886f,-1.773935688187390f,0.180498040667412f,-0.591311896062463f,-0.118694641792423f};
ResRA.Reshape(new ILDimension(4,5));
ResIAR = new float[]{3.900000000000000f,-0.400000000000000f,1.300000000000000f,-0.400000000000000f,-1.773935688187390f,-0.118694641792423f,-0.591311896062463f,0.180498040667412f,0.573935688187390f,-0.370506489954886f,0.191311896062463f,0.208703091079897f,0.573935688187390f,0.208703091079897f,0.191311896062463f,-0.370506489954886f,-1.773935688187390f,0.180498040667412f,-0.591311896062463f,-0.118694641792423f};
ResIAI = new float[]{0.000000000000000f,1.300000000000000f,0.000000000000000f,-1.300000000000000f,0.448789023689752f,-0.686417547691979f,0.149596341229917f,0.496206244432948f,0.868814371552174f,0.132533370833216f,0.289604790517391f,-0.250090421291711f,-0.868814371552174f,0.250090421291711f,-0.289604790517391f,-0.132533370833216f,-0.448789023689752f,-0.496206244432948f,-0.149596341229917f,0.686417547691979f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
}
private static void TEST_FFT_float_fcomplex_12() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f};
A.Reshape(new ILDimension(5,4));
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,1));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(0,5));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f};
ResultI = new float[]{0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1));
ResRA = new float[]{1.000000000000000f};
ResRA.Reshape(new ILDimension(1,1));
ResIAR = new float[]{1.000000000000000f};
ResIAI = new float[]{0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{7.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2));
ResRA = new float[]{3.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,2));
ResIAR = new float[]{3.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{18.000000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3));
ResRA = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,3));
ResIAR = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-1.443375672974064f,1.443375672974064f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{34.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4));
ResRA = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,4));
ResIAR = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{34.000000000000000f,-18.989356881873896f,4.489356881873896f,4.489356881873896f,-18.989356881873896f};
ResultI = new float[]{0.000000000000000f,-2.767412836308555f,-8.281994095230607f,8.281994095230607f,2.767412836308555f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5));
ResRA = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f};
ResRA.Reshape(new ILDimension(1,5));
ResIAR = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f};
ResIAI = new float[]{0.000000000000000f,0.553482567261711f,1.656398819046121f,-1.656398819046121f,-0.553482567261711f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{16.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2));
ResRA = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2));
ResIAR = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{39.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3));
ResRA = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3));
ResIAR = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4));
ResRA = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4));
ResIAR = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-38.287730758122741f,0.309016994374947f,9.787730758122741f,-0.809016994374947f,9.787730758122741f,-0.809016994374947f,-38.287730758122741f,0.309016994374947f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-6.485882188912264f,0.951056516295154f,-17.151773442753687f,0.587785252292473f,17.151773442753687f,-0.587785252292473f,6.485882188912264f,-0.951056516295154f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5));
ResRA = new float[]{7.200000000000000f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f};
ResRA.Reshape(new ILDimension(2,5));
ResIAR = new float[]{7.200000000000000f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.648588218891226f,-0.095105651629515f,1.715177344275369f,-0.058778525229247f,-1.715177344275369f,0.058778525229247f,-0.648588218891226f,0.095105651629515f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{27.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2));
ResRA = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2));
ResIAR = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{63.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3));
ResRA = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3));
ResIAR = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4));
ResRA = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,4));
ResIAR = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-57.895121628746530f,1.287164595108753f,-0.360113611983911f,15.895121628746530f,-0.704488531107294f,-1.722562452017548f,15.895121628746530f,-1.722562452017548f,-0.704488531107294f,-57.895121628746530f,-0.360113611983911f,1.287164595108753f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,-11.155408057811126f,1.158968207112913f,1.694201341772548f,-26.609338042569238f,1.582307147660746f,0.181048609216673f,26.609338042569238f,-0.181048609216673f,-1.582307147660746f,11.155408057811126f,-1.694201341772548f,-1.158968207112913f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5));
ResRA = new float[]{7.600000000000000f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132261f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132261f,0.085810973007250f};
ResRA.Reshape(new ILDimension(3,5));
ResIAR = new float[]{7.600000000000000f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132261f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132261f,0.085810973007250f};
ResIAI = new float[]{0.000000000000000f,-0.230940107675850f,0.230940107675850f,0.743693870520742f,-0.077264547140861f,-0.112946756118170f,1.773955869504616f,-0.105487143177383f,-0.012069907281112f,-1.773955869504616f,0.012069907281112f,0.105487143177383f,-0.743693870520742f,0.112946756118170f,0.077264547140861f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{40.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2));
ResRA = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2));
ResIAR = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{90.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3));
ResRA = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,3));
ResIAR = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4));
ResRA = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,4));
ResIAR = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-77.811529493745269f,2.520147021340202f,0.618033988749895f,-1.284079043840412f,22.811529493745269f,-0.442463484164949f,-1.618033988749895f,-2.793604493334841f,22.811529493745269f,-2.793604493334841f,-1.618033988749895f,-0.442463484164949f,-77.811529493745269f,-1.284079043840412f,0.618033988749895f,2.520147021340202f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-16.775990443005142f,1.284079043840412f,1.902113032590307f,2.520147021340202f,-36.654687894677267f,2.793604493334841f,1.175570504584946f,-0.442463484164949f,36.654687894677267f,0.442463484164949f,-1.175570504584946f,-2.793604493334841f,16.775990443005142f,-2.520147021340202f,-1.902113032590307f,-1.284079043840412f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5));
ResRA = new float[]{8.000000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192021f,0.030901699437495f,0.126007351067010f};
ResRA.Reshape(new ILDimension(4,5));
ResIAR = new float[]{8.000000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192021f,0.030901699437495f,0.126007351067010f};
ResIAI = new float[]{0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,0.838799522150257f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,1.832734394733863f,-0.139680224666742f,-0.058778525229247f,0.022123174208247f,-1.832734394733863f,-0.022123174208247f,0.058778525229247f,0.139680224666742f,-0.838799522150257f,0.126007351067010f,0.095105651629515f,0.064203952192021f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(5,1));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2));
ResRA = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,2));
ResIAR = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{120.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.322864403533799f,2.436897721746798f,-2.436897721746798f,-10.322864403533799f,21.650635094610966f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610966f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3));
ResRA = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,3));
ResIAR = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4));
ResRA = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,4));
ResIAR = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-98.036954353118958f,4.045084971874736f,1.545084971874737f,0.000000000000000f,-2.500000000000000f,30.536954353118958f,-0.000000000000000f,-1.545084971874737f,-2.500000000000000f,-4.045084971874736f,30.536954353118958f,-4.045084971874736f,-2.500000000000000f,-1.545084971874737f,-0.000000000000000f,-98.036954353118958f,-2.500000000000000f,0.000000000000000f,1.545084971874737f,4.045084971874736f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-23.347629344494308f,1.314327780297834f,2.126627020880100f,2.628655560595668f,3.440954801177933f,-47.287822999077761f,4.253254041760200f,2.126627020880100f,0.812299240582266f,-1.314327780297834f,47.287822999077761f,1.314327780297834f,-0.812299240582266f,-2.126627020880100f,-4.253254041760200f,23.347629344494308f,-3.440954801177933f,-2.628655560595668f,-2.126627020880100f,-1.314327780297834f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5));
ResRA = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874989f,0.061803398874989f,0.000000000000000f,-0.100000000000000f,1.221478174124759f,-0.000000000000000f,-0.061803398874989f,-0.100000000000000f,-0.161803398874989f,1.221478174124759f,-0.161803398874989f,-0.100000000000000f,-0.061803398874989f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874989f,0.161803398874989f};
ResRA.Reshape(new ILDimension(5,5));
ResIAR = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874989f,0.061803398874989f,0.000000000000000f,-0.100000000000000f,1.221478174124759f,-0.000000000000000f,-0.061803398874989f,-0.100000000000000f,-0.161803398874989f,1.221478174124759f,-0.161803398874989f,-0.100000000000000f,-0.061803398874989f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874989f,0.161803398874989f};
ResIAI = new float[]{0.000000000000000f,-0.550552768188469f,-0.129967878493163f,0.129967878493163f,0.550552768188469f,0.933905173779772f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,1.891512919963110f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-1.891512919963110f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-0.933905173779772f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new float[]{};
ResultI = new float[]{};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,0));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(6,0));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f};
ResRA.Reshape(new ILDimension(6,1));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new float[]{55.000000000000000f,-14.500000000000000f,2.500000000000000f,11.000000000000000f,2.500000000000000f,-14.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f};
ResultI = new float[]{0.000000000000000f,-4.330127018922193f,-11.258330249197702f,0.000000000000000f,11.258330249197702f,4.330127018922193f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2));
ResRA = new float[]{4.583333333333334f,-1.208333333333334f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333334f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResRA.Reshape(new ILDimension(6,2));
ResIAR = new float[]{4.583333333333334f,-1.208333333333334f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333334f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResIAI = new float[]{0.000000000000000f,0.360843918243516f,0.938194187433142f,0.000000000000000f,-0.938194187433142f,-0.360843918243516f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new float[]{120.000000000000000f,-25.500000000000000f,7.500000000000000f,24.000000000000000f,7.500000000000000f,-25.500000000000000f,-37.500000000000000f,7.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,7.500000000000000f};
ResultI = new float[]{0.000000000000000f,-12.990381056766578f,-23.382685902179841f,0.000000000000000f,23.382685902179841f,12.990381056766578f,21.650635094610966f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610966f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3));
ResRA = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,0.416666666666667f};
ResRA.Reshape(new ILDimension(6,3));
ResIAR = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,0.416666666666667f};
ResIAI = new float[]{0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4));
ResRA = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResRA.Reshape(new ILDimension(6,4));
ResIAR = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResIAI = new float[]{0.000000000000000f,1.082531754730548f,1.659882023920174f,0.000000000000000f,-1.659882023920174f,-1.082531754730548f,-2.083333333333333f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333333f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-98.036954353118958f,9.621261194543136f,-14.207737073390826f,-19.607390870623792f,-4.472602814108123f,12.767282625455183f,30.536954353118958f,-13.357652230006455f,-6.859358218078329f,6.107390870623792f,10.539698105577278f,-0.030891589991864f,30.536954353118958f,-0.030891589991864f,10.539698105577278f,6.107390870623792f,-6.859358218078329f,-13.357652230006455f,-98.036954353118958f,12.767282625455183f,-4.472602814108123f,-19.607390870623792f,-14.207737073390826f,9.621261194543136f};
ResultI = new float[]{0.000000000000000f,-25.980762113533153f,-39.837168574084181f,0.000000000000000f,39.837168574084181f,25.980762113533153f,-23.347629344494308f,22.792166151679453f,16.339937003214402f,-4.669525868898862f,-18.156293323227807f,-9.563131636124211f,-47.287822999077761f,4.186548098088652f,-9.836889335492467f,-9.457564599815552f,2.142680492554334f,10.561083772359160f,47.287822999077761f,-10.561083772359160f,-2.142680492554334f,9.457564599815552f,9.836889335492467f,-4.186548098088652f,23.347629344494308f,9.563131636124211f,18.156293323227807f,4.669525868898862f,-16.339937003214402f,-22.792166151679453f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5));
ResRA = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437298f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666395f,1.017898478437299f,-0.001029719666395f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437298f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f};
ResRA.Reshape(new ILDimension(6,5));
ResIAR = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437298f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666395f,1.017898478437299f,-0.001029719666395f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437298f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,1.327905619136139f,0.000000000000000f,-1.327905619136139f,-0.866025403784439f,0.778254311483144f,-0.759738871722649f,-0.544664566773813f,0.155650862296629f,0.605209777440927f,0.318771054537474f,1.576260766635925f,-0.139551603269622f,0.327896311183082f,0.315252153327185f,-0.071422683085144f,-0.352036125745305f,-1.576260766635925f,0.352036125745305f,0.071422683085144f,-0.315252153327185f,-0.327896311183082f,0.139551603269622f,-0.778254311483144f,-0.318771054537474f,-0.605209777440927f,-0.155650862296629f,0.544664566773813f,0.759738871722649f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_float_fcomplex_13() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f,61.000000000000000f,62.000000000000000f,63.000000000000000f,64.000000000000000f,65.000000000000000f,66.000000000000000f,67.000000000000000f,68.000000000000000f,69.000000000000000f,70.000000000000000f,71.000000000000000f,72.000000000000000f,73.000000000000000f,74.000000000000000f,75.000000000000000f,76.000000000000000f,77.000000000000000f,78.000000000000000f,79.000000000000000f,80.000000000000000f,81.000000000000000f,82.000000000000000f,83.000000000000000f,84.000000000000000f,85.000000000000000f,86.000000000000000f,87.000000000000000f,88.000000000000000f,89.000000000000000f,90.000000000000000f,91.000000000000000f,92.000000000000000f,93.000000000000000f,94.000000000000000f,95.000000000000000f,96.000000000000000f,97.000000000000000f,98.000000000000000f,99.000000000000000f,100.000000000000000f,101.000000000000000f,102.000000000000000f,103.000000000000000f,104.000000000000000f,105.000000000000000f,106.000000000000000f,107.000000000000000f,108.000000000000000f,109.000000000000000f,110.000000000000000f,111.000000000000000f,112.000000000000000f,113.000000000000000f,114.000000000000000f,115.000000000000000f,116.000000000000000f,117.000000000000000f,118.000000000000000f,119.000000000000000f,120.000000000000000f};
A.Reshape(new ILDimension(5,4,3,2));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f,61.000000000000000f,62.000000000000000f,63.000000000000000f,64.000000000000000f,65.000000000000000f,66.000000000000000f,67.000000000000000f,68.000000000000000f,69.000000000000000f,70.000000000000000f,71.000000000000000f,72.000000000000000f,73.000000000000000f,74.000000000000000f,75.000000000000000f,76.000000000000000f,77.000000000000000f,78.000000000000000f,79.000000000000000f,80.000000000000000f,81.000000000000000f,82.000000000000000f,83.000000000000000f,84.000000000000000f,85.000000000000000f,86.000000000000000f,87.000000000000000f,88.000000000000000f,89.000000000000000f,90.000000000000000f,91.000000000000000f,92.000000000000000f,93.000000000000000f,94.000000000000000f,95.000000000000000f,96.000000000000000f,97.000000000000000f,98.000000000000000f,99.000000000000000f,100.000000000000000f,101.000000000000000f,102.000000000000000f,103.000000000000000f,104.000000000000000f,105.000000000000000f,106.000000000000000f,107.000000000000000f,108.000000000000000f,109.000000000000000f,110.000000000000000f,111.000000000000000f,112.000000000000000f,113.000000000000000f,114.000000000000000f,115.000000000000000f,116.000000000000000f,117.000000000000000f,118.000000000000000f,119.000000000000000f,120.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,61.000000000000000f,62.000000000000000f,63.000000000000000f,64.000000000000000f,65.000000000000000f,81.000000000000000f,82.000000000000000f,83.000000000000000f,84.000000000000000f,85.000000000000000f,101.000000000000000f,102.000000000000000f,103.000000000000000f,104.000000000000000f,105.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{7.000000000000000f,9.000000000000000f,11.000000000000000f,13.000000000000000f,15.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,47.000000000000000f,49.000000000000000f,51.000000000000000f,53.000000000000000f,55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,87.000000000000000f,89.000000000000000f,91.000000000000000f,93.000000000000000f,95.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,127.000000000000000f,129.000000000000000f,131.000000000000000f,133.000000000000000f,135.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,167.000000000000000f,169.000000000000000f,171.000000000000000f,173.000000000000000f,175.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,207.000000000000000f,209.000000000000000f,211.000000000000000f,213.000000000000000f,215.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{18.000000000000000f,21.000000000000000f,24.000000000000000f,27.000000000000000f,30.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,78.000000000000000f,81.000000000000000f,84.000000000000000f,87.000000000000000f,90.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,138.000000000000000f,141.000000000000000f,144.000000000000000f,147.000000000000000f,150.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,198.000000000000000f,201.000000000000000f,204.000000000000000f,207.000000000000000f,210.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,258.000000000000000f,261.000000000000000f,264.000000000000000f,267.000000000000000f,270.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,318.000000000000000f,321.000000000000000f,324.000000000000000f,327.000000000000000f,330.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{34.000000000000000f,38.000000000000000f,42.000000000000000f,46.000000000000000f,50.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,114.000000000000000f,118.000000000000000f,122.000000000000000f,126.000000000000000f,130.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,194.000000000000000f,198.000000000000000f,202.000000000000000f,206.000000000000000f,210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,274.000000000000000f,278.000000000000000f,282.000000000000000f,286.000000000000000f,290.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,354.000000000000000f,358.000000000000000f,362.000000000000000f,366.000000000000000f,370.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,434.000000000000000f,438.000000000000000f,442.000000000000000f,446.000000000000000f,450.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{34.000000000000000f,38.000000000000000f,42.000000000000000f,46.000000000000000f,50.000000000000000f,-18.989356881873896f,-19.298373876248846f,-19.607390870623792f,-19.916407864998739f,-20.225424859373685f,4.489356881873896f,5.298373876248844f,6.107390870623792f,6.916407864998739f,7.725424859373685f,4.489356881873896f,5.298373876248844f,6.107390870623792f,6.916407864998739f,7.725424859373685f,-18.989356881873896f,-19.298373876248846f,-19.607390870623792f,-19.916407864998739f,-20.225424859373685f,114.000000000000000f,118.000000000000000f,122.000000000000000f,126.000000000000000f,130.000000000000000f,-25.169696769372845f,-25.478713763747791f,-25.787730758122741f,-26.096747752497688f,-26.405764746872634f,20.669696769372845f,21.478713763747791f,22.287730758122741f,23.096747752497688f,23.905764746872634f,20.669696769372845f,21.478713763747791f,22.287730758122741f,23.096747752497688f,23.905764746872634f,-25.169696769372845f,-25.478713763747791f,-25.787730758122741f,-26.096747752497688f,-26.405764746872634f,194.000000000000000f,198.000000000000000f,202.000000000000000f,206.000000000000000f,210.000000000000000f,-31.350036656871794f,-31.659053651246744f,-31.968070645621687f,-32.277087639996637f,-32.586104634371587f,36.850036656871794f,37.659053651246744f,38.468070645621687f,39.277087639996637f,40.086104634371587f,36.850036656871794f,37.659053651246744f,38.468070645621687f,39.277087639996637f,40.086104634371587f,-31.350036656871794f,-31.659053651246744f,-31.968070645621687f,-32.277087639996637f,-32.586104634371587f,274.000000000000000f,278.000000000000000f,282.000000000000000f,286.000000000000000f,290.000000000000000f,-37.530376544370746f,-37.839393538745689f,-38.148410533120639f,-38.457427527495582f,-38.766444521870532f,53.030376544370746f,53.839393538745689f,54.648410533120639f,55.457427527495582f,56.266444521870532f,53.030376544370746f,53.839393538745689f,54.648410533120639f,55.457427527495582f,56.266444521870532f,-37.530376544370746f,-37.839393538745689f,-38.148410533120639f,-38.457427527495582f,-38.766444521870532f,354.000000000000000f,358.000000000000000f,362.000000000000000f,366.000000000000000f,370.000000000000000f,-43.710716431869692f,-44.019733426244642f,-44.328750420619585f,-44.637767414994535f,-44.946784409369485f,69.210716431869685f,70.019733426244642f,70.828750420619585f,71.637767414994528f,72.446784409369485f,69.210716431869685f,70.019733426244642f,70.828750420619585f,71.637767414994528f,72.446784409369485f,-43.710716431869692f,-44.019733426244642f,-44.328750420619585f,-44.637767414994535f,-44.946784409369485f,434.000000000000000f,438.000000000000000f,442.000000000000000f,446.000000000000000f,450.000000000000000f,-49.891056319368644f,-50.200073313743587f,-50.509090308118530f,-50.818107302493488f,-51.127124296868431f,85.391056319368644f,86.200073313743587f,87.009090308118530f,87.818107302493488f,88.627124296868431f,85.391056319368644f,86.200073313743587f,87.009090308118530f,87.818107302493488f,88.627124296868431f,-49.891056319368644f,-50.200073313743587f,-50.509090308118530f,-50.818107302493488f,-51.127124296868431f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.767412836308555f,-3.718469352603709f,-4.669525868898862f,-5.620582385194015f,-6.571638901489169f,-8.281994095230607f,-8.869779347523078f,-9.457564599815552f,-10.045349852108025f,-10.633135104400498f,8.281994095230607f,8.869779347523078f,9.457564599815552f,10.045349852108025f,10.633135104400498f,2.767412836308555f,3.718469352603709f,4.669525868898862f,5.620582385194015f,6.571638901489169f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.788543162211624f,-22.739599678506778f,-23.690656194801932f,-24.641712711097085f,-25.592769227392239f,-20.037699141080068f,-20.625484393372542f,-21.213269645665015f,-21.801054897957489f,-22.388840150249962f,20.037699141080068f,20.625484393372542f,21.213269645665015f,21.801054897957489f,22.388840150249962f,21.788543162211624f,22.739599678506778f,23.690656194801932f,24.641712711097085f,25.592769227392239f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.809673488114697f,-41.760730004409851f,-42.711786520705004f,-43.662843037000158f,-44.613899553295312f,-31.793404186929532f,-32.381189439222005f,-32.968974691514475f,-33.556759943806952f,-34.144545196099422f,31.793404186929532f,32.381189439222005f,32.968974691514475f,33.556759943806952f,34.144545196099422f,40.809673488114697f,41.760730004409851f,42.711786520705004f,43.662843037000158f,44.613899553295312f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-59.830803814017770f,-60.781860330312924f,-61.732916846608070f,-62.683973362903224f,-63.635029879198378f,-43.549109232778996f,-44.136894485071466f,-44.724679737363942f,-45.312464989656412f,-45.900250241948889f,43.549109232778996f,44.136894485071466f,44.724679737363942f,45.312464989656412f,45.900250241948889f,59.830803814017770f,60.781860330312924f,61.732916846608070f,62.683973362903224f,63.635029879198378f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-78.851934139920829f,-79.802990656215982f,-80.754047172511136f,-81.705103688806290f,-82.656160205101443f,-55.304814278628456f,-55.892599530920933f,-56.480384783213402f,-57.068170035505879f,-57.655955287798349f,55.304814278628456f,55.892599530920933f,56.480384783213402f,57.068170035505879f,57.655955287798349f,78.851934139920829f,79.802990656215982f,80.754047172511136f,81.705103688806290f,82.656160205101443f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-97.873064465823902f,-98.824120982119055f,-99.775177498414209f,-100.726234014709360f,-101.677290531004520f,-67.060519324477923f,-67.648304576770386f,-68.236089829062863f,-68.823875081355339f,-69.411660333647816f,67.060519324477923f,67.648304576770386f,68.236089829062863f,68.823875081355339f,69.411660333647816f,97.873064465823902f,98.824120982119055f,99.775177498414209f,100.726234014709360f,101.677290531004520f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f,61.000000000000000f,66.000000000000000f,71.000000000000000f,76.000000000000000f,81.000000000000000f,86.000000000000000f,91.000000000000000f,96.000000000000000f,101.000000000000000f,106.000000000000000f,111.000000000000000f,116.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f,61.000000000000000f,81.000000000000000f,101.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3,2));
ResRA = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f,61.000000000000000f,81.000000000000000f,101.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,3,2));
ResIAR = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f,61.000000000000000f,81.000000000000000f,101.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{7.000000000000000f,-5.000000000000000f,47.000000000000000f,-5.000000000000000f,87.000000000000000f,-5.000000000000000f,127.000000000000000f,-5.000000000000000f,167.000000000000000f,-5.000000000000000f,207.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3,2));
ResRA = new float[]{3.500000000000000f,-2.500000000000000f,23.500000000000000f,-2.500000000000000f,43.500000000000000f,-2.500000000000000f,63.500000000000000f,-2.500000000000000f,83.500000000000000f,-2.500000000000000f,103.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,3,2));
ResIAR = new float[]{3.500000000000000f,-2.500000000000000f,23.500000000000000f,-2.500000000000000f,43.500000000000000f,-2.500000000000000f,63.500000000000000f,-2.500000000000000f,83.500000000000000f,-2.500000000000000f,103.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{18.000000000000000f,-7.500000000000000f,-7.500000000000000f,78.000000000000000f,-7.500000000000000f,-7.500000000000000f,138.000000000000000f,-7.500000000000000f,-7.500000000000000f,198.000000000000000f,-7.500000000000000f,-7.500000000000000f,258.000000000000000f,-7.500000000000000f,-7.500000000000000f,318.000000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3,2));
ResRA = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f,26.000000000000000f,-2.500000000000000f,-2.500000000000000f,46.000000000000000f,-2.500000000000000f,-2.500000000000000f,66.000000000000000f,-2.500000000000000f,-2.500000000000000f,86.000000000000000f,-2.500000000000000f,-2.500000000000000f,106.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,3,3,2));
ResIAR = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f,26.000000000000000f,-2.500000000000000f,-2.500000000000000f,46.000000000000000f,-2.500000000000000f,-2.500000000000000f,66.000000000000000f,-2.500000000000000f,-2.500000000000000f,86.000000000000000f,-2.500000000000000f,-2.500000000000000f,106.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{34.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,114.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,194.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,274.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,354.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,434.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3,2));
ResRA = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,28.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,48.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,68.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,88.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,108.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,4,3,2));
ResIAR = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,28.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,48.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,68.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,88.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,108.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{34.000000000000000f,-18.989356881873896f,4.489356881873896f,4.489356881873896f,-18.989356881873896f,114.000000000000000f,-25.169696769372845f,20.669696769372845f,20.669696769372845f,-25.169696769372845f,194.000000000000000f,-31.350036656871794f,36.850036656871794f,36.850036656871794f,-31.350036656871794f,274.000000000000000f,-37.530376544370746f,53.030376544370746f,53.030376544370746f,-37.530376544370746f,354.000000000000000f,-43.710716431869692f,69.210716431869685f,69.210716431869685f,-43.710716431869692f,434.000000000000000f,-49.891056319368644f,85.391056319368644f,85.391056319368644f,-49.891056319368644f};
ResultI = new float[]{0.000000000000000f,-2.767412836308555f,-8.281994095230607f,8.281994095230607f,2.767412836308555f,0.000000000000000f,-21.788543162211624f,-20.037699141080068f,20.037699141080068f,21.788543162211624f,0.000000000000000f,-40.809673488114697f,-31.793404186929532f,31.793404186929532f,40.809673488114697f,0.000000000000000f,-59.830803814017770f,-43.549109232778996f,43.549109232778996f,59.830803814017770f,0.000000000000000f,-78.851934139920829f,-55.304814278628456f,55.304814278628456f,78.851934139920829f,0.000000000000000f,-97.873064465823902f,-67.060519324477923f,67.060519324477923f,97.873064465823902f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3,2));
ResRA = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f,22.800000000000001f,-5.033939353874569f,4.133939353874569f,4.133939353874569f,-5.033939353874569f,38.799999999999997f,-6.270007331374359f,7.370007331374358f,7.370007331374358f,-6.270007331374359f,54.799999999999997f,-7.506075308874149f,10.606075308874150f,10.606075308874150f,-7.506075308874149f,70.799999999999997f,-8.742143286373938f,13.842143286373936f,13.842143286373936f,-8.742143286373938f,86.799999999999997f,-9.978211263873728f,17.078211263873730f,17.078211263873730f,-9.978211263873728f};
ResRA.Reshape(new ILDimension(1,5,3,2));
ResIAR = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f,22.800000000000001f,-5.033939353874569f,4.133939353874569f,4.133939353874569f,-5.033939353874569f,38.799999999999997f,-6.270007331374359f,7.370007331374358f,7.370007331374358f,-6.270007331374359f,54.799999999999997f,-7.506075308874149f,10.606075308874150f,10.606075308874150f,-7.506075308874149f,70.799999999999997f,-8.742143286373938f,13.842143286373936f,13.842143286373936f,-8.742143286373938f,86.799999999999997f,-9.978211263873728f,17.078211263873730f,17.078211263873730f,-9.978211263873728f};
ResIAI = new float[]{0.000000000000000f,0.553482567261711f,1.656398819046121f,-1.656398819046121f,-0.553482567261711f,0.000000000000000f,4.357708632442325f,4.007539828216014f,-4.007539828216014f,-4.357708632442325f,0.000000000000000f,8.161934697622939f,6.358680837385906f,-6.358680837385906f,-8.161934697622939f,0.000000000000000f,11.966160762803554f,8.709821846555800f,-8.709821846555800f,-11.966160762803554f,0.000000000000000f,15.770386827984165f,11.060962855725691f,-11.060962855725691f,-15.770386827984165f,0.000000000000000f,19.574612893164780f,13.412103864895585f,-13.412103864895585f,-19.574612893164780f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f,123.000000000000000f,-1.000000000000000f,133.000000000000000f,-1.000000000000000f,143.000000000000000f,-1.000000000000000f,153.000000000000000f,-1.000000000000000f,163.000000000000000f,-1.000000000000000f,173.000000000000000f,-1.000000000000000f,183.000000000000000f,-1.000000000000000f,193.000000000000000f,-1.000000000000000f,203.000000000000000f,-1.000000000000000f,213.000000000000000f,-1.000000000000000f,223.000000000000000f,-1.000000000000000f,233.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,123.000000000000000f,-1.000000000000000f,163.000000000000000f,-1.000000000000000f,203.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3,2));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f,61.500000000000000f,-0.500000000000000f,81.500000000000000f,-0.500000000000000f,101.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,3,2));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f,61.500000000000000f,-0.500000000000000f,81.500000000000000f,-0.500000000000000f,101.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{16.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,96.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,176.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,256.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,336.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,416.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3,2));
ResRA = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,44.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,64.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,84.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,104.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2,3,2));
ResIAR = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,44.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,64.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,84.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,104.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{39.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,159.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,279.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,399.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,519.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,639.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,3,2));
ResRA = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,46.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,66.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,86.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,106.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3,3,2));
ResIAR = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,46.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,66.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,86.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,106.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,232.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,392.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,552.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,712.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,872.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3,2));
ResRA = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,29.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,49.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,69.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,89.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,109.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4,3,2));
ResIAR = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,29.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,49.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,69.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,89.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,109.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-38.287730758122741f,0.309016994374950f,9.787730758122740f,-0.809016994374948f,9.787730758122740f,-0.809016994374948f,-38.287730758122741f,0.309016994374950f,232.000000000000000f,-4.000000000000000f,-50.648410533120639f,0.309016994374947f,42.148410533120639f,-0.809016994374947f,42.148410533120639f,-0.809016994374947f,-50.648410533120639f,0.309016994374947f,392.000000000000000f,-4.000000000000000f,-63.009090308118537f,0.309016994374950f,74.509090308118544f,-0.809016994374950f,74.509090308118544f,-0.809016994374950f,-63.009090308118537f,0.309016994374950f,552.000000000000000f,-4.000000000000000f,-75.369770083116435f,0.309016994374943f,106.869770083116440f,-0.809016994374943f,106.869770083116440f,-0.809016994374943f,-75.369770083116435f,0.309016994374943f,712.000000000000000f,-4.000000000000000f,-87.730449858114326f,0.309016994374950f,139.230449858114330f,-0.809016994374957f,139.230449858114330f,-0.809016994374957f,-87.730449858114326f,0.309016994374950f,872.000000000000000f,-4.000000000000000f,-100.091129633112230f,0.309016994374943f,171.591129633112250f,-0.809016994374943f,171.591129633112250f,-0.809016994374943f,-100.091129633112230f,0.309016994374943f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-6.485882188912264f,0.951056516295154f,-17.151773442753687f,0.587785252292472f,17.151773442753687f,-0.587785252292472f,6.485882188912264f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-44.528142840718402f,0.951056516295154f,-40.663183534452614f,0.587785252292473f,40.663183534452614f,-0.587785252292473f,44.528142840718402f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-82.570403492524548f,0.951056516295154f,-64.174593626151534f,0.587785252292473f,64.174593626151534f,-0.587785252292473f,82.570403492524548f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-120.612664144330690f,0.951056516295154f,-87.686003717850468f,0.587785252292470f,87.686003717850468f,-0.587785252292470f,120.612664144330690f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-158.654924796136810f,0.951056516295154f,-111.197413809549390f,0.587785252292477f,111.197413809549390f,-0.587785252292477f,158.654924796136810f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-196.697185447942960f,0.951056516295154f,-134.708823901248310f,0.587785252292463f,134.708823901248310f,-0.587785252292463f,196.697185447942960f,-0.951056516295154f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,3,2));
ResRA = new float[]{7.199999999999999f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f,23.200000000000003f,-0.400000000000000f,-5.064841053312064f,0.030901699437495f,4.214841053312064f,-0.080901699437495f,4.214841053312064f,-0.080901699437495f,-5.064841053312064f,0.030901699437495f,39.200000000000003f,-0.400000000000002f,-6.300909030811853f,0.030901699437495f,7.450909030811854f,-0.080901699437495f,7.450909030811854f,-0.080901699437495f,-6.300909030811853f,0.030901699437495f,55.200000000000003f,-0.400000000000002f,-7.536977008311643f,0.030901699437494f,10.686977008311644f,-0.080901699437494f,10.686977008311644f,-0.080901699437494f,-7.536977008311643f,0.030901699437494f,71.199999999999989f,-0.399999999999999f,-8.773044985811433f,0.030901699437495f,13.923044985811433f,-0.080901699437496f,13.923044985811433f,-0.080901699437496f,-8.773044985811433f,0.030901699437495f,87.199999999999989f,-0.399999999999999f,-10.009112963311223f,0.030901699437495f,17.159112963311223f,-0.080901699437494f,17.159112963311223f,-0.080901699437494f,-10.009112963311223f,0.030901699437495f};
ResRA.Reshape(new ILDimension(2,5,3,2));
ResIAR = new float[]{7.199999999999999f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f,23.200000000000003f,-0.400000000000000f,-5.064841053312064f,0.030901699437495f,4.214841053312064f,-0.080901699437495f,4.214841053312064f,-0.080901699437495f,-5.064841053312064f,0.030901699437495f,39.200000000000003f,-0.400000000000002f,-6.300909030811853f,0.030901699437495f,7.450909030811854f,-0.080901699437495f,7.450909030811854f,-0.080901699437495f,-6.300909030811853f,0.030901699437495f,55.200000000000003f,-0.400000000000002f,-7.536977008311643f,0.030901699437494f,10.686977008311644f,-0.080901699437494f,10.686977008311644f,-0.080901699437494f,-7.536977008311643f,0.030901699437494f,71.199999999999989f,-0.399999999999999f,-8.773044985811433f,0.030901699437495f,13.923044985811433f,-0.080901699437496f,13.923044985811433f,-0.080901699437496f,-8.773044985811433f,0.030901699437495f,87.199999999999989f,-0.399999999999999f,-10.009112963311223f,0.030901699437495f,17.159112963311223f,-0.080901699437494f,17.159112963311223f,-0.080901699437494f,-10.009112963311223f,0.030901699437495f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.648588218891226f,-0.095105651629515f,1.715177344275368f,-0.058778525229247f,-1.715177344275368f,0.058778525229247f,-0.648588218891226f,0.095105651629515f,0.000000000000000f,0.000000000000000f,4.452814284071840f,-0.095105651629515f,4.066318353445261f,-0.058778525229247f,-4.066318353445261f,0.058778525229247f,-4.452814284071840f,0.095105651629515f,0.000000000000000f,0.000000000000000f,8.257040349252454f,-0.095105651629515f,6.417459362615153f,-0.058778525229247f,-6.417459362615153f,0.058778525229247f,-8.257040349252454f,0.095105651629515f,0.000000000000000f,0.000000000000000f,12.061266414433069f,-0.095105651629515f,8.768600371785047f,-0.058778525229247f,-8.768600371785047f,0.058778525229247f,-12.061266414433069f,0.095105651629515f,0.000000000000000f,0.000000000000000f,15.865492479613682f,-0.095105651629516f,11.119741380954938f,-0.058778525229248f,-11.119741380954938f,0.058778525229248f,-15.865492479613682f,0.095105651629516f,0.000000000000000f,0.000000000000000f,19.669718544794293f,-0.095105651629515f,13.470882390124832f,-0.058778525229246f,-13.470882390124832f,0.058778525229246f,-19.669718544794293f,0.095105651629515f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f,186.000000000000000f,-1.500000000000000f,-1.500000000000000f,201.000000000000000f,-1.500000000000000f,-1.500000000000000f,216.000000000000000f,-1.500000000000000f,-1.500000000000000f,231.000000000000000f,-1.500000000000000f,-1.500000000000000f,246.000000000000000f,-1.500000000000000f,-1.500000000000000f,261.000000000000000f,-1.500000000000000f,-1.500000000000000f,276.000000000000000f,-1.500000000000000f,-1.500000000000000f,291.000000000000000f,-1.500000000000000f,-1.500000000000000f,306.000000000000000f,-1.500000000000000f,-1.500000000000000f,321.000000000000000f,-1.500000000000000f,-1.500000000000000f,336.000000000000000f,-1.500000000000000f,-1.500000000000000f,351.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,186.000000000000000f,-1.500000000000000f,-1.500000000000000f,246.000000000000000f,-1.500000000000000f,-1.500000000000000f,306.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3,2));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f,62.000000000000000f,-0.500000000000000f,-0.500000000000000f,82.000000000000000f,-0.500000000000000f,-0.500000000000000f,102.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,3,2));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f,62.000000000000000f,-0.500000000000000f,-0.500000000000000f,82.000000000000000f,-0.500000000000000f,-0.500000000000000f,102.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{27.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,147.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,267.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,387.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,507.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,627.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3,2));
ResRA = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,44.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,64.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,84.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,104.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2,3,2));
ResIAR = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,44.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,64.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,84.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,104.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{63.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,243.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,423.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,603.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,783.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,963.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,3,2));
ResRA = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,67.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,87.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,107.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3,3,2));
ResIAR = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,67.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,87.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,107.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,354.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,594.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,834.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,1074.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,1314.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3,2));
ResRA = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,49.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,69.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,89.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,109.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,4,3,2));
ResIAR = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,49.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,69.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,89.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,109.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-57.895121628746530f,1.287164595108754f,-0.360113611983910f,15.895121628746532f,-0.704488531107295f,-1.722562452017550f,15.895121628746532f,-1.722562452017550f,-0.704488531107295f,-57.895121628746530f,-0.360113611983910f,1.287164595108754f,354.000000000000000f,-6.000000000000000f,-6.000000000000000f,-76.436141291243374f,1.287164595108754f,-0.360113611983910f,64.436141291243374f,-0.704488531107294f,-1.722562452017549f,64.436141291243374f,-1.722562452017549f,-0.704488531107294f,-76.436141291243374f,-0.360113611983910f,1.287164595108754f,594.000000000000000f,-6.000000000000000f,-6.000000000000000f,-94.977160953740224f,1.287164595108754f,-0.360113611983910f,112.977160953740220f,-0.704488531107297f,-1.722562452017546f,112.977160953740220f,-1.722562452017546f,-0.704488531107297f,-94.977160953740224f,-0.360113611983910f,1.287164595108754f,834.000000000000000f,-6.000000000000000f,-6.000000000000000f,-113.518180616237060f,1.287164595108740f,-0.360113611983911f,161.518180616237060f,-0.704488531107284f,-1.722562452017545f,161.518180616237060f,-1.722562452017545f,-0.704488531107284f,-113.518180616237060f,-0.360113611983911f,1.287164595108740f,1074.000000000000000f,-6.000000000000000f,-6.000000000000000f,-132.059200278733930f,1.287164595108754f,-0.360113611983910f,210.059200278733900f,-0.704488531107297f,-1.722562452017546f,210.059200278733900f,-1.722562452017546f,-0.704488531107297f,-132.059200278733930f,-0.360113611983910f,1.287164595108754f,1314.000000000000000f,-6.000000000000000f,-6.000000000000000f,-150.600219941230760f,1.287164595108747f,-0.360113611983917f,258.600219941230760f,-0.704488531107277f,-1.722562452017538f,258.600219941230760f,-1.722562452017538f,-0.704488531107277f,-150.600219941230760f,-0.360113611983917f,1.287164595108747f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,-11.155408057811126f,1.158968207112914f,1.694201341772547f,-26.609338042569235f,1.582307147660746f,0.181048609216671f,26.609338042569235f,-0.181048609216671f,-1.582307147660746f,11.155408057811126f,-1.694201341772547f,-1.158968207112914f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-68.218799035520334f,1.158968207112911f,1.694201341772550f,-61.876453180117622f,1.582307147660747f,0.181048609216669f,61.876453180117622f,-0.181048609216669f,-1.582307147660747f,68.218799035520334f,-1.694201341772550f,-1.158968207112911f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-125.282190013229550f,1.158968207112917f,1.694201341772544f,-97.143568317666023f,1.582307147660745f,0.181048609216679f,97.143568317666023f,-0.181048609216679f,-1.582307147660745f,125.282190013229550f,-1.694201341772544f,-1.158968207112917f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-182.345580990938770f,1.158968207112911f,1.694201341772550f,-132.410683455214410f,1.582307147660747f,0.181048609216669f,132.410683455214410f,-0.181048609216669f,-1.582307147660747f,182.345580990938770f,-1.694201341772550f,-1.158968207112911f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-239.408971968647960f,1.158968207112917f,1.694201341772544f,-167.677798592762770f,1.582307147660741f,0.181048609216675f,167.677798592762770f,-0.181048609216675f,-1.582307147660741f,239.408971968647960f,-1.694201341772544f,-1.158968207112917f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-296.472362946357180f,1.158968207112917f,1.694201341772544f,-202.944913730311160f,1.582307147660727f,0.181048609216661f,202.944913730311160f,-0.181048609216661f,-1.582307147660727f,296.472362946357180f,-1.694201341772544f,-1.158968207112917f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,3,2));
ResRA = new float[]{7.600000000000001f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132260f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132260f,0.085810973007250f,23.599999999999998f,-0.400000000000000f,-0.400000000000000f,-5.095742752749558f,0.085810973007250f,-0.024007574132261f,4.295742752749558f,-0.046965902073820f,-0.114837496801170f,4.295742752749558f,-0.114837496801170f,-0.046965902073820f,-5.095742752749558f,-0.024007574132261f,0.085810973007250f,39.600000000000001f,-0.400000000000001f,-0.400000000000001f,-6.331810730249348f,0.085810973007250f,-0.024007574132261f,7.531810730249347f,-0.046965902073820f,-0.114837496801170f,7.531810730249347f,-0.114837496801170f,-0.046965902073820f,-6.331810730249348f,-0.024007574132261f,0.085810973007250f,55.600000000000001f,-0.400000000000001f,-0.400000000000001f,-7.567878707749138f,0.085810973007250f,-0.024007574132261f,10.767878707749139f,-0.046965902073819f,-0.114837496801170f,10.767878707749139f,-0.114837496801170f,-0.046965902073819f,-7.567878707749138f,-0.024007574132261f,0.085810973007250f,71.600000000000009f,-0.400000000000001f,-0.400000000000001f,-8.803946685248928f,0.085810973007250f,-0.024007574132261f,14.003946685248929f,-0.046965902073821f,-0.114837496801171f,14.003946685248929f,-0.114837496801171f,-0.046965902073821f,-8.803946685248928f,-0.024007574132261f,0.085810973007250f,87.600000000000009f,-0.400000000000001f,-0.400000000000001f,-10.040014662748717f,0.085810973007251f,-0.024007574132262f,17.240014662748717f,-0.046965902073818f,-0.114837496801169f,17.240014662748717f,-0.114837496801169f,-0.046965902073818f,-10.040014662748717f,-0.024007574132262f,0.085810973007251f};
ResRA.Reshape(new ILDimension(3,5,3,2));
ResIAR = new float[]{7.600000000000001f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132260f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132260f,0.085810973007250f,23.599999999999998f,-0.400000000000000f,-0.400000000000000f,-5.095742752749558f,0.085810973007250f,-0.024007574132261f,4.295742752749558f,-0.046965902073820f,-0.114837496801170f,4.295742752749558f,-0.114837496801170f,-0.046965902073820f,-5.095742752749558f,-0.024007574132261f,0.085810973007250f,39.600000000000001f,-0.400000000000001f,-0.400000000000001f,-6.331810730249348f,0.085810973007250f,-0.024007574132261f,7.531810730249347f,-0.046965902073820f,-0.114837496801170f,7.531810730249347f,-0.114837496801170f,-0.046965902073820f,-6.331810730249348f,-0.024007574132261f,0.085810973007250f,55.600000000000001f,-0.400000000000001f,-0.400000000000001f,-7.567878707749138f,0.085810973007250f,-0.024007574132261f,10.767878707749139f,-0.046965902073819f,-0.114837496801170f,10.767878707749139f,-0.114837496801170f,-0.046965902073819f,-7.567878707749138f,-0.024007574132261f,0.085810973007250f,71.600000000000009f,-0.400000000000001f,-0.400000000000001f,-8.803946685248928f,0.085810973007250f,-0.024007574132261f,14.003946685248929f,-0.046965902073821f,-0.114837496801171f,14.003946685248929f,-0.114837496801171f,-0.046965902073821f,-8.803946685248928f,-0.024007574132261f,0.085810973007250f,87.600000000000009f,-0.400000000000001f,-0.400000000000001f,-10.040014662748717f,0.085810973007251f,-0.024007574132262f,17.240014662748717f,-0.046965902073818f,-0.114837496801169f,17.240014662748717f,-0.114837496801169f,-0.046965902073818f,-10.040014662748717f,-0.024007574132262f,0.085810973007251f};
ResIAI = new float[]{0.000000000000000f,-0.230940107675850f,0.230940107675850f,0.743693870520742f,-0.077264547140861f,-0.112946756118170f,1.773955869504616f,-0.105487143177383f,-0.012069907281111f,-1.773955869504616f,0.012069907281111f,0.105487143177383f,-0.743693870520742f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,4.547919935701356f,-0.077264547140861f,-0.112946756118170f,4.125096878674508f,-0.105487143177383f,-0.012069907281111f,-4.125096878674508f,0.012069907281111f,0.105487143177383f,-4.547919935701356f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,8.352146000881971f,-0.077264547140861f,-0.112946756118170f,6.476237887844401f,-0.105487143177383f,-0.012069907281112f,-6.476237887844401f,0.012069907281112f,0.105487143177383f,-8.352146000881971f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,12.156372066062582f,-0.077264547140860f,-0.112946756118170f,8.827378897014294f,-0.105487143177384f,-0.012069907281111f,-8.827378897014294f,0.012069907281111f,0.105487143177384f,-12.156372066062582f,0.112946756118170f,0.077264547140860f,0.000000000000000f,-0.230940107675854f,0.230940107675854f,15.960598131243197f,-0.077264547140861f,-0.112946756118170f,11.178519906184187f,-0.105487143177383f,-0.012069907281112f,-11.178519906184187f,0.012069907281112f,0.105487143177383f,-15.960598131243197f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675854f,0.230940107675854f,19.764824196423813f,-0.077264547140861f,-0.112946756118170f,13.529660915354079f,-0.105487143177383f,-0.012069907281111f,-13.529660915354079f,0.012069907281111f,0.105487143177383f,-19.764824196423813f,0.112946756118170f,0.077264547140861f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,250.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,270.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,290.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,310.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,330.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,350.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,370.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,390.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,410.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,430.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,450.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,470.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,250.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,330.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,410.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3,2));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,62.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,82.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,102.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,3,2));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,62.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,82.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,102.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{40.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,200.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,360.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,520.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,680.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,840.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,3,2));
ResRA = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,65.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,85.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,105.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2,3,2));
ResIAR = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,65.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,85.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,105.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{90.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,330.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,570.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,810.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1050.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1290.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,3,2));
ResRA = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,67.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,87.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,107.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,3,3,2));
ResIAR = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,67.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,87.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,107.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,480.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,800.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1120.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1440.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1760.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3,2));
ResRA = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,70.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,90.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,110.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,4,3,2));
ResIAR = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,70.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,90.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,110.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-77.811529493745269f,2.520147021340203f,0.618033988749893f,-1.284079043840410f,22.811529493745269f,-0.442463484164950f,-1.618033988749895f,-2.793604493334843f,22.811529493745269f,-2.793604493334843f,-1.618033988749895f,-0.442463484164950f,-77.811529493745269f,-1.284079043840410f,0.618033988749893f,2.520147021340203f,480.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-102.532889043741060f,2.520147021340204f,0.618033988749900f,-1.284079043840411f,87.532889043741065f,-0.442463484164950f,-1.618033988749900f,-2.793604493334843f,87.532889043741065f,-2.793604493334843f,-1.618033988749900f,-0.442463484164950f,-102.532889043741060f,-1.284079043840411f,0.618033988749900f,2.520147021340204f,800.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-127.254248593736860f,2.520147021340200f,0.618033988749900f,-1.284079043840414f,152.254248593736860f,-0.442463484164946f,-1.618033988749914f,-2.793604493334840f,152.254248593736860f,-2.793604493334840f,-1.618033988749914f,-0.442463484164946f,-127.254248593736860f,-1.284079043840414f,0.618033988749900f,2.520147021340200f,1120.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-151.975608143732670f,2.520147021340193f,0.618033988749886f,-1.284079043840407f,216.975608143732670f,-0.442463484164946f,-1.618033988749886f,-2.793604493334840f,216.975608143732670f,-2.793604493334840f,-1.618033988749886f,-0.442463484164946f,-151.975608143732670f,-1.284079043840407f,0.618033988749886f,2.520147021340193f,1440.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-176.696967693728450f,2.520147021340200f,0.618033988749886f,-1.284079043840414f,281.696967693728420f,-0.442463484164954f,-1.618033988749886f,-2.793604493334847f,281.696967693728420f,-2.793604493334847f,-1.618033988749886f,-0.442463484164954f,-176.696967693728450f,-1.284079043840414f,0.618033988749886f,2.520147021340200f,1760.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-201.418327243724260f,2.520147021340193f,0.618033988749900f,-1.284079043840421f,346.418327243724260f,-0.442463484164932f,-1.618033988749914f,-2.793604493334840f,346.418327243724260f,-2.793604493334840f,-1.618033988749914f,-0.442463484164932f,-201.418327243724260f,-1.284079043840421f,0.618033988749900f,2.520147021340193f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-16.775990443005142f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-36.654687894677259f,2.793604493334840f,1.175570504584947f,-0.442463484164950f,36.654687894677259f,0.442463484164950f,-1.175570504584947f,-2.793604493334840f,16.775990443005142f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-92.860511746617419f,1.284079043840411f,1.902113032590307f,2.520147021340204f,-83.677508078075107f,2.793604493334843f,1.175570504584947f,-0.442463484164950f,83.677508078075107f,0.442463484164950f,-1.175570504584947f,-2.793604493334843f,92.860511746617419f,-2.520147021340204f,-1.902113032590307f,-1.284079043840411f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-168.945033050229710f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-130.700328261472980f,2.793604493334836f,1.175570504584940f,-0.442463484164950f,130.700328261472980f,0.442463484164950f,-1.175570504584940f,-2.793604493334836f,168.945033050229710f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-245.029554353842000f,1.284079043840407f,1.902113032590307f,2.520147021340193f,-177.723148444870820f,2.793604493334840f,1.175570504584954f,-0.442463484164946f,177.723148444870820f,0.442463484164946f,-1.175570504584954f,-2.793604493334840f,245.029554353842000f,-2.520147021340193f,-1.902113032590307f,-1.284079043840407f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-321.114075657454240f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-224.745968628268680f,2.793604493334833f,1.175570504584954f,-0.442463484164939f,224.745968628268680f,0.442463484164939f,-1.175570504584954f,-2.793604493334833f,321.114075657454240f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-397.198596961066530f,1.284079043840407f,1.902113032590307f,2.520147021340208f,-271.768788811666470f,2.793604493334840f,1.175570504584954f,-0.442463484164961f,271.768788811666470f,0.442463484164961f,-1.175570504584954f,-2.793604493334840f,397.198596961066530f,-2.520147021340208f,-1.902113032590307f,-1.284079043840407f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,3,2));
ResRA = new float[]{7.999999999999999f,-0.400000000000000f,-0.399999999999999f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,24.000000000000000f,-0.399999999999999f,-0.399999999999999f,-0.399999999999999f,-5.126644452187053f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,4.376644452187053f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,4.376644452187053f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-5.126644452187053f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,40.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-6.362712429686843f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,7.612712429686843f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,7.612712429686843f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-6.362712429686843f,-0.064203952192021f,0.030901699437495f,0.126007351067010f,56.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-7.598780407186633f,0.126007351067010f,0.030901699437494f,-0.064203952192020f,10.848780407186634f,-0.022123174208247f,-0.080901699437494f,-0.139680224666742f,10.848780407186634f,-0.139680224666742f,-0.080901699437494f,-0.022123174208247f,-7.598780407186633f,-0.064203952192020f,0.030901699437494f,0.126007351067010f,72.000000000000000f,-0.400000000000002f,-0.400000000000006f,-0.400000000000002f,-8.834848384686422f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,14.084848384686422f,-0.022123174208248f,-0.080901699437495f,-0.139680224666743f,14.084848384686422f,-0.139680224666743f,-0.080901699437495f,-0.022123174208248f,-8.834848384686422f,-0.064203952192021f,0.030901699437495f,0.126007351067010f,88.000000000000000f,-0.400000000000002f,-0.400000000000006f,-0.400000000000002f,-10.070916362186212f,0.126007351067011f,0.030901699437495f,-0.064203952192021f,17.320916362186214f,-0.022123174208247f,-0.080901699437494f,-0.139680224666742f,17.320916362186214f,-0.139680224666742f,-0.080901699437494f,-0.022123174208247f,-10.070916362186212f,-0.064203952192021f,0.030901699437495f,0.126007351067011f};
ResRA.Reshape(new ILDimension(4,5,3,2));
ResIAR = new float[]{7.999999999999999f,-0.400000000000000f,-0.399999999999999f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,24.000000000000000f,-0.399999999999999f,-0.399999999999999f,-0.399999999999999f,-5.126644452187053f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,4.376644452187053f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,4.376644452187053f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-5.126644452187053f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,40.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-6.362712429686843f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,7.612712429686843f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,7.612712429686843f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-6.362712429686843f,-0.064203952192021f,0.030901699437495f,0.126007351067010f,56.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-7.598780407186633f,0.126007351067010f,0.030901699437494f,-0.064203952192020f,10.848780407186634f,-0.022123174208247f,-0.080901699437494f,-0.139680224666742f,10.848780407186634f,-0.139680224666742f,-0.080901699437494f,-0.022123174208247f,-7.598780407186633f,-0.064203952192020f,0.030901699437494f,0.126007351067010f,72.000000000000000f,-0.400000000000002f,-0.400000000000006f,-0.400000000000002f,-8.834848384686422f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,14.084848384686422f,-0.022123174208248f,-0.080901699437495f,-0.139680224666743f,14.084848384686422f,-0.139680224666743f,-0.080901699437495f,-0.022123174208248f,-8.834848384686422f,-0.064203952192021f,0.030901699437495f,0.126007351067010f,88.000000000000000f,-0.400000000000002f,-0.400000000000006f,-0.400000000000002f,-10.070916362186212f,0.126007351067011f,0.030901699437495f,-0.064203952192021f,17.320916362186214f,-0.022123174208247f,-0.080901699437494f,-0.139680224666742f,17.320916362186214f,-0.139680224666742f,-0.080901699437494f,-0.022123174208247f,-10.070916362186212f,-0.064203952192021f,0.030901699437495f,0.126007351067011f};
ResIAI = new float[]{0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,0.838799522150257f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,1.832734394733863f,-0.139680224666742f,-0.058778525229247f,0.022123174208248f,-1.832734394733863f,-0.022123174208248f,0.058778525229247f,0.139680224666742f,-0.838799522150257f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.399999999999999f,0.000000000000000f,0.399999999999999f,4.643025587330872f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,4.183875403903755f,-0.139680224666742f,-0.058778525229247f,0.022123174208247f,-4.183875403903755f,-0.022123174208247f,0.058778525229247f,0.139680224666742f,-4.643025587330872f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,8.447251652511485f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,6.535016413073648f,-0.139680224666742f,-0.058778525229248f,0.022123174208247f,-6.535016413073648f,-0.022123174208247f,0.058778525229248f,0.139680224666742f,-8.447251652511485f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,12.251477717692099f,-0.064203952192020f,-0.095105651629515f,-0.126007351067010f,8.886157422243542f,-0.139680224666742f,-0.058778525229247f,0.022123174208247f,-8.886157422243542f,-0.022123174208247f,0.058778525229247f,0.139680224666742f,-12.251477717692099f,0.126007351067010f,0.095105651629515f,0.064203952192020f,0.000000000000000f,-0.400000000000002f,0.000000000000000f,0.400000000000002f,16.055703782872712f,-0.064203952192021f,-0.095105651629516f,-0.126007351067011f,11.237298431413434f,-0.139680224666741f,-0.058778525229249f,0.022123174208247f,-11.237298431413434f,-0.022123174208247f,0.058778525229249f,0.139680224666741f,-16.055703782872712f,0.126007351067011f,0.095105651629516f,0.064203952192021f,0.000000000000000f,-0.400000000000002f,0.000000000000000f,0.400000000000002f,19.859929848053326f,-0.064203952192021f,-0.095105651629517f,-0.126007351067011f,13.588439440583326f,-0.139680224666742f,-0.058778525229247f,0.022123174208248f,-13.588439440583326f,-0.022123174208248f,0.058778525229247f,0.139680224666742f,-19.859929848053326f,0.126007351067011f,0.095105651629517f,0.064203952192021f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,315.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,340.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,365.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,390.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,415.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,440.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,465.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,490.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,515.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,540.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,565.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,590.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,315.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,415.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,515.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3,2));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,63.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,83.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,103.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(5,1,3,2));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,63.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,83.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,103.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,255.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,455.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,655.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,855.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1055.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3,2));
ResRA = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,65.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,85.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,105.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,2,3,2));
ResIAR = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,65.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,85.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,105.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{120.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,420.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,720.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1020.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1320.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1620.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3,2));
ResRA = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,68.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,88.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,108.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,3,3,2));
ResIAR = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,68.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,88.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,108.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1010.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1410.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1810.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3,2));
ResRA = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,70.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,90.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,110.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,4,3,2));
ResIAR = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,70.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,90.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,110.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-98.036954353118972f,4.045084971874739f,1.545084971874741f,0.000000000000003f,-2.499999999999996f,30.536954353118958f,-0.000000000000002f,-1.545084971874738f,-2.500000000000001f,-4.045084971874740f,30.536954353118958f,-4.045084971874740f,-2.500000000000001f,-1.545084971874738f,-0.000000000000002f,-98.036954353118972f,-2.499999999999996f,0.000000000000003f,1.545084971874741f,4.045084971874739f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-128.938653790613700f,4.045084971874736f,1.545084971874737f,-0.000000000000000f,-2.500000000000000f,111.438653790613700f,0.000000000000001f,-1.545084971874737f,-2.500000000000000f,-4.045084971874737f,111.438653790613700f,-4.045084971874737f,-2.500000000000000f,-1.545084971874737f,0.000000000000001f,-128.938653790613700f,-2.500000000000000f,-0.000000000000000f,1.545084971874737f,4.045084971874736f,1010.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-159.840353228108430f,4.045084971874726f,1.545084971874741f,0.000000000000004f,-2.500000000000012f,192.340353228108430f,0.000000000000012f,-1.545084971874746f,-2.499999999999999f,-4.045084971874725f,192.340353228108430f,-4.045084971874725f,-2.499999999999999f,-1.545084971874746f,0.000000000000012f,-159.840353228108430f,-2.500000000000012f,0.000000000000004f,1.545084971874741f,4.045084971874726f,1410.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-190.742052665603180f,4.045084971874727f,1.545084971874729f,0.000000000000000f,-2.499999999999997f,273.242052665603180f,0.000000000000006f,-1.545084971874728f,-2.500000000000002f,-4.045084971874735f,273.242052665603180f,-4.045084971874735f,-2.500000000000002f,-1.545084971874728f,0.000000000000006f,-190.742052665603180f,-2.499999999999997f,0.000000000000000f,1.545084971874729f,4.045084971874727f,1810.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-221.643752103097940f,4.045084971874740f,1.545084971874740f,0.000000000000003f,-2.499999999999997f,354.143752103097940f,-0.000000000000011f,-1.545084971874753f,-2.500000000000005f,-4.045084971874747f,354.143752103097940f,-4.045084971874747f,-2.500000000000005f,-1.545084971874753f,-0.000000000000011f,-221.643752103097940f,-2.499999999999997f,0.000000000000003f,1.545084971874740f,4.045084971874740f,2210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-252.545451540592690f,4.045084971874733f,1.545084971874733f,-0.000000000000004f,-2.500000000000004f,435.045451540592690f,0.000000000000017f,-1.545084971874730f,-2.499999999999999f,-4.045084971874746f,435.045451540592690f,-4.045084971874746f,-2.499999999999999f,-1.545084971874730f,0.000000000000017f,-252.545451540592690f,-2.500000000000004f,-0.000000000000004f,1.545084971874733f,4.045084971874733f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-23.347629344494312f,1.314327780297837f,2.126627020880101f,2.628655560595667f,3.440954801177931f,-47.287822999077761f,4.253254041760197f,2.126627020880099f,0.812299240582264f,-1.314327780297834f,47.287822999077761f,1.314327780297834f,-0.812299240582264f,-2.126627020880099f,-4.253254041760197f,23.347629344494312f,-3.440954801177931f,-2.628655560595667f,-2.126627020880101f,-1.314327780297837f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-118.453280974009660f,1.314327780297834f,2.126627020880099f,2.628655560595670f,3.440954801177934f,-106.066348228325080f,4.253254041760203f,2.126627020880104f,0.812299240582267f,-1.314327780297832f,106.066348228325080f,1.314327780297832f,-0.812299240582267f,-2.126627020880104f,-4.253254041760203f,118.453280974009660f,-3.440954801177934f,-2.628655560595670f,-2.126627020880099f,-1.314327780297834f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-213.558932603525020f,1.314327780297832f,2.126627020880102f,2.628655560595666f,3.440954801177937f,-164.844873457572390f,4.253254041760201f,2.126627020880097f,0.812299240582267f,-1.314327780297838f,164.844873457572390f,1.314327780297838f,-0.812299240582267f,-2.126627020880097f,-4.253254041760201f,213.558932603525020f,-3.440954801177937f,-2.628655560595666f,-2.126627020880102f,-1.314327780297832f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-308.664584233040390f,1.314327780297828f,2.126627020880103f,2.628655560595681f,3.440954801177925f,-223.623398686819680f,4.253254041760194f,2.126627020880100f,0.812299240582256f,-1.314327780297837f,223.623398686819680f,1.314327780297837f,-0.812299240582256f,-2.126627020880100f,-4.253254041760194f,308.664584233040390f,-3.440954801177925f,-2.628655560595681f,-2.126627020880103f,-1.314327780297828f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-403.770235862555690f,1.314327780297832f,2.126627020880102f,2.628655560595666f,3.440954801177937f,-282.401923916067010f,4.253254041760201f,2.126627020880107f,0.812299240582263f,-1.314327780297830f,282.401923916067010f,1.314327780297830f,-0.812299240582263f,-2.126627020880107f,-4.253254041760201f,403.770235862555690f,-3.440954801177937f,-2.628655560595666f,-2.126627020880102f,-1.314327780297832f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-498.875887492071060f,1.314327780297828f,2.126627020880109f,2.628655560595659f,3.440954801177941f,-341.180449145314360f,4.253254041760209f,2.126627020880093f,0.812299240582277f,-1.314327780297838f,341.180449145314360f,1.314327780297838f,-0.812299240582277f,-2.126627020880093f,-4.253254041760209f,498.875887492071060f,-3.440954801177941f,-2.628655560595659f,-2.126627020880109f,-1.314327780297828f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3,2));
ResRA = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874990f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,1.221478174124758f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,1.221478174124758f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874990f,24.399999999999999f,-0.399999999999998f,-0.400000000000000f,-0.400000000000000f,-0.399999999999998f,-5.157546151624548f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,4.457546151624548f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,4.457546151624548f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-5.157546151624548f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,40.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-6.393614129124338f,0.161803398874989f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,7.693614129124337f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,7.693614129124337f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-6.393614129124338f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874989f,56.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-7.629682106624128f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,10.929682106624128f,0.000000000000000f,-0.061803398874989f,-0.100000000000000f,-0.161803398874989f,10.929682106624128f,-0.161803398874989f,-0.100000000000000f,-0.061803398874989f,0.000000000000000f,-7.629682106624128f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,72.400000000000006f,-0.400000000000006f,-0.400000000000000f,-0.400000000000000f,-0.400000000000006f,-8.865750084123919f,0.161803398874989f,0.061803398874990f,0.000000000000001f,-0.100000000000000f,14.165750084123918f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,14.165750084123918f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-8.865750084123919f,-0.100000000000000f,0.000000000000001f,0.061803398874990f,0.161803398874989f,88.400000000000006f,-0.400000000000006f,-0.400000000000000f,-0.400000000000000f,-0.400000000000006f,-10.101818061623709f,0.161803398874990f,0.061803398874990f,-0.000000000000000f,-0.100000000000000f,17.401818061623707f,-0.000000000000000f,-0.061803398874989f,-0.100000000000000f,-0.161803398874991f,17.401818061623707f,-0.161803398874991f,-0.100000000000000f,-0.061803398874989f,-0.000000000000000f,-10.101818061623709f,-0.100000000000000f,-0.000000000000000f,0.061803398874990f,0.161803398874990f};
ResRA.Reshape(new ILDimension(5,5,3,2));
ResIAR = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874990f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,1.221478174124758f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,1.221478174124758f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874990f,24.399999999999999f,-0.399999999999998f,-0.400000000000000f,-0.400000000000000f,-0.399999999999998f,-5.157546151624548f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,4.457546151624548f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,4.457546151624548f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-5.157546151624548f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,40.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-6.393614129124338f,0.161803398874989f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,7.693614129124337f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,7.693614129124337f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-6.393614129124338f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874989f,56.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-7.629682106624128f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,10.929682106624128f,0.000000000000000f,-0.061803398874989f,-0.100000000000000f,-0.161803398874989f,10.929682106624128f,-0.161803398874989f,-0.100000000000000f,-0.061803398874989f,0.000000000000000f,-7.629682106624128f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,72.400000000000006f,-0.400000000000006f,-0.400000000000000f,-0.400000000000000f,-0.400000000000006f,-8.865750084123919f,0.161803398874989f,0.061803398874990f,0.000000000000001f,-0.100000000000000f,14.165750084123918f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,14.165750084123918f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-8.865750084123919f,-0.100000000000000f,0.000000000000001f,0.061803398874990f,0.161803398874989f,88.400000000000006f,-0.400000000000006f,-0.400000000000000f,-0.400000000000000f,-0.400000000000006f,-10.101818061623709f,0.161803398874990f,0.061803398874990f,-0.000000000000000f,-0.100000000000000f,17.401818061623707f,-0.000000000000000f,-0.061803398874989f,-0.100000000000000f,-0.161803398874991f,17.401818061623707f,-0.161803398874991f,-0.100000000000000f,-0.061803398874989f,-0.000000000000000f,-10.101818061623709f,-0.100000000000000f,-0.000000000000000f,0.061803398874990f,0.161803398874990f};
ResIAI = new float[]{0.000000000000000f,-0.550552768188469f,-0.129967878493163f,0.129967878493163f,0.550552768188469f,0.933905173779772f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,1.891512919963110f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-1.891512919963110f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-0.933905173779772f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188469f,-0.129967878493162f,0.129967878493162f,0.550552768188469f,4.738131238960387f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,4.242653929133004f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-4.242653929133004f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-4.738131238960387f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188470f,-0.129967878493162f,0.129967878493162f,0.550552768188470f,8.542357304141001f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047118f,6.593794938302895f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-6.593794938302895f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-8.542357304141001f,0.137638192047118f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188470f,-0.129967878493162f,0.129967878493162f,0.550552768188470f,12.346583369321616f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,8.944935947472789f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-8.944935947472789f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-12.346583369321616f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188470f,-0.129967878493164f,0.129967878493164f,0.550552768188470f,16.150809434502229f,-0.052573111211915f,-0.085065080835204f,-0.105146222423827f,-0.137638192047119f,11.296076956642683f,-0.170130161670408f,-0.085065080835205f,-0.032491969623291f,0.052573111211913f,-11.296076956642683f,-0.052573111211913f,0.032491969623291f,0.085065080835205f,0.170130161670408f,-16.150809434502229f,0.137638192047119f,0.105146222423827f,0.085065080835204f,0.052573111211915f,0.000000000000000f,-0.550552768188470f,-0.129967878493164f,0.129967878493164f,0.550552768188470f,19.955035499682843f,-0.052573111211915f,-0.085065080835204f,-0.105146222423826f,-0.137638192047119f,13.647217965812573f,-0.170130161670408f,-0.085065080835203f,-0.032491969623291f,0.052573111211914f,-13.647217965812573f,-0.052573111211914f,0.032491969623291f,0.085065080835203f,0.170130161670408f,-19.955035499682843f,0.137638192047119f,0.105146222423826f,0.085065080835204f,0.052573111211915f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f,315.000000000000000f,-36.000000000000000f,30.000000000000000f,63.000000000000000f,30.000000000000000f,-36.000000000000000f,340.000000000000000f,-38.500000000000000f,32.500000000000000f,68.000000000000000f,32.500000000000000f,-38.500000000000000f,365.000000000000000f,-41.000000000000000f,35.000000000000000f,73.000000000000000f,35.000000000000000f,-41.000000000000000f,390.000000000000000f,-43.500000000000000f,37.500000000000000f,78.000000000000000f,37.500000000000000f,-43.500000000000000f,415.000000000000000f,-46.000000000000000f,40.000000000000000f,83.000000000000000f,40.000000000000000f,-46.000000000000000f,440.000000000000000f,-48.500000000000000f,42.500000000000000f,88.000000000000000f,42.500000000000000f,-48.500000000000000f,465.000000000000000f,-51.000000000000000f,45.000000000000000f,93.000000000000000f,45.000000000000000f,-51.000000000000000f,490.000000000000000f,-53.500000000000000f,47.500000000000000f,98.000000000000000f,47.500000000000000f,-53.500000000000000f,515.000000000000000f,-56.000000000000000f,50.000000000000000f,103.000000000000000f,50.000000000000000f,-56.000000000000000f,540.000000000000000f,-58.500000000000000f,52.500000000000000f,108.000000000000000f,52.500000000000000f,-58.500000000000000f,565.000000000000000f,-61.000000000000000f,55.000000000000000f,113.000000000000000f,55.000000000000000f,-61.000000000000000f,590.000000000000000f,-63.500000000000000f,57.500000000000000f,118.000000000000000f,57.500000000000000f,-63.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f,0.000000000000000f,-51.961524227066313f,-55.425625842204070f,0.000000000000000f,55.425625842204070f,51.961524227066313f,0.000000000000000f,-56.291651245988511f,-59.755752861126261f,0.000000000000000f,59.755752861126261f,56.291651245988511f,0.000000000000000f,-60.621778264910702f,-64.085879880048452f,0.000000000000000f,64.085879880048452f,60.621778264910702f,0.000000000000000f,-64.951905283832900f,-68.416006898970650f,0.000000000000000f,68.416006898970650f,64.951905283832900f,0.000000000000000f,-69.282032302755084f,-72.746133917892848f,0.000000000000000f,72.746133917892848f,69.282032302755084f,0.000000000000000f,-73.612159321677282f,-77.076260936815032f,0.000000000000000f,77.076260936815032f,73.612159321677282f,0.000000000000000f,-77.942286340599480f,-81.406387955737230f,0.000000000000000f,81.406387955737230f,77.942286340599480f,0.000000000000000f,-82.272413359521664f,-85.736514974659414f,0.000000000000000f,85.736514974659414f,82.272413359521664f,0.000000000000000f,-86.602540378443862f,-90.066641993581612f,0.000000000000000f,90.066641993581612f,86.602540378443862f,0.000000000000000f,-90.932667397366046f,-94.396769012503810f,0.000000000000000f,94.396769012503810f,90.932667397366046f,0.000000000000000f,-95.262794416288244f,-98.726896031425994f,0.000000000000000f,98.726896031425994f,95.262794416288244f,0.000000000000000f,-99.592921435210442f,-103.057023050348190f,0.000000000000000f,103.057023050348190f,99.592921435210442f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3,2));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(6,0,3,2));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,315.000000000000000f,-36.000000000000000f,30.000000000000000f,63.000000000000000f,30.000000000000000f,-36.000000000000000f,415.000000000000000f,-46.000000000000000f,40.000000000000000f,83.000000000000000f,40.000000000000000f,-46.000000000000000f,515.000000000000000f,-56.000000000000000f,50.000000000000000f,103.000000000000000f,50.000000000000000f,-56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-51.961524227066313f,-55.425625842204070f,0.000000000000000f,55.425625842204070f,51.961524227066313f,0.000000000000000f,-69.282032302755084f,-72.746133917892848f,0.000000000000000f,72.746133917892848f,69.282032302755084f,0.000000000000000f,-86.602540378443862f,-90.066641993581612f,0.000000000000000f,90.066641993581612f,86.602540378443862f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,3,2));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f,52.500000000000000f,-6.000000000000000f,5.000000000000000f,10.500000000000000f,5.000000000000000f,-6.000000000000000f,69.166666666666671f,-7.666666666666667f,6.666666666666667f,13.833333333333334f,6.666666666666667f,-7.666666666666667f,85.833333333333329f,-9.333333333333334f,8.333333333333334f,17.166666666666668f,8.333333333333334f,-9.333333333333334f};
ResRA.Reshape(new ILDimension(6,1,3,2));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f,52.500000000000000f,-6.000000000000000f,5.000000000000000f,10.500000000000000f,5.000000000000000f,-6.000000000000000f,69.166666666666671f,-7.666666666666667f,6.666666666666667f,13.833333333333334f,6.666666666666667f,-7.666666666666667f,85.833333333333329f,-9.333333333333334f,8.333333333333334f,17.166666666666668f,8.333333333333334f,-9.333333333333334f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f,0.000000000000000f,2.886751345948129f,3.464101615137755f,0.000000000000000f,-3.464101615137755f,-2.886751345948129f,0.000000000000000f,5.773502691896257f,6.350852961085884f,0.000000000000000f,-6.350852961085884f,-5.773502691896257f,0.000000000000000f,8.660254037844386f,9.237604307034012f,0.000000000000000f,-9.237604307034012f,-8.660254037844386f,0.000000000000000f,11.547005383792515f,12.124355652982141f,0.000000000000000f,-12.124355652982141f,-11.547005383792515f,0.000000000000000f,14.433756729740644f,15.011106998930268f,0.000000000000000f,-15.011106998930268f,-14.433756729740644f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new float[]{55.000000000000000f,-14.500000000000000f,2.500000000000000f,11.000000000000000f,2.500000000000000f,-14.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,255.000000000000000f,-34.500000000000000f,22.500000000000000f,51.000000000000000f,22.500000000000000f,-34.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,455.000000000000000f,-54.500000000000000f,42.500000000000000f,91.000000000000000f,42.500000000000000f,-54.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,655.000000000000000f,-74.500000000000000f,62.500000000000000f,131.000000000000000f,62.500000000000000f,-74.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,855.000000000000000f,-94.500000000000000f,82.500000000000000f,171.000000000000000f,82.500000000000000f,-94.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,1055.000000000000000f,-114.500000000000000f,102.500000000000000f,211.000000000000000f,102.500000000000000f,-114.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f};
ResultI = new float[]{0.000000000000000f,-4.330127018922193f,-11.258330249197702f,0.000000000000000f,11.258330249197702f,4.330127018922193f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-38.971143170299740f,-45.899346400575247f,0.000000000000000f,45.899346400575247f,38.971143170299740f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-73.612159321677282f,-80.540362551952796f,0.000000000000000f,80.540362551952796f,73.612159321677282f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-108.253175473054820f,-115.181378703330340f,0.000000000000000f,115.181378703330340f,108.253175473054820f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-142.894191624432380f,-149.822394854707880f,0.000000000000000f,149.822394854707880f,142.894191624432380f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-177.535207775809910f,-184.463411006085410f,0.000000000000000f,184.463411006085410f,177.535207775809910f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,3,2));
ResRA = new float[]{4.583333333333333f,-1.208333333333333f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,21.250000000000000f,-2.875000000000000f,1.875000000000000f,4.250000000000000f,1.875000000000000f,-2.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,37.916666666666664f,-4.541666666666667f,3.541666666666667f,7.583333333333333f,3.541666666666667f,-4.541666666666667f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,54.583333333333336f,-6.208333333333333f,5.208333333333333f,10.916666666666666f,5.208333333333333f,-6.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,71.250000000000000f,-7.875000000000000f,6.875000000000000f,14.250000000000000f,6.875000000000000f,-7.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,87.916666666666671f,-9.541666666666666f,8.541666666666666f,17.583333333333332f,8.541666666666666f,-9.541666666666666f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResRA.Reshape(new ILDimension(6,2,3,2));
ResIAR = new float[]{4.583333333333333f,-1.208333333333333f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,21.250000000000000f,-2.875000000000000f,1.875000000000000f,4.250000000000000f,1.875000000000000f,-2.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,37.916666666666664f,-4.541666666666667f,3.541666666666667f,7.583333333333333f,3.541666666666667f,-4.541666666666667f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,54.583333333333336f,-6.208333333333333f,5.208333333333333f,10.916666666666666f,5.208333333333333f,-6.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,71.250000000000000f,-7.875000000000000f,6.875000000000000f,14.250000000000000f,6.875000000000000f,-7.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,87.916666666666671f,-9.541666666666666f,8.541666666666666f,17.583333333333332f,8.541666666666666f,-9.541666666666666f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResIAI = new float[]{0.000000000000000f,0.360843918243516f,0.938194187433142f,0.000000000000000f,-0.938194187433142f,-0.360843918243516f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,3.247595264191645f,3.824945533381271f,0.000000000000000f,-3.824945533381271f,-3.247595264191645f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,6.134346610139773f,6.711696879329399f,0.000000000000000f,-6.711696879329399f,-6.134346610139773f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,9.021097956087901f,9.598448225277528f,0.000000000000000f,-9.598448225277528f,-9.021097956087901f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,11.907849302036032f,12.485199571225657f,0.000000000000000f,-12.485199571225657f,-11.907849302036032f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,14.794600647984160f,15.371950917173784f,0.000000000000000f,-15.371950917173784f,-14.794600647984160f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new float[]{120.000000000000000f,-25.500000000000000f,7.500000000000000f,24.000000000000000f,7.500000000000000f,-25.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,420.000000000000000f,-55.500000000000000f,37.500000000000000f,84.000000000000000f,37.500000000000000f,-55.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,720.000000000000000f,-85.500000000000000f,67.500000000000000f,144.000000000000000f,67.500000000000000f,-85.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,1020.000000000000000f,-115.500000000000000f,97.500000000000000f,204.000000000000000f,97.500000000000000f,-115.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,1320.000000000000000f,-145.500000000000000f,127.500000000000000f,264.000000000000000f,127.500000000000000f,-145.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,1620.000000000000000f,-175.500000000000000f,157.500000000000000f,324.000000000000000f,157.500000000000000f,-175.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f};
ResultI = new float[]{0.000000000000000f,-12.990381056766578f,-23.382685902179841f,0.000000000000000f,23.382685902179841f,12.990381056766578f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-64.951905283832900f,-75.344210129246164f,0.000000000000000f,75.344210129246164f,64.951905283832900f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-116.913429510899210f,-127.305734356312470f,0.000000000000000f,127.305734356312470f,116.913429510899210f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-168.874953737965510f,-179.267258583378780f,0.000000000000000f,179.267258583378780f,168.874953737965510f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-220.836477965031830f,-231.228782810445100f,0.000000000000000f,231.228782810445100f,220.836477965031830f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-272.798002192098180f,-283.190307037511450f,0.000000000000000f,283.190307037511450f,272.798002192098180f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3,3,2));
ResRA = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,56.666666666666664f,-6.416666666666667f,5.416666666666667f,11.333333333333334f,5.416666666666667f,-6.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,73.333333333333329f,-8.083333333333334f,7.083333333333333f,14.666666666666666f,7.083333333333333f,-8.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,90.000000000000000f,-9.750000000000000f,8.750000000000000f,18.000000000000000f,8.750000000000000f,-9.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f};
ResRA.Reshape(new ILDimension(6,3,3,2));
ResIAR = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,56.666666666666664f,-6.416666666666667f,5.416666666666667f,11.333333333333334f,5.416666666666667f,-6.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,73.333333333333329f,-8.083333333333334f,7.083333333333333f,14.666666666666666f,7.083333333333333f,-8.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,90.000000000000000f,-9.750000000000000f,8.750000000000000f,18.000000000000000f,8.750000000000000f,-9.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f};
ResIAI = new float[]{0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,3.608439182435161f,4.185789451624786f,0.000000000000000f,-4.185789451624786f,-3.608439182435161f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,6.495190528383290f,7.072540797572915f,0.000000000000000f,-7.072540797572915f,-6.495190528383290f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,9.381941874331419f,9.959292143521044f,0.000000000000000f,-9.959292143521044f,-9.381941874331419f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,12.268693220279546f,12.846043489469173f,0.000000000000000f,-12.846043489469173f,-12.268693220279546f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,15.155444566227674f,15.732794835417302f,0.000000000000000f,-15.732794835417302f,-15.155444566227674f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,610.000000000000000f,-79.000000000000000f,55.000000000000000f,122.000000000000000f,55.000000000000000f,-79.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,1010.000000000000000f,-119.000000000000000f,95.000000000000000f,202.000000000000000f,95.000000000000000f,-119.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,1410.000000000000000f,-159.000000000000000f,135.000000000000000f,282.000000000000000f,135.000000000000000f,-159.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,1810.000000000000000f,-199.000000000000000f,175.000000000000000f,362.000000000000000f,175.000000000000000f,-199.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,2210.000000000000000f,-239.000000000000000f,215.000000000000000f,442.000000000000000f,215.000000000000000f,-239.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-95.262794416288244f,-109.119200876839260f,0.000000000000000f,109.119200876839260f,95.262794416288244f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-164.544826719043330f,-178.401233179594360f,0.000000000000000f,178.401233179594360f,164.544826719043330f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-233.826859021798410f,-247.683265482349440f,0.000000000000000f,247.683265482349440f,233.826859021798410f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-303.108891324553500f,-316.965297785104550f,0.000000000000000f,316.965297785104550f,303.108891324553500f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-372.390923627308610f,-386.247330087859610f,0.000000000000000f,386.247330087859610f,372.390923627308610f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3,2));
ResRA = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,25.416666666666668f,-3.291666666666667f,2.291666666666667f,5.083333333333333f,2.291666666666667f,-3.291666666666667f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,42.083333333333336f,-4.958333333333333f,3.958333333333334f,8.416666666666666f,3.958333333333334f,-4.958333333333333f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,58.750000000000000f,-6.625000000000000f,5.625000000000000f,11.750000000000000f,5.625000000000000f,-6.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,75.416666666666671f,-8.291666666666666f,7.291666666666667f,15.083333333333334f,7.291666666666667f,-8.291666666666666f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,92.083333333333329f,-9.958333333333334f,8.958333333333334f,18.416666666666668f,8.958333333333334f,-9.958333333333334f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResRA.Reshape(new ILDimension(6,4,3,2));
ResIAR = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,25.416666666666668f,-3.291666666666667f,2.291666666666667f,5.083333333333333f,2.291666666666667f,-3.291666666666667f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,42.083333333333336f,-4.958333333333333f,3.958333333333334f,8.416666666666666f,3.958333333333334f,-4.958333333333333f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,58.750000000000000f,-6.625000000000000f,5.625000000000000f,11.750000000000000f,5.625000000000000f,-6.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,75.416666666666671f,-8.291666666666666f,7.291666666666667f,15.083333333333334f,7.291666666666667f,-8.291666666666666f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,92.083333333333329f,-9.958333333333334f,8.958333333333334f,18.416666666666668f,8.958333333333334f,-9.958333333333334f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResIAI = new float[]{0.000000000000000f,1.082531754730548f,1.659882023920174f,0.000000000000000f,-1.659882023920174f,-1.082531754730548f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,3.969283100678677f,4.546633369868302f,0.000000000000000f,-4.546633369868302f,-3.969283100678677f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,6.856034446626805f,7.433384715816431f,0.000000000000000f,-7.433384715816431f,-6.856034446626805f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,9.742785792574933f,10.320136061764559f,0.000000000000000f,-10.320136061764559f,-9.742785792574933f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,12.629537138523062f,13.206887407712690f,0.000000000000000f,-13.206887407712690f,-12.629537138523062f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,15.516288484471191f,16.093638753660816f,0.000000000000000f,-16.093638753660816f,-15.516288484471191f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-98.036954353118958f,9.621261194543136f,-14.207737073390824f,-19.607390870623789f,-4.472602814108122f,12.767282625455183f,30.536954353118958f,-13.357652230006455f,-6.859358218078331f,6.107390870623791f,10.539698105577276f,-0.030891589991866f,30.536954353118958f,-0.030891589991866f,10.539698105577276f,6.107390870623791f,-6.859358218078331f,-13.357652230006455f,-98.036954353118958f,12.767282625455183f,-4.472602814108122f,-19.607390870623789f,-14.207737073390824f,9.621261194543136f,610.000000000000000f,-79.000000000000000f,55.000000000000000f,122.000000000000000f,55.000000000000000f,-79.000000000000000f,-128.938653790613700f,-3.761350932634024f,-33.770689088066938f,-25.787730758122741f,8.910009313069033f,32.330234640131295f,111.438653790613700f,-31.628561382858472f,-8.949927483431399f,22.287730758122741f,28.810607258429304f,2.059677675361201f,111.438653790613700f,2.059677675361201f,28.810607258429304f,22.287730758122741f,-8.949927483431399f,-31.628561382858472f,-128.938653790613700f,32.330234640131295f,8.910009313069033f,-25.787730758122741f,-33.770689088066938f,-3.761350932634024f,1010.000000000000000f,-119.000000000000000f,95.000000000000000f,202.000000000000000f,95.000000000000000f,-119.000000000000000f,-159.840353228108460f,-17.143963059811188f,-53.333641102743044f,-31.968070645621687f,22.292621440246208f,51.893186654807408f,192.340353228108460f,-49.899470535710492f,-11.040496748784474f,38.468070645621687f,47.081516411281314f,4.150246940714272f,192.340353228108460f,4.150246940714272f,47.081516411281314f,38.468070645621687f,-11.040496748784474f,-49.899470535710492f,-159.840353228108460f,51.893186654807408f,22.292621440246208f,-31.968070645621687f,-53.333641102743044f,-17.143963059811188f,1410.000000000000000f,-159.000000000000000f,135.000000000000000f,282.000000000000000f,135.000000000000000f,-159.000000000000000f,-190.742052665603180f,-30.526575186988360f,-72.896593117419158f,-38.148410533120646f,35.675233567423376f,71.456138669483522f,273.242052665603180f,-68.170379688562491f,-13.131066014137538f,54.648410533120646f,65.352425564133313f,6.240816206067343f,273.242052665603180f,6.240816206067343f,65.352425564133313f,54.648410533120646f,-13.131066014137538f,-68.170379688562491f,-190.742052665603180f,71.456138669483522f,35.675233567423376f,-38.148410533120646f,-72.896593117419158f,-30.526575186988360f,1810.000000000000000f,-199.000000000000000f,175.000000000000000f,362.000000000000000f,175.000000000000000f,-199.000000000000000f,-221.643752103097940f,-43.909187314165500f,-92.459545132095258f,-44.328750420619585f,49.057845694600530f,91.019090684159607f,354.143752103097940f,-86.441288841414519f,-15.221635279490627f,70.828750420619585f,83.623334716985326f,8.331385471420411f,354.143752103097940f,8.331385471420411f,83.623334716985326f,70.828750420619585f,-15.221635279490627f,-86.441288841414519f,-221.643752103097940f,91.019090684159607f,49.057845694600530f,-44.328750420619585f,-92.459545132095258f,-43.909187314165500f,2210.000000000000000f,-239.000000000000000f,215.000000000000000f,442.000000000000000f,215.000000000000000f,-239.000000000000000f,-252.545451540592670f,-57.291799441342668f,-112.022497146771400f,-50.509090308118530f,62.440457821777670f,110.582042698835720f,435.045451540592690f,-104.712197994266520f,-17.312204544843667f,87.009090308118530f,101.894243869837400f,10.421954736773465f,435.045451540592690f,10.421954736773465f,101.894243869837400f,87.009090308118530f,-17.312204544843667f,-104.712197994266520f,-252.545451540592670f,110.582042698835720f,62.440457821777670f,-50.509090308118530f,-112.022497146771400f,-57.291799441342668f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,-23.347629344494312f,22.792166151679456f,16.339937003214402f,-4.669525868898862f,-18.156293323227807f,-9.563131636124215f,-47.287822999077761f,4.186548098088650f,-9.836889335492469f,-9.457564599815553f,2.142680492554329f,10.561083772359158f,47.287822999077761f,-10.561083772359158f,-2.142680492554329f,9.457564599815553f,9.836889335492469f,-4.186548098088650f,23.347629344494312f,9.563131636124215f,18.156293323227807f,4.669525868898862f,-16.339937003214402f,-22.792166151679456f,0.000000000000000f,-95.262794416288244f,-109.119200876839260f,0.000000000000000f,109.119200876839260f,95.262794416288244f,-118.453280974009660f,37.655062661227333f,12.181703186859213f,-23.690656194801932f,-33.019189832775680f,-5.404897819769023f,-106.066348228325070f,-3.948184763427351f,-29.727327242857928f,-21.213269645665015f,10.277413354070337f,30.451521679724628f,106.066348228325070f,-30.451521679724628f,-10.277413354070337f,21.213269645665015f,29.727327242857928f,3.948184763427351f,118.453280974009660f,5.404897819769023f,33.019189832775680f,23.690656194801932f,-12.181703186859213f,-37.655062661227333f,0.000000000000000f,-164.544826719043330f,-178.401233179594360f,0.000000000000000f,178.401233179594360f,164.544826719043330f,-213.558932603525020f,52.517959170775221f,8.023469370504035f,-42.711786520705004f,-47.882086342323575f,-1.246664003413834f,-164.844873457572390f,-12.082917624943352f,-49.617765150223413f,-32.968974691514475f,18.412146215586340f,50.341959587090088f,164.844873457572390f,-50.341959587090088f,-18.412146215586340f,32.968974691514475f,49.617765150223413f,12.082917624943352f,213.558932603525020f,1.246664003413834f,47.882086342323575f,42.711786520705004f,-8.023469370504035f,-52.517959170775221f,0.000000000000000f,-233.826859021798410f,-247.683265482349440f,0.000000000000000f,247.683265482349440f,233.826859021798410f,-308.664584233040390f,67.380855680323094f,3.865235554148839f,-61.732916846608070f,-62.744982851871455f,2.911569812941337f,-223.623398686819710f,-20.217650486459359f,-69.508203057588872f,-44.724679737363950f,26.546879077102339f,70.232397494455554f,223.623398686819710f,-70.232397494455554f,-26.546879077102339f,44.724679737363950f,69.508203057588872f,20.217650486459359f,308.664584233040390f,-2.911569812941337f,62.744982851871455f,61.732916846608070f,-3.865235554148839f,-67.380855680323094f,0.000000000000000f,-303.108891324553500f,-316.965297785104550f,0.000000000000000f,316.965297785104550f,303.108891324553500f,-403.770235862555690f,82.243752189870975f,-0.292998262206325f,-80.754047172511136f,-77.607879361419336f,7.069803629296537f,-282.401923916067010f,-28.352383347975358f,-89.398640964954339f,-56.480384783213395f,34.681611938618360f,90.122835401821021f,282.401923916067010f,-90.122835401821021f,-34.681611938618360f,56.480384783213395f,89.398640964954339f,28.352383347975358f,403.770235862555690f,-7.069803629296537f,77.607879361419336f,80.754047172511136f,0.292998262206325f,-82.243752189870975f,0.000000000000000f,-372.390923627308610f,-386.247330087859610f,0.000000000000000f,386.247330087859610f,372.390923627308610f,-498.875887492071060f,97.106648699418869f,-4.451232078561517f,-99.775177498414209f,-92.470775870967216f,11.228037445651722f,-341.180449145314360f,-36.487116209491361f,-109.289078872319810f,-68.236089829062877f,42.816344800134345f,110.013273309186490f,341.180449145314360f,-110.013273309186490f,-42.816344800134345f,68.236089829062877f,109.289078872319810f,36.487116209491361f,498.875887492071060f,-11.228037445651722f,92.470775870967216f,99.775177498414209f,4.451232078561517f,-97.106648699418869f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5,3,2));
ResRA = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437299f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666396f,1.017898478437299f,-0.001029719666396f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437299f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f,20.333333333333332f,-2.633333333333333f,1.833333333333333f,4.066666666666666f,1.833333333333333f,-2.633333333333333f,-4.297955126353790f,-0.125378364421134f,-1.125689636268898f,-0.859591025270758f,0.297000310435635f,1.077674488004377f,3.714621793020457f,-1.054285379428616f,-0.298330916114380f,0.742924358604091f,0.960353575280976f,0.068655922512040f,3.714621793020457f,0.068655922512040f,0.960353575280976f,0.742924358604091f,-0.298330916114380f,-1.054285379428616f,-4.297955126353790f,1.077674488004377f,0.297000310435635f,-0.859591025270758f,-1.125689636268898f,-0.125378364421134f,33.666666666666664f,-3.966666666666667f,3.166666666666667f,6.733333333333332f,3.166666666666667f,-3.966666666666667f,-5.328011774270282f,-0.571465435327039f,-1.777788036758101f,-1.065602354854056f,0.743087381341540f,1.729772888493580f,6.411345107603616f,-1.663315684523683f,-0.368016558292816f,1.282269021520723f,1.569383880376044f,0.138341564690476f,6.411345107603616f,0.138341564690476f,1.569383880376044f,1.282269021520723f,-0.368016558292816f,-1.663315684523683f,-5.328011774270282f,1.729772888493580f,0.743087381341540f,-1.065602354854056f,-1.777788036758101f,-0.571465435327039f,47.000000000000000f,-5.300000000000001f,4.500000000000000f,9.399999999999999f,4.500000000000000f,-5.300000000000001f,-6.358068422186773f,-1.017552506232945f,-2.429886437247306f,-1.271613684437355f,1.189174452247446f,2.381871288982784f,9.108068422186774f,-2.272345989618750f,-0.437702200471251f,1.821613684437355f,2.178414185471112f,0.208027206868912f,9.108068422186774f,0.208027206868912f,2.178414185471112f,1.821613684437355f,-0.437702200471251f,-2.272345989618750f,-6.358068422186773f,2.381871288982784f,1.189174452247446f,-1.271613684437355f,-2.429886437247306f,-1.017552506232945f,60.333333333333336f,-6.633333333333336f,5.833333333333333f,12.066666666666668f,5.833333333333333f,-6.633333333333336f,-7.388125070103264f,-1.463639577138850f,-3.081984837736508f,-1.477625014020653f,1.635261523153351f,3.033969689471987f,11.804791736769930f,-2.881376294713817f,-0.507387842649688f,2.360958347353986f,2.787444490566178f,0.277712849047347f,11.804791736769930f,0.277712849047347f,2.787444490566178f,2.360958347353986f,-0.507387842649688f,-2.881376294713817f,-7.388125070103264f,3.033969689471987f,1.635261523153351f,-1.477625014020653f,-3.081984837736508f,-1.463639577138850f,73.666666666666671f,-7.966666666666669f,7.166666666666667f,14.733333333333334f,7.166666666666667f,-7.966666666666669f,-8.418181718019756f,-1.909726648044756f,-3.734083238225713f,-1.683636343603951f,2.081348594059255f,3.686068089961192f,14.501515051353090f,-3.490406599808884f,-0.577073484828122f,2.900303010270618f,3.396474795661246f,0.347398491225782f,14.501515051353090f,0.347398491225782f,3.396474795661246f,2.900303010270618f,-0.577073484828122f,-3.490406599808884f,-8.418181718019756f,3.686068089961192f,2.081348594059255f,-1.683636343603951f,-3.734083238225713f,-1.909726648044756f};
ResRA.Reshape(new ILDimension(6,5,3,2));
ResIAR = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437299f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666396f,1.017898478437299f,-0.001029719666396f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437299f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f,20.333333333333332f,-2.633333333333333f,1.833333333333333f,4.066666666666666f,1.833333333333333f,-2.633333333333333f,-4.297955126353790f,-0.125378364421134f,-1.125689636268898f,-0.859591025270758f,0.297000310435635f,1.077674488004377f,3.714621793020457f,-1.054285379428616f,-0.298330916114380f,0.742924358604091f,0.960353575280976f,0.068655922512040f,3.714621793020457f,0.068655922512040f,0.960353575280976f,0.742924358604091f,-0.298330916114380f,-1.054285379428616f,-4.297955126353790f,1.077674488004377f,0.297000310435635f,-0.859591025270758f,-1.125689636268898f,-0.125378364421134f,33.666666666666664f,-3.966666666666667f,3.166666666666667f,6.733333333333332f,3.166666666666667f,-3.966666666666667f,-5.328011774270282f,-0.571465435327039f,-1.777788036758101f,-1.065602354854056f,0.743087381341540f,1.729772888493580f,6.411345107603616f,-1.663315684523683f,-0.368016558292816f,1.282269021520723f,1.569383880376044f,0.138341564690476f,6.411345107603616f,0.138341564690476f,1.569383880376044f,1.282269021520723f,-0.368016558292816f,-1.663315684523683f,-5.328011774270282f,1.729772888493580f,0.743087381341540f,-1.065602354854056f,-1.777788036758101f,-0.571465435327039f,47.000000000000000f,-5.300000000000001f,4.500000000000000f,9.399999999999999f,4.500000000000000f,-5.300000000000001f,-6.358068422186773f,-1.017552506232945f,-2.429886437247306f,-1.271613684437355f,1.189174452247446f,2.381871288982784f,9.108068422186774f,-2.272345989618750f,-0.437702200471251f,1.821613684437355f,2.178414185471112f,0.208027206868912f,9.108068422186774f,0.208027206868912f,2.178414185471112f,1.821613684437355f,-0.437702200471251f,-2.272345989618750f,-6.358068422186773f,2.381871288982784f,1.189174452247446f,-1.271613684437355f,-2.429886437247306f,-1.017552506232945f,60.333333333333336f,-6.633333333333336f,5.833333333333333f,12.066666666666668f,5.833333333333333f,-6.633333333333336f,-7.388125070103264f,-1.463639577138850f,-3.081984837736508f,-1.477625014020653f,1.635261523153351f,3.033969689471987f,11.804791736769930f,-2.881376294713817f,-0.507387842649688f,2.360958347353986f,2.787444490566178f,0.277712849047347f,11.804791736769930f,0.277712849047347f,2.787444490566178f,2.360958347353986f,-0.507387842649688f,-2.881376294713817f,-7.388125070103264f,3.033969689471987f,1.635261523153351f,-1.477625014020653f,-3.081984837736508f,-1.463639577138850f,73.666666666666671f,-7.966666666666669f,7.166666666666667f,14.733333333333334f,7.166666666666667f,-7.966666666666669f,-8.418181718019756f,-1.909726648044756f,-3.734083238225713f,-1.683636343603951f,2.081348594059255f,3.686068089961192f,14.501515051353090f,-3.490406599808884f,-0.577073484828122f,2.900303010270618f,3.396474795661246f,0.347398491225782f,14.501515051353090f,0.347398491225782f,3.396474795661246f,2.900303010270618f,-0.577073484828122f,-3.490406599808884f,-8.418181718019756f,3.686068089961192f,2.081348594059255f,-1.683636343603951f,-3.734083238225713f,-1.909726648044756f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,1.327905619136139f,0.000000000000000f,-1.327905619136139f,-0.866025403784439f,0.778254311483144f,-0.759738871722649f,-0.544664566773813f,0.155650862296629f,0.605209777440927f,0.318771054537474f,1.576260766635925f,-0.139551603269622f,0.327896311183082f,0.315252153327185f,-0.071422683085144f,-0.352036125745305f,-1.576260766635925f,0.352036125745305f,0.071422683085144f,-0.315252153327185f,-0.327896311183082f,0.139551603269622f,-0.778254311483144f,-0.318771054537474f,-0.605209777440927f,-0.155650862296629f,0.544664566773813f,0.759738871722649f,0.000000000000000f,3.175426480542942f,3.637306695894643f,0.000000000000000f,-3.637306695894643f,-3.175426480542942f,3.948442699133655f,-1.255168755374245f,-0.406056772895307f,0.789688539826731f,1.100639661092522f,0.180163260658967f,3.535544940944169f,0.131606158780912f,0.990910908095264f,0.707108988188834f,-0.342580445135678f,-1.015050722657487f,-3.535544940944169f,1.015050722657487f,0.342580445135678f,-0.707108988188834f,-0.990910908095264f,-0.131606158780912f,-3.948442699133655f,-0.180163260658967f,-1.100639661092522f,-0.789688539826731f,0.406056772895307f,1.255168755374245f,0.000000000000000f,5.484827557301444f,5.946707772653145f,0.000000000000000f,-5.946707772653145f,-5.484827557301444f,7.118631086784167f,-1.750598639025841f,-0.267448979016801f,1.423726217356834f,1.596069544744120f,0.041555466780461f,5.494829115252412f,0.402763920831445f,1.653925505007447f,1.098965823050482f,-0.613738207186212f,-1.678065319569670f,-5.494829115252412f,1.678065319569670f,0.613738207186212f,-1.098965823050482f,-1.653925505007447f,-0.402763920831445f,-7.118631086784167f,-0.041555466780461f,-1.596069544744120f,-1.423726217356834f,0.267448979016801f,1.750598639025841f,0.000000000000000f,7.794228634059947f,8.256108849411648f,0.000000000000000f,-8.256108849411648f,-7.794228634059947f,10.288819474434680f,-2.246028522677436f,-0.128841185138295f,2.057763894886936f,2.091499428395715f,-0.097052327098044f,7.454113289560657f,0.673921682881979f,2.316940101919629f,1.490822657912132f,-0.884895969236744f,-2.341079916481852f,-7.454113289560657f,2.341079916481852f,0.884895969236744f,-1.490822657912132f,-2.316940101919629f,-0.673921682881979f,-10.288819474434680f,0.097052327098044f,-2.091499428395715f,-2.057763894886936f,0.128841185138295f,2.246028522677436f,0.000000000000000f,10.103629710818451f,10.565509926170149f,0.000000000000000f,-10.565509926170149f,-10.103629710818451f,13.459007862085189f,-2.741458406329033f,0.009766608740211f,2.691801572417038f,2.586929312047312f,-0.235660120976552f,9.413397463868902f,0.945079444932512f,2.979954698831811f,1.882679492773780f,-1.156053731287279f,-3.004094513394035f,-9.413397463868902f,3.004094513394035f,1.156053731287279f,-1.882679492773780f,-2.979954698831811f,-0.945079444932512f,-13.459007862085189f,0.235660120976552f,-2.586929312047312f,-2.691801572417038f,-0.009766608740211f,2.741458406329033f,0.000000000000000f,12.413030787576952f,12.874911002928654f,0.000000000000000f,-12.874911002928654f,-12.413030787576952f,16.629196249735703f,-3.236888289980630f,0.148374402618718f,3.325839249947141f,3.082359195698908f,-0.374267914855058f,11.372681638177143f,1.216237206983045f,3.642969295743993f,2.274536327635429f,-1.427211493337811f,-3.667109110306216f,-11.372681638177143f,3.667109110306216f,1.427211493337811f,-2.274536327635429f,-3.642969295743993f,-1.216237206983045f,-16.629196249735703f,0.374267914855058f,-3.082359195698908f,-3.325839249947141f,-0.148374402618718f,3.236888289980630f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5,3,2));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_float_fcomplex_14() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
A.Reshape(new ILDimension(1,5,4,3));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,6,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,6,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,6);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,4,3));
ResIAR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,11.500000000000000f,-0.500000000000000f,16.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,26.500000000000000f,-0.500000000000000f,31.500000000000000f,-0.500000000000000f,36.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f,46.500000000000000f,-0.500000000000000f,51.500000000000000f,-0.500000000000000f,56.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,4,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,11.500000000000000f,-0.500000000000000f,16.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,26.500000000000000f,-0.500000000000000f,31.500000000000000f,-0.500000000000000f,36.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f,46.500000000000000f,-0.500000000000000f,51.500000000000000f,-0.500000000000000f,56.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,4,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,7.000000000000000f,-0.500000000000000f,-0.500000000000000f,12.000000000000000f,-0.500000000000000f,-0.500000000000000f,17.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,32.000000000000000f,-0.500000000000000f,-0.500000000000000f,37.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,52.000000000000000f,-0.500000000000000f,-0.500000000000000f,57.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,3,4,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,7.000000000000000f,-0.500000000000000f,-0.500000000000000f,12.000000000000000f,-0.500000000000000f,-0.500000000000000f,17.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,32.000000000000000f,-0.500000000000000f,-0.500000000000000f,37.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,52.000000000000000f,-0.500000000000000f,-0.500000000000000f,57.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,4,3));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,12.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,17.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,32.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,37.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,52.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,57.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,4,4,3));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,12.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,17.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,32.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,37.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,52.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,57.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,4,3));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,13.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,18.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,33.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,38.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,53.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,58.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(1,5,4,3));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,13.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,18.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,33.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,38.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,53.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,58.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,6,4,3));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,10.833333333333334f,-1.833333333333333f,0.833333333333333f,2.166666666666667f,0.833333333333333f,-1.833333333333333f,15.000000000000000f,-2.250000000000000f,1.250000000000000f,3.000000000000000f,1.250000000000000f,-2.250000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,27.500000000000000f,-3.500000000000000f,2.500000000000000f,5.500000000000000f,2.500000000000000f,-3.500000000000000f,31.666666666666668f,-3.916666666666667f,2.916666666666667f,6.333333333333333f,2.916666666666667f,-3.916666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,44.166666666666664f,-5.166666666666667f,4.166666666666667f,8.833333333333334f,4.166666666666667f,-5.166666666666667f,48.333333333333336f,-5.583333333333333f,4.583333333333333f,9.666666666666666f,4.583333333333333f,-5.583333333333333f};
ResRA.Reshape(new ILDimension(1,6,4,3));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,10.833333333333334f,-1.833333333333333f,0.833333333333333f,2.166666666666667f,0.833333333333333f,-1.833333333333333f,15.000000000000000f,-2.250000000000000f,1.250000000000000f,3.000000000000000f,1.250000000000000f,-2.250000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,27.500000000000000f,-3.500000000000000f,2.500000000000000f,5.500000000000000f,2.500000000000000f,-3.500000000000000f,31.666666666666668f,-3.916666666666667f,2.916666666666667f,6.333333333333333f,2.916666666666667f,-3.916666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,44.166666666666664f,-5.166666666666667f,4.166666666666667f,8.833333333333334f,4.166666666666667f,-5.166666666666667f,48.333333333333336f,-5.583333333333333f,4.583333333333333f,9.666666666666666f,4.583333333333333f,-5.583333333333333f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f,0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,0.000000000000000f,1.443375672974064f,2.020725942163690f,0.000000000000000f,-2.020725942163690f,-1.443375672974064f,0.000000000000000f,2.165063509461096f,2.742413778650722f,0.000000000000000f,-2.742413778650722f,-2.165063509461096f,0.000000000000000f,2.886751345948129f,3.464101615137755f,0.000000000000000f,-3.464101615137755f,-2.886751345948129f,0.000000000000000f,3.608439182435161f,4.185789451624786f,0.000000000000000f,-4.185789451624786f,-3.608439182435161f,0.000000000000000f,4.330127018922193f,4.907477288111819f,0.000000000000000f,-4.907477288111819f,-4.330127018922193f,0.000000000000000f,5.051814855409226f,5.629165124598852f,0.000000000000000f,-5.629165124598852f,-5.051814855409226f,0.000000000000000f,5.773502691896257f,6.350852961085884f,0.000000000000000f,-6.350852961085884f,-5.773502691896257f,0.000000000000000f,6.495190528383290f,7.072540797572915f,0.000000000000000f,-7.072540797572915f,-6.495190528383290f,0.000000000000000f,7.216878364870322f,7.794228634059947f,0.000000000000000f,-7.794228634059947f,-7.216878364870322f,0.000000000000000f,7.938566201357354f,8.515916470546980f,0.000000000000000f,-8.515916470546980f,-7.938566201357354f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,6);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,2.000000000000000f,2.000000000000000f,3.000000000000000f,3.000000000000000f,4.000000000000000f,4.000000000000000f,5.000000000000000f,5.000000000000000f,6.000000000000000f,6.000000000000000f,7.000000000000000f,7.000000000000000f,8.000000000000000f,8.000000000000000f,9.000000000000000f,9.000000000000000f,10.000000000000000f,10.000000000000000f,11.000000000000000f,11.000000000000000f,12.000000000000000f,12.000000000000000f,13.000000000000000f,13.000000000000000f,14.000000000000000f,14.000000000000000f,15.000000000000000f,15.000000000000000f,16.000000000000000f,16.000000000000000f,17.000000000000000f,17.000000000000000f,18.000000000000000f,18.000000000000000f,19.000000000000000f,19.000000000000000f,20.000000000000000f,20.000000000000000f,21.000000000000000f,21.000000000000000f,22.000000000000000f,22.000000000000000f,23.000000000000000f,23.000000000000000f,24.000000000000000f,24.000000000000000f,25.000000000000000f,25.000000000000000f,26.000000000000000f,26.000000000000000f,27.000000000000000f,27.000000000000000f,28.000000000000000f,28.000000000000000f,29.000000000000000f,29.000000000000000f,30.000000000000000f,30.000000000000000f,31.000000000000000f,31.000000000000000f,32.000000000000000f,32.000000000000000f,33.000000000000000f,33.000000000000000f,34.000000000000000f,34.000000000000000f,35.000000000000000f,35.000000000000000f,36.000000000000000f,36.000000000000000f,37.000000000000000f,37.000000000000000f,38.000000000000000f,38.000000000000000f,39.000000000000000f,39.000000000000000f,40.000000000000000f,40.000000000000000f,41.000000000000000f,41.000000000000000f,42.000000000000000f,42.000000000000000f,43.000000000000000f,43.000000000000000f,44.000000000000000f,44.000000000000000f,45.000000000000000f,45.000000000000000f,46.000000000000000f,46.000000000000000f,47.000000000000000f,47.000000000000000f,48.000000000000000f,48.000000000000000f,49.000000000000000f,49.000000000000000f,50.000000000000000f,50.000000000000000f,51.000000000000000f,51.000000000000000f,52.000000000000000f,52.000000000000000f,53.000000000000000f,53.000000000000000f,54.000000000000000f,54.000000000000000f,55.000000000000000f,55.000000000000000f,56.000000000000000f,56.000000000000000f,57.000000000000000f,57.000000000000000f,58.000000000000000f,58.000000000000000f,59.000000000000000f,59.000000000000000f,60.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,6.000000000000000f,6.000000000000000f,11.000000000000000f,11.000000000000000f,16.000000000000000f,16.000000000000000f,21.000000000000000f,21.000000000000000f,26.000000000000000f,26.000000000000000f,31.000000000000000f,31.000000000000000f,36.000000000000000f,36.000000000000000f,41.000000000000000f,41.000000000000000f,46.000000000000000f,46.000000000000000f,51.000000000000000f,51.000000000000000f,56.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4,3));
ResRA = new float[]{0.500000000000000f,0.500000000000000f,3.000000000000000f,3.000000000000000f,5.500000000000000f,5.500000000000000f,8.000000000000000f,8.000000000000000f,10.500000000000000f,10.500000000000000f,13.000000000000000f,13.000000000000000f,15.500000000000000f,15.500000000000000f,18.000000000000000f,18.000000000000000f,20.500000000000000f,20.500000000000000f,23.000000000000000f,23.000000000000000f,25.500000000000000f,25.500000000000000f,28.000000000000000f,28.000000000000000f};
ResRA.Reshape(new ILDimension(2,1,4,3));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f,3.000000000000000f,3.000000000000000f,5.500000000000000f,5.500000000000000f,8.000000000000000f,8.000000000000000f,10.500000000000000f,10.500000000000000f,13.000000000000000f,13.000000000000000f,15.500000000000000f,15.500000000000000f,18.000000000000000f,18.000000000000000f,20.500000000000000f,20.500000000000000f,23.000000000000000f,23.000000000000000f,25.500000000000000f,25.500000000000000f,28.000000000000000f,28.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,3.000000000000000f,-1.000000000000000f,-1.000000000000000f,13.000000000000000f,13.000000000000000f,-1.000000000000000f,-1.000000000000000f,23.000000000000000f,23.000000000000000f,-1.000000000000000f,-1.000000000000000f,33.000000000000000f,33.000000000000000f,-1.000000000000000f,-1.000000000000000f,43.000000000000000f,43.000000000000000f,-1.000000000000000f,-1.000000000000000f,53.000000000000000f,53.000000000000000f,-1.000000000000000f,-1.000000000000000f,63.000000000000000f,63.000000000000000f,-1.000000000000000f,-1.000000000000000f,73.000000000000000f,73.000000000000000f,-1.000000000000000f,-1.000000000000000f,83.000000000000000f,83.000000000000000f,-1.000000000000000f,-1.000000000000000f,93.000000000000000f,93.000000000000000f,-1.000000000000000f,-1.000000000000000f,103.000000000000000f,103.000000000000000f,-1.000000000000000f,-1.000000000000000f,113.000000000000000f,113.000000000000000f,-1.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4,3));
ResRA = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,3.250000000000000f,3.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.750000000000000f,5.750000000000000f,-0.250000000000000f,-0.250000000000000f,8.250000000000000f,8.250000000000000f,-0.250000000000000f,-0.250000000000000f,10.750000000000000f,10.750000000000000f,-0.250000000000000f,-0.250000000000000f,13.250000000000000f,13.250000000000000f,-0.250000000000000f,-0.250000000000000f,15.750000000000000f,15.750000000000000f,-0.250000000000000f,-0.250000000000000f,18.250000000000000f,18.250000000000000f,-0.250000000000000f,-0.250000000000000f,20.750000000000000f,20.750000000000000f,-0.250000000000000f,-0.250000000000000f,23.250000000000000f,23.250000000000000f,-0.250000000000000f,-0.250000000000000f,25.750000000000000f,25.750000000000000f,-0.250000000000000f,-0.250000000000000f,28.250000000000000f,28.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2,4,3));
ResIAR = new float[]{0.750000000000000f,0.750000000000000f,-0.250000000000000f,-0.250000000000000f,3.250000000000000f,3.250000000000000f,-0.250000000000000f,-0.250000000000000f,5.750000000000000f,5.750000000000000f,-0.250000000000000f,-0.250000000000000f,8.250000000000000f,8.250000000000000f,-0.250000000000000f,-0.250000000000000f,10.750000000000000f,10.750000000000000f,-0.250000000000000f,-0.250000000000000f,13.250000000000000f,13.250000000000000f,-0.250000000000000f,-0.250000000000000f,15.750000000000000f,15.750000000000000f,-0.250000000000000f,-0.250000000000000f,18.250000000000000f,18.250000000000000f,-0.250000000000000f,-0.250000000000000f,20.750000000000000f,20.750000000000000f,-0.250000000000000f,-0.250000000000000f,23.250000000000000f,23.250000000000000f,-0.250000000000000f,-0.250000000000000f,25.750000000000000f,25.750000000000000f,-0.250000000000000f,-0.250000000000000f,28.250000000000000f,28.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.000000000000000f,0.866025403784439f,0.866025403784439f,-0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,4,3));
ResRA = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.000000000000000f,11.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.500000000000000f,13.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.000000000000000f,16.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.500000000000000f,18.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.000000000000000f,21.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.500000000000000f,23.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.000000000000000f,26.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.500000000000000f,28.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,3,4,3));
ResIAR = new float[]{1.000000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.000000000000000f,11.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.500000000000000f,13.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.000000000000000f,16.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.500000000000000f,18.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.000000000000000f,21.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.500000000000000f,23.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.000000000000000f,26.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.500000000000000f,28.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f,0.000000000000000f,0.000000000000000f,-0.144337567297406f,-0.144337567297406f,0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{10.000000000000000f,10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f,0.000000000000000f,0.000000000000000f,2.000000000000000f,2.000000000000000f,0.000000000000000f,0.000000000000000f,-2.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,4,3));
ResRA = new float[]{1.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.250000000000000f,11.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.750000000000000f,13.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.250000000000000f,16.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.750000000000000f,18.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.250000000000000f,21.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.750000000000000f,23.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.250000000000000f,26.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.750000000000000f,28.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,4,4,3));
ResIAR = new float[]{1.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.250000000000000f,11.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.750000000000000f,13.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.250000000000000f,16.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.750000000000000f,18.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.250000000000000f,21.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.750000000000000f,23.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.250000000000000f,26.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.750000000000000f,28.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.250000000000000f,-0.250000000000000f,0.000000000000000f,0.000000000000000f,0.250000000000000f,0.250000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{15.000000000000000f,15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f,0.000000000000000f,0.000000000000000f,3.440954801177933f,3.440954801177933f,0.812299240582266f,0.812299240582266f,-0.812299240582266f,-0.812299240582266f,-3.440954801177933f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,4,3));
ResRA = new float[]{1.500000000000000f,1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.500000000000000f,11.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,14.000000000000000f,14.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.500000000000000f,16.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,19.000000000000000f,19.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.500000000000000f,21.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,24.000000000000000f,24.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.500000000000000f,26.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,29.000000000000000f,29.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,5,4,3));
ResIAR = new float[]{1.500000000000000f,1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.500000000000000f,11.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,14.000000000000000f,14.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.500000000000000f,16.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,19.000000000000000f,19.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.500000000000000f,21.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,24.000000000000000f,24.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.500000000000000f,26.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,29.000000000000000f,29.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f,0.000000000000000f,0.000000000000000f,-0.344095480117793f,-0.344095480117793f,-0.081229924058227f,-0.081229924058227f,0.081229924058227f,0.081229924058227f,0.344095480117793f,0.344095480117793f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{15.000000000000000f,15.000000000000000f,-6.000000000000000f,-6.000000000000000f,0.000000000000000f,0.000000000000000f,3.000000000000000f,3.000000000000000f,0.000000000000000f,0.000000000000000f,-6.000000000000000f,-6.000000000000000f,40.000000000000000f,40.000000000000000f,-8.500000000000000f,-8.500000000000000f,2.500000000000000f,2.500000000000000f,8.000000000000000f,8.000000000000000f,2.500000000000000f,2.500000000000000f,-8.500000000000000f,-8.500000000000000f,65.000000000000000f,65.000000000000000f,-11.000000000000000f,-11.000000000000000f,5.000000000000000f,5.000000000000000f,13.000000000000000f,13.000000000000000f,5.000000000000000f,5.000000000000000f,-11.000000000000000f,-11.000000000000000f,90.000000000000000f,90.000000000000000f,-13.500000000000000f,-13.500000000000000f,7.500000000000000f,7.500000000000000f,18.000000000000000f,18.000000000000000f,7.500000000000000f,7.500000000000000f,-13.500000000000000f,-13.500000000000000f,115.000000000000000f,115.000000000000000f,-16.000000000000000f,-16.000000000000000f,10.000000000000000f,10.000000000000000f,23.000000000000000f,23.000000000000000f,10.000000000000000f,10.000000000000000f,-16.000000000000000f,-16.000000000000000f,140.000000000000000f,140.000000000000000f,-18.500000000000000f,-18.500000000000000f,12.500000000000000f,12.500000000000000f,28.000000000000000f,28.000000000000000f,12.500000000000000f,12.500000000000000f,-18.500000000000000f,-18.500000000000000f,165.000000000000000f,165.000000000000000f,-21.000000000000000f,-21.000000000000000f,15.000000000000000f,15.000000000000000f,33.000000000000000f,33.000000000000000f,15.000000000000000f,15.000000000000000f,-21.000000000000000f,-21.000000000000000f,190.000000000000000f,190.000000000000000f,-23.500000000000000f,-23.500000000000000f,17.500000000000000f,17.500000000000000f,38.000000000000000f,38.000000000000000f,17.500000000000000f,17.500000000000000f,-23.500000000000000f,-23.500000000000000f,215.000000000000000f,215.000000000000000f,-26.000000000000000f,-26.000000000000000f,20.000000000000000f,20.000000000000000f,43.000000000000000f,43.000000000000000f,20.000000000000000f,20.000000000000000f,-26.000000000000000f,-26.000000000000000f,240.000000000000000f,240.000000000000000f,-28.500000000000000f,-28.500000000000000f,22.500000000000000f,22.500000000000000f,48.000000000000000f,48.000000000000000f,22.500000000000000f,22.500000000000000f,-28.500000000000000f,-28.500000000000000f,265.000000000000000f,265.000000000000000f,-31.000000000000000f,-31.000000000000000f,25.000000000000000f,25.000000000000000f,53.000000000000000f,53.000000000000000f,25.000000000000000f,25.000000000000000f,-31.000000000000000f,-31.000000000000000f,290.000000000000000f,290.000000000000000f,-33.500000000000000f,-33.500000000000000f,27.500000000000000f,27.500000000000000f,58.000000000000000f,58.000000000000000f,27.500000000000000f,27.500000000000000f,-33.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-3.464101615137754f,-3.464101615137754f,0.000000000000000f,0.000000000000000f,3.464101615137754f,3.464101615137754f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,-7.794228634059947f,-7.794228634059947f,0.000000000000000f,0.000000000000000f,7.794228634059947f,7.794228634059947f,4.330127018922193f,4.330127018922193f,0.000000000000000f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-12.124355652982141f,-12.124355652982141f,0.000000000000000f,0.000000000000000f,12.124355652982141f,12.124355652982141f,8.660254037844386f,8.660254037844386f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,-12.990381056766578f,-16.454482671904334f,-16.454482671904334f,0.000000000000000f,0.000000000000000f,16.454482671904334f,16.454482671904334f,12.990381056766578f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,-17.320508075688771f,-20.784609690826528f,-20.784609690826528f,0.000000000000000f,0.000000000000000f,20.784609690826528f,20.784609690826528f,17.320508075688771f,17.320508075688771f,0.000000000000000f,0.000000000000000f,-21.650635094610966f,-21.650635094610966f,-25.114736709748719f,-25.114736709748719f,0.000000000000000f,0.000000000000000f,25.114736709748719f,25.114736709748719f,21.650635094610966f,21.650635094610966f,0.000000000000000f,0.000000000000000f,-25.980762113533157f,-25.980762113533157f,-29.444863728670914f,-29.444863728670914f,0.000000000000000f,0.000000000000000f,29.444863728670914f,29.444863728670914f,25.980762113533157f,25.980762113533157f,0.000000000000000f,0.000000000000000f,-30.310889132455351f,-30.310889132455351f,-33.774990747593108f,-33.774990747593108f,0.000000000000000f,0.000000000000000f,33.774990747593108f,33.774990747593108f,30.310889132455351f,30.310889132455351f,0.000000000000000f,0.000000000000000f,-34.641016151377542f,-34.641016151377542f,-38.105117766515299f,-38.105117766515299f,0.000000000000000f,0.000000000000000f,38.105117766515299f,38.105117766515299f,34.641016151377542f,34.641016151377542f,0.000000000000000f,0.000000000000000f,-38.971143170299740f,-38.971143170299740f,-42.435244785437490f,-42.435244785437490f,0.000000000000000f,0.000000000000000f,42.435244785437490f,42.435244785437490f,38.971143170299740f,38.971143170299740f,0.000000000000000f,0.000000000000000f,-43.301270189221931f,-43.301270189221931f,-46.765371804359681f,-46.765371804359681f,0.000000000000000f,0.000000000000000f,46.765371804359681f,46.765371804359681f,43.301270189221931f,43.301270189221931f,0.000000000000000f,0.000000000000000f,-47.631397208144122f,-47.631397208144122f,-51.095498823281879f,-51.095498823281879f,0.000000000000000f,0.000000000000000f,51.095498823281879f,51.095498823281879f,47.631397208144122f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,6,4,3));
ResRA = new float[]{1.250000000000000f,1.250000000000000f,-0.500000000000000f,-0.500000000000000f,-0.000000000000000f,-0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,-0.500000000000000f,3.333333333333334f,3.333333333333334f,-0.708333333333333f,-0.708333333333333f,0.208333333333333f,0.208333333333333f,0.666666666666667f,0.666666666666667f,0.208333333333333f,0.208333333333333f,-0.708333333333333f,-0.708333333333333f,5.416666666666667f,5.416666666666667f,-0.916666666666667f,-0.916666666666667f,0.416666666666667f,0.416666666666667f,1.083333333333333f,1.083333333333333f,0.416666666666667f,0.416666666666667f,-0.916666666666667f,-0.916666666666667f,7.500000000000000f,7.500000000000000f,-1.125000000000000f,-1.125000000000000f,0.625000000000000f,0.625000000000000f,1.500000000000000f,1.500000000000000f,0.625000000000000f,0.625000000000000f,-1.125000000000000f,-1.125000000000000f,9.583333333333334f,9.583333333333334f,-1.333333333333333f,-1.333333333333333f,0.833333333333333f,0.833333333333333f,1.916666666666667f,1.916666666666667f,0.833333333333333f,0.833333333333333f,-1.333333333333333f,-1.333333333333333f,11.666666666666666f,11.666666666666666f,-1.541666666666667f,-1.541666666666667f,1.041666666666667f,1.041666666666667f,2.333333333333334f,2.333333333333334f,1.041666666666667f,1.041666666666667f,-1.541666666666667f,-1.541666666666667f,13.750000000000000f,13.750000000000000f,-1.750000000000000f,-1.750000000000000f,1.250000000000000f,1.250000000000000f,2.750000000000000f,2.750000000000000f,1.250000000000000f,1.250000000000000f,-1.750000000000000f,-1.750000000000000f,15.833333333333334f,15.833333333333334f,-1.958333333333333f,-1.958333333333333f,1.458333333333333f,1.458333333333333f,3.166666666666667f,3.166666666666667f,1.458333333333333f,1.458333333333333f,-1.958333333333333f,-1.958333333333333f,17.916666666666668f,17.916666666666668f,-2.166666666666667f,-2.166666666666667f,1.666666666666667f,1.666666666666667f,3.583333333333334f,3.583333333333334f,1.666666666666667f,1.666666666666667f,-2.166666666666667f,-2.166666666666667f,20.000000000000000f,20.000000000000000f,-2.375000000000000f,-2.375000000000000f,1.875000000000000f,1.875000000000000f,4.000000000000000f,4.000000000000000f,1.875000000000000f,1.875000000000000f,-2.375000000000000f,-2.375000000000000f,22.083333333333332f,22.083333333333332f,-2.583333333333334f,-2.583333333333334f,2.083333333333334f,2.083333333333334f,4.416666666666667f,4.416666666666667f,2.083333333333334f,2.083333333333334f,-2.583333333333334f,-2.583333333333334f,24.166666666666668f,24.166666666666668f,-2.791666666666667f,-2.791666666666667f,2.291666666666667f,2.291666666666667f,4.833333333333333f,4.833333333333333f,2.291666666666667f,2.291666666666667f,-2.791666666666667f,-2.791666666666667f};
ResRA.Reshape(new ILDimension(2,6,4,3));
ResIAR = new float[]{1.250000000000000f,1.250000000000000f,-0.500000000000000f,-0.500000000000000f,-0.000000000000000f,-0.000000000000000f,0.250000000000000f,0.250000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,-0.500000000000000f,3.333333333333334f,3.333333333333334f,-0.708333333333333f,-0.708333333333333f,0.208333333333333f,0.208333333333333f,0.666666666666667f,0.666666666666667f,0.208333333333333f,0.208333333333333f,-0.708333333333333f,-0.708333333333333f,5.416666666666667f,5.416666666666667f,-0.916666666666667f,-0.916666666666667f,0.416666666666667f,0.416666666666667f,1.083333333333333f,1.083333333333333f,0.416666666666667f,0.416666666666667f,-0.916666666666667f,-0.916666666666667f,7.500000000000000f,7.500000000000000f,-1.125000000000000f,-1.125000000000000f,0.625000000000000f,0.625000000000000f,1.500000000000000f,1.500000000000000f,0.625000000000000f,0.625000000000000f,-1.125000000000000f,-1.125000000000000f,9.583333333333334f,9.583333333333334f,-1.333333333333333f,-1.333333333333333f,0.833333333333333f,0.833333333333333f,1.916666666666667f,1.916666666666667f,0.833333333333333f,0.833333333333333f,-1.333333333333333f,-1.333333333333333f,11.666666666666666f,11.666666666666666f,-1.541666666666667f,-1.541666666666667f,1.041666666666667f,1.041666666666667f,2.333333333333334f,2.333333333333334f,1.041666666666667f,1.041666666666667f,-1.541666666666667f,-1.541666666666667f,13.750000000000000f,13.750000000000000f,-1.750000000000000f,-1.750000000000000f,1.250000000000000f,1.250000000000000f,2.750000000000000f,2.750000000000000f,1.250000000000000f,1.250000000000000f,-1.750000000000000f,-1.750000000000000f,15.833333333333334f,15.833333333333334f,-1.958333333333333f,-1.958333333333333f,1.458333333333333f,1.458333333333333f,3.166666666666667f,3.166666666666667f,1.458333333333333f,1.458333333333333f,-1.958333333333333f,-1.958333333333333f,17.916666666666668f,17.916666666666668f,-2.166666666666667f,-2.166666666666667f,1.666666666666667f,1.666666666666667f,3.583333333333334f,3.583333333333334f,1.666666666666667f,1.666666666666667f,-2.166666666666667f,-2.166666666666667f,20.000000000000000f,20.000000000000000f,-2.375000000000000f,-2.375000000000000f,1.875000000000000f,1.875000000000000f,4.000000000000000f,4.000000000000000f,1.875000000000000f,1.875000000000000f,-2.375000000000000f,-2.375000000000000f,22.083333333333332f,22.083333333333332f,-2.583333333333334f,-2.583333333333334f,2.083333333333334f,2.083333333333334f,4.416666666666667f,4.416666666666667f,2.083333333333334f,2.083333333333334f,-2.583333333333334f,-2.583333333333334f,24.166666666666668f,24.166666666666668f,-2.791666666666667f,-2.791666666666667f,2.291666666666667f,2.291666666666667f,4.833333333333333f,4.833333333333333f,2.291666666666667f,2.291666666666667f,-2.791666666666667f,-2.791666666666667f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-0.000000000000000f,-0.000000000000000f,0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,-0.288675134594813f,-0.000000000000000f,-0.000000000000000f,0.000000000000000f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.649519052838329f,0.649519052838329f,0.000000000000000f,0.000000000000000f,-0.649519052838329f,-0.649519052838329f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.000000000000000f,0.721687836487032f,0.721687836487032f,1.010362971081845f,1.010362971081845f,0.000000000000000f,0.000000000000000f,-1.010362971081845f,-1.010362971081845f,-0.721687836487032f,-0.721687836487032f,0.000000000000000f,0.000000000000000f,1.082531754730548f,1.082531754730548f,1.371206889325361f,1.371206889325361f,0.000000000000000f,0.000000000000000f,-1.371206889325361f,-1.371206889325361f,-1.082531754730548f,-1.082531754730548f,0.000000000000000f,0.000000000000000f,1.443375672974064f,1.443375672974064f,1.732050807568877f,1.732050807568877f,0.000000000000000f,0.000000000000000f,-1.732050807568877f,-1.732050807568877f,-1.443375672974064f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.804219591217581f,1.804219591217581f,2.092894725812393f,2.092894725812393f,0.000000000000000f,0.000000000000000f,-2.092894725812393f,-2.092894725812393f,-1.804219591217581f,-1.804219591217581f,0.000000000000000f,0.000000000000000f,2.165063509461096f,2.165063509461096f,2.453738644055910f,2.453738644055910f,0.000000000000000f,0.000000000000000f,-2.453738644055910f,-2.453738644055910f,-2.165063509461096f,-2.165063509461096f,0.000000000000000f,0.000000000000000f,2.525907427704613f,2.525907427704613f,2.814582562299426f,2.814582562299426f,0.000000000000000f,0.000000000000000f,-2.814582562299426f,-2.814582562299426f,-2.525907427704613f,-2.525907427704613f,0.000000000000000f,0.000000000000000f,2.886751345948129f,2.886751345948129f,3.175426480542942f,3.175426480542942f,0.000000000000000f,0.000000000000000f,-3.175426480542942f,-3.175426480542942f,-2.886751345948129f,-2.886751345948129f,0.000000000000000f,0.000000000000000f,3.247595264191645f,3.247595264191645f,3.536270398786458f,3.536270398786458f,0.000000000000000f,0.000000000000000f,-3.536270398786458f,-3.536270398786458f,-3.247595264191645f,-3.247595264191645f,0.000000000000000f,0.000000000000000f,3.608439182435161f,3.608439182435161f,3.897114317029974f,3.897114317029974f,0.000000000000000f,0.000000000000000f,-3.897114317029974f,-3.897114317029974f,-3.608439182435161f,-3.608439182435161f,0.000000000000000f,0.000000000000000f,3.969283100678677f,3.969283100678677f,4.257958235273490f,4.257958235273490f,0.000000000000000f,0.000000000000000f,-4.257958235273490f,-4.257958235273490f,-3.969283100678677f,-3.969283100678677f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,6);
}
private static void TEST_FFT_float_fcomplex_15() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
A.Reshape(new ILDimension(5,1,4,3));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4,3));
ResRA = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,4,3));
ResIAR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,6.000000000000000f,6.000000000000000f,11.000000000000000f,11.000000000000000f,16.000000000000000f,16.000000000000000f,21.000000000000000f,21.000000000000000f,26.000000000000000f,26.000000000000000f,31.000000000000000f,31.000000000000000f,36.000000000000000f,36.000000000000000f,41.000000000000000f,41.000000000000000f,46.000000000000000f,46.000000000000000f,51.000000000000000f,51.000000000000000f,56.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4,3));
ResRA = new float[]{0.500000000000000f,0.500000000000000f,3.000000000000000f,3.000000000000000f,5.500000000000000f,5.500000000000000f,8.000000000000000f,8.000000000000000f,10.500000000000000f,10.500000000000000f,13.000000000000000f,13.000000000000000f,15.500000000000000f,15.500000000000000f,18.000000000000000f,18.000000000000000f,20.500000000000000f,20.500000000000000f,23.000000000000000f,23.000000000000000f,25.500000000000000f,25.500000000000000f,28.000000000000000f,28.000000000000000f};
ResRA.Reshape(new ILDimension(1,2,4,3));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f,3.000000000000000f,3.000000000000000f,5.500000000000000f,5.500000000000000f,8.000000000000000f,8.000000000000000f,10.500000000000000f,10.500000000000000f,13.000000000000000f,13.000000000000000f,15.500000000000000f,15.500000000000000f,18.000000000000000f,18.000000000000000f,20.500000000000000f,20.500000000000000f,23.000000000000000f,23.000000000000000f,25.500000000000000f,25.500000000000000f,28.000000000000000f,28.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,11.500000000000000f,-0.500000000000000f,16.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,26.500000000000000f,-0.500000000000000f,31.500000000000000f,-0.500000000000000f,36.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f,46.500000000000000f,-0.500000000000000f,51.500000000000000f,-0.500000000000000f,56.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,4,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,11.500000000000000f,-0.500000000000000f,16.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,26.500000000000000f,-0.500000000000000f,31.500000000000000f,-0.500000000000000f,36.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f,46.500000000000000f,-0.500000000000000f,51.500000000000000f,-0.500000000000000f,56.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4,3));
ResRA = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f,10.750000000000000f,-0.250000000000000f,10.750000000000000f,-0.250000000000000f,13.250000000000000f,-0.250000000000000f,13.250000000000000f,-0.250000000000000f,15.750000000000000f,-0.250000000000000f,15.750000000000000f,-0.250000000000000f,18.250000000000000f,-0.250000000000000f,18.250000000000000f,-0.250000000000000f,20.750000000000000f,-0.250000000000000f,20.750000000000000f,-0.250000000000000f,23.250000000000000f,-0.250000000000000f,23.250000000000000f,-0.250000000000000f,25.750000000000000f,-0.250000000000000f,25.750000000000000f,-0.250000000000000f,28.250000000000000f,-0.250000000000000f,28.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2,4,3));
ResIAR = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f,10.750000000000000f,-0.250000000000000f,10.750000000000000f,-0.250000000000000f,13.250000000000000f,-0.250000000000000f,13.250000000000000f,-0.250000000000000f,15.750000000000000f,-0.250000000000000f,15.750000000000000f,-0.250000000000000f,18.250000000000000f,-0.250000000000000f,18.250000000000000f,-0.250000000000000f,20.750000000000000f,-0.250000000000000f,20.750000000000000f,-0.250000000000000f,23.250000000000000f,-0.250000000000000f,23.250000000000000f,-0.250000000000000f,25.750000000000000f,-0.250000000000000f,25.750000000000000f,-0.250000000000000f,28.250000000000000f,-0.250000000000000f,28.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,7.000000000000000f,-0.500000000000000f,-0.500000000000000f,12.000000000000000f,-0.500000000000000f,-0.500000000000000f,17.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,32.000000000000000f,-0.500000000000000f,-0.500000000000000f,37.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,52.000000000000000f,-0.500000000000000f,-0.500000000000000f,57.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,4,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,7.000000000000000f,-0.500000000000000f,-0.500000000000000f,12.000000000000000f,-0.500000000000000f,-0.500000000000000f,17.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,32.000000000000000f,-0.500000000000000f,-0.500000000000000f,37.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,52.000000000000000f,-0.500000000000000f,-0.500000000000000f,57.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,4,3));
ResRA = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,11.000000000000000f,-0.250000000000000f,-0.250000000000000f,11.000000000000000f,-0.250000000000000f,-0.250000000000000f,13.500000000000000f,-0.250000000000000f,-0.250000000000000f,13.500000000000000f,-0.250000000000000f,-0.250000000000000f,16.000000000000000f,-0.250000000000000f,-0.250000000000000f,16.000000000000000f,-0.250000000000000f,-0.250000000000000f,18.500000000000000f,-0.250000000000000f,-0.250000000000000f,18.500000000000000f,-0.250000000000000f,-0.250000000000000f,21.000000000000000f,-0.250000000000000f,-0.250000000000000f,21.000000000000000f,-0.250000000000000f,-0.250000000000000f,23.500000000000000f,-0.250000000000000f,-0.250000000000000f,23.500000000000000f,-0.250000000000000f,-0.250000000000000f,26.000000000000000f,-0.250000000000000f,-0.250000000000000f,26.000000000000000f,-0.250000000000000f,-0.250000000000000f,28.500000000000000f,-0.250000000000000f,-0.250000000000000f,28.500000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(3,2,4,3));
ResIAR = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,11.000000000000000f,-0.250000000000000f,-0.250000000000000f,11.000000000000000f,-0.250000000000000f,-0.250000000000000f,13.500000000000000f,-0.250000000000000f,-0.250000000000000f,13.500000000000000f,-0.250000000000000f,-0.250000000000000f,16.000000000000000f,-0.250000000000000f,-0.250000000000000f,16.000000000000000f,-0.250000000000000f,-0.250000000000000f,18.500000000000000f,-0.250000000000000f,-0.250000000000000f,18.500000000000000f,-0.250000000000000f,-0.250000000000000f,21.000000000000000f,-0.250000000000000f,-0.250000000000000f,21.000000000000000f,-0.250000000000000f,-0.250000000000000f,23.500000000000000f,-0.250000000000000f,-0.250000000000000f,23.500000000000000f,-0.250000000000000f,-0.250000000000000f,26.000000000000000f,-0.250000000000000f,-0.250000000000000f,26.000000000000000f,-0.250000000000000f,-0.250000000000000f,28.500000000000000f,-0.250000000000000f,-0.250000000000000f,28.500000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4,3));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,12.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,17.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,32.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,37.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,52.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,57.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,4,3));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,12.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,17.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,32.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,37.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,52.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,57.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,4,3));
ResRA = new float[]{1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(4,2,4,3));
ResIAR = new float[]{1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,13.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,18.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,23.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,28.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4,3));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,13.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,18.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,33.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,38.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,53.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,58.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(5,1,4,3));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,13.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,18.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,33.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,38.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,53.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,58.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4,3));
ResRA = new float[]{1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,14.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,14.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,19.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,19.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,24.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,24.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,29.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,29.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(5,2,4,3));
ResIAR = new float[]{1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,11.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,14.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,14.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,16.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,19.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,19.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,21.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,24.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,24.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,26.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,29.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,29.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(6,0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4,3));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,10.833333333333334f,-1.833333333333333f,0.833333333333333f,2.166666666666667f,0.833333333333333f,-1.833333333333333f,15.000000000000000f,-2.250000000000000f,1.250000000000000f,3.000000000000000f,1.250000000000000f,-2.250000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,27.500000000000000f,-3.500000000000000f,2.500000000000000f,5.500000000000000f,2.500000000000000f,-3.500000000000000f,31.666666666666668f,-3.916666666666667f,2.916666666666667f,6.333333333333333f,2.916666666666667f,-3.916666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,44.166666666666664f,-5.166666666666667f,4.166666666666667f,8.833333333333334f,4.166666666666667f,-5.166666666666667f,48.333333333333336f,-5.583333333333333f,4.583333333333333f,9.666666666666666f,4.583333333333333f,-5.583333333333333f};
ResRA.Reshape(new ILDimension(6,1,4,3));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,10.833333333333334f,-1.833333333333333f,0.833333333333333f,2.166666666666667f,0.833333333333333f,-1.833333333333333f,15.000000000000000f,-2.250000000000000f,1.250000000000000f,3.000000000000000f,1.250000000000000f,-2.250000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,27.500000000000000f,-3.500000000000000f,2.500000000000000f,5.500000000000000f,2.500000000000000f,-3.500000000000000f,31.666666666666668f,-3.916666666666667f,2.916666666666667f,6.333333333333333f,2.916666666666667f,-3.916666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,44.166666666666664f,-5.166666666666667f,4.166666666666667f,8.833333333333334f,4.166666666666667f,-5.166666666666667f,48.333333333333336f,-5.583333333333333f,4.583333333333333f,9.666666666666666f,4.583333333333333f,-5.583333333333333f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f,0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,0.000000000000000f,1.443375672974064f,2.020725942163690f,0.000000000000000f,-2.020725942163690f,-1.443375672974064f,0.000000000000000f,2.165063509461096f,2.742413778650722f,0.000000000000000f,-2.742413778650722f,-2.165063509461096f,0.000000000000000f,2.886751345948129f,3.464101615137755f,0.000000000000000f,-3.464101615137755f,-2.886751345948129f,0.000000000000000f,3.608439182435161f,4.185789451624786f,0.000000000000000f,-4.185789451624786f,-3.608439182435161f,0.000000000000000f,4.330127018922193f,4.907477288111819f,0.000000000000000f,-4.907477288111819f,-4.330127018922193f,0.000000000000000f,5.051814855409226f,5.629165124598852f,0.000000000000000f,-5.629165124598852f,-5.051814855409226f,0.000000000000000f,5.773502691896257f,6.350852961085884f,0.000000000000000f,-6.350852961085884f,-5.773502691896257f,0.000000000000000f,6.495190528383290f,7.072540797572915f,0.000000000000000f,-7.072540797572915f,-6.495190528383290f,0.000000000000000f,7.216878364870322f,7.794228634059947f,0.000000000000000f,-7.794228634059947f,-7.216878364870322f,0.000000000000000f,7.938566201357354f,8.515916470546980f,0.000000000000000f,-8.515916470546980f,-7.938566201357354f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,4,3));
ResRA = new float[]{1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f,9.583333333333334f,-1.333333333333333f,0.833333333333333f,1.916666666666667f,0.833333333333333f,-1.333333333333333f,9.583333333333334f,-1.333333333333333f,0.833333333333333f,1.916666666666667f,0.833333333333333f,-1.333333333333333f,11.666666666666666f,-1.541666666666667f,1.041666666666667f,2.333333333333334f,1.041666666666667f,-1.541666666666667f,11.666666666666666f,-1.541666666666667f,1.041666666666667f,2.333333333333334f,1.041666666666667f,-1.541666666666667f,13.750000000000000f,-1.750000000000000f,1.250000000000000f,2.750000000000000f,1.250000000000000f,-1.750000000000000f,13.750000000000000f,-1.750000000000000f,1.250000000000000f,2.750000000000000f,1.250000000000000f,-1.750000000000000f,15.833333333333334f,-1.958333333333333f,1.458333333333333f,3.166666666666667f,1.458333333333333f,-1.958333333333333f,15.833333333333334f,-1.958333333333333f,1.458333333333333f,3.166666666666667f,1.458333333333333f,-1.958333333333333f,17.916666666666668f,-2.166666666666667f,1.666666666666667f,3.583333333333334f,1.666666666666667f,-2.166666666666667f,17.916666666666668f,-2.166666666666667f,1.666666666666667f,3.583333333333334f,1.666666666666667f,-2.166666666666667f,20.000000000000000f,-2.375000000000000f,1.875000000000000f,4.000000000000000f,1.875000000000000f,-2.375000000000000f,20.000000000000000f,-2.375000000000000f,1.875000000000000f,4.000000000000000f,1.875000000000000f,-2.375000000000000f,22.083333333333332f,-2.583333333333334f,2.083333333333334f,4.416666666666667f,2.083333333333334f,-2.583333333333334f,22.083333333333332f,-2.583333333333334f,2.083333333333334f,4.416666666666667f,2.083333333333334f,-2.583333333333334f,24.166666666666668f,-2.791666666666667f,2.291666666666667f,4.833333333333333f,2.291666666666667f,-2.791666666666667f,24.166666666666668f,-2.791666666666667f,2.291666666666667f,4.833333333333333f,2.291666666666667f,-2.791666666666667f};
ResRA.Reshape(new ILDimension(6,2,4,3));
ResIAR = new float[]{1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f,9.583333333333334f,-1.333333333333333f,0.833333333333333f,1.916666666666667f,0.833333333333333f,-1.333333333333333f,9.583333333333334f,-1.333333333333333f,0.833333333333333f,1.916666666666667f,0.833333333333333f,-1.333333333333333f,11.666666666666666f,-1.541666666666667f,1.041666666666667f,2.333333333333334f,1.041666666666667f,-1.541666666666667f,11.666666666666666f,-1.541666666666667f,1.041666666666667f,2.333333333333334f,1.041666666666667f,-1.541666666666667f,13.750000000000000f,-1.750000000000000f,1.250000000000000f,2.750000000000000f,1.250000000000000f,-1.750000000000000f,13.750000000000000f,-1.750000000000000f,1.250000000000000f,2.750000000000000f,1.250000000000000f,-1.750000000000000f,15.833333333333334f,-1.958333333333333f,1.458333333333333f,3.166666666666667f,1.458333333333333f,-1.958333333333333f,15.833333333333334f,-1.958333333333333f,1.458333333333333f,3.166666666666667f,1.458333333333333f,-1.958333333333333f,17.916666666666668f,-2.166666666666667f,1.666666666666667f,3.583333333333334f,1.666666666666667f,-2.166666666666667f,17.916666666666668f,-2.166666666666667f,1.666666666666667f,3.583333333333334f,1.666666666666667f,-2.166666666666667f,20.000000000000000f,-2.375000000000000f,1.875000000000000f,4.000000000000000f,1.875000000000000f,-2.375000000000000f,20.000000000000000f,-2.375000000000000f,1.875000000000000f,4.000000000000000f,1.875000000000000f,-2.375000000000000f,22.083333333333332f,-2.583333333333334f,2.083333333333334f,4.416666666666667f,2.083333333333334f,-2.583333333333334f,22.083333333333332f,-2.583333333333334f,2.083333333333334f,4.416666666666667f,2.083333333333334f,-2.583333333333334f,24.166666666666668f,-2.791666666666667f,2.291666666666667f,4.833333333333333f,2.291666666666667f,-2.791666666666667f,24.166666666666668f,-2.791666666666667f,2.291666666666667f,4.833333333333333f,2.291666666666667f,-2.791666666666667f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,-0.000000000000000f,0.000000000000000f,-0.000000000000000f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,-0.000000000000000f,0.000000000000000f,0.360843918243516f,0.649519052838329f,0.000000000000000f,-0.649519052838329f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.649519052838329f,0.000000000000000f,-0.649519052838329f,-0.360843918243516f,0.000000000000000f,0.721687836487032f,1.010362971081845f,0.000000000000000f,-1.010362971081845f,-0.721687836487032f,0.000000000000000f,0.721687836487032f,1.010362971081845f,0.000000000000000f,-1.010362971081845f,-0.721687836487032f,0.000000000000000f,1.082531754730548f,1.371206889325361f,0.000000000000000f,-1.371206889325361f,-1.082531754730548f,0.000000000000000f,1.082531754730548f,1.371206889325361f,0.000000000000000f,-1.371206889325361f,-1.082531754730548f,0.000000000000000f,1.443375672974064f,1.732050807568877f,0.000000000000000f,-1.732050807568877f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,1.732050807568877f,0.000000000000000f,-1.732050807568877f,-1.443375672974064f,0.000000000000000f,1.804219591217581f,2.092894725812393f,0.000000000000000f,-2.092894725812393f,-1.804219591217581f,0.000000000000000f,1.804219591217581f,2.092894725812393f,0.000000000000000f,-2.092894725812393f,-1.804219591217581f,0.000000000000000f,2.165063509461096f,2.453738644055910f,0.000000000000000f,-2.453738644055910f,-2.165063509461096f,0.000000000000000f,2.165063509461096f,2.453738644055910f,0.000000000000000f,-2.453738644055910f,-2.165063509461096f,0.000000000000000f,2.525907427704613f,2.814582562299426f,0.000000000000000f,-2.814582562299426f,-2.525907427704613f,0.000000000000000f,2.525907427704613f,2.814582562299426f,0.000000000000000f,-2.814582562299426f,-2.525907427704613f,0.000000000000000f,2.886751345948129f,3.175426480542942f,0.000000000000000f,-3.175426480542942f,-2.886751345948129f,0.000000000000000f,2.886751345948129f,3.175426480542942f,0.000000000000000f,-3.175426480542942f,-2.886751345948129f,0.000000000000000f,3.247595264191645f,3.536270398786458f,0.000000000000000f,-3.536270398786458f,-3.247595264191645f,0.000000000000000f,3.247595264191645f,3.536270398786458f,0.000000000000000f,-3.536270398786458f,-3.247595264191645f,0.000000000000000f,3.608439182435161f,3.897114317029974f,0.000000000000000f,-3.897114317029974f,-3.608439182435161f,0.000000000000000f,3.608439182435161f,3.897114317029974f,0.000000000000000f,-3.897114317029974f,-3.608439182435161f,0.000000000000000f,3.969283100678677f,4.257958235273490f,0.000000000000000f,-4.257958235273490f,-3.969283100678677f,0.000000000000000f,3.969283100678677f,4.257958235273490f,0.000000000000000f,-4.257958235273490f,-3.969283100678677f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
}
private static void TEST_FFT_float_fcomplex_16() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
A.Reshape(new ILDimension(5,4,1,3));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{7.000000000000000f,9.000000000000000f,11.000000000000000f,13.000000000000000f,15.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,47.000000000000000f,49.000000000000000f,51.000000000000000f,53.000000000000000f,55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,87.000000000000000f,89.000000000000000f,91.000000000000000f,93.000000000000000f,95.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{18.000000000000000f,21.000000000000000f,24.000000000000000f,27.000000000000000f,30.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,78.000000000000000f,81.000000000000000f,84.000000000000000f,87.000000000000000f,90.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,138.000000000000000f,141.000000000000000f,144.000000000000000f,147.000000000000000f,150.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{34.000000000000000f,38.000000000000000f,42.000000000000000f,46.000000000000000f,50.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,114.000000000000000f,118.000000000000000f,122.000000000000000f,126.000000000000000f,130.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,194.000000000000000f,198.000000000000000f,202.000000000000000f,206.000000000000000f,210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{34.000000000000000f,38.000000000000000f,42.000000000000000f,46.000000000000000f,50.000000000000000f,-18.989356881873896f,-19.298373876248846f,-19.607390870623792f,-19.916407864998739f,-20.225424859373685f,4.489356881873896f,5.298373876248844f,6.107390870623792f,6.916407864998739f,7.725424859373685f,4.489356881873896f,5.298373876248844f,6.107390870623792f,6.916407864998739f,7.725424859373685f,-18.989356881873896f,-19.298373876248846f,-19.607390870623792f,-19.916407864998739f,-20.225424859373685f,114.000000000000000f,118.000000000000000f,122.000000000000000f,126.000000000000000f,130.000000000000000f,-25.169696769372845f,-25.478713763747791f,-25.787730758122741f,-26.096747752497688f,-26.405764746872634f,20.669696769372845f,21.478713763747791f,22.287730758122741f,23.096747752497688f,23.905764746872634f,20.669696769372845f,21.478713763747791f,22.287730758122741f,23.096747752497688f,23.905764746872634f,-25.169696769372845f,-25.478713763747791f,-25.787730758122741f,-26.096747752497688f,-26.405764746872634f,194.000000000000000f,198.000000000000000f,202.000000000000000f,206.000000000000000f,210.000000000000000f,-31.350036656871794f,-31.659053651246744f,-31.968070645621687f,-32.277087639996637f,-32.586104634371587f,36.850036656871794f,37.659053651246744f,38.468070645621687f,39.277087639996637f,40.086104634371587f,36.850036656871794f,37.659053651246744f,38.468070645621687f,39.277087639996637f,40.086104634371587f,-31.350036656871794f,-31.659053651246744f,-31.968070645621687f,-32.277087639996637f,-32.586104634371587f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.767412836308555f,-3.718469352603709f,-4.669525868898862f,-5.620582385194015f,-6.571638901489169f,-8.281994095230607f,-8.869779347523078f,-9.457564599815552f,-10.045349852108025f,-10.633135104400498f,8.281994095230607f,8.869779347523078f,9.457564599815552f,10.045349852108025f,10.633135104400498f,2.767412836308555f,3.718469352603709f,4.669525868898862f,5.620582385194015f,6.571638901489169f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.788543162211624f,-22.739599678506778f,-23.690656194801932f,-24.641712711097085f,-25.592769227392239f,-20.037699141080068f,-20.625484393372542f,-21.213269645665015f,-21.801054897957489f,-22.388840150249962f,20.037699141080068f,20.625484393372542f,21.213269645665015f,21.801054897957489f,22.388840150249962f,21.788543162211624f,22.739599678506778f,23.690656194801932f,24.641712711097085f,25.592769227392239f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.809673488114697f,-41.760730004409851f,-42.711786520705004f,-43.662843037000158f,-44.613899553295312f,-31.793404186929532f,-32.381189439222005f,-32.968974691514475f,-33.556759943806952f,-34.144545196099422f,31.793404186929532f,32.381189439222005f,32.968974691514475f,33.556759943806952f,34.144545196099422f,40.809673488114697f,41.760730004409851f,42.711786520705004f,43.662843037000158f,44.613899553295312f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,1,3));
ResRA = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,1,3));
ResIAR = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{7.000000000000000f,-5.000000000000000f,47.000000000000000f,-5.000000000000000f,87.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,1,3));
ResRA = new float[]{3.500000000000000f,-2.500000000000000f,23.500000000000000f,-2.500000000000000f,43.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,1,3));
ResIAR = new float[]{3.500000000000000f,-2.500000000000000f,23.500000000000000f,-2.500000000000000f,43.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{18.000000000000000f,-7.500000000000000f,-7.500000000000000f,78.000000000000000f,-7.500000000000000f,-7.500000000000000f,138.000000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,1,3));
ResRA = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f,26.000000000000000f,-2.500000000000000f,-2.500000000000000f,46.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,3,1,3));
ResIAR = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f,26.000000000000000f,-2.500000000000000f,-2.500000000000000f,46.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{34.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,114.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,194.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,1,3));
ResRA = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,28.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,48.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,4,1,3));
ResIAR = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,28.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,48.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{34.000000000000000f,-18.989356881873896f,4.489356881873896f,4.489356881873896f,-18.989356881873896f,114.000000000000000f,-25.169696769372845f,20.669696769372845f,20.669696769372845f,-25.169696769372845f,194.000000000000000f,-31.350036656871794f,36.850036656871794f,36.850036656871794f,-31.350036656871794f};
ResultI = new float[]{0.000000000000000f,-2.767412836308555f,-8.281994095230607f,8.281994095230607f,2.767412836308555f,0.000000000000000f,-21.788543162211624f,-20.037699141080068f,20.037699141080068f,21.788543162211624f,0.000000000000000f,-40.809673488114697f,-31.793404186929532f,31.793404186929532f,40.809673488114697f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,1,3));
ResRA = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f,22.800000000000001f,-5.033939353874569f,4.133939353874569f,4.133939353874569f,-5.033939353874569f,38.799999999999997f,-6.270007331374359f,7.370007331374358f,7.370007331374358f,-6.270007331374359f};
ResRA.Reshape(new ILDimension(1,5,1,3));
ResIAR = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f,22.800000000000001f,-5.033939353874569f,4.133939353874569f,4.133939353874569f,-5.033939353874569f,38.799999999999997f,-6.270007331374359f,7.370007331374358f,7.370007331374358f,-6.270007331374359f};
ResIAI = new float[]{0.000000000000000f,0.553482567261711f,1.656398819046121f,-1.656398819046121f,-0.553482567261711f,0.000000000000000f,4.357708632442325f,4.007539828216014f,-4.007539828216014f,-4.357708632442325f,0.000000000000000f,8.161934697622939f,6.358680837385906f,-6.358680837385906f,-8.161934697622939f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,1,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,1,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{16.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,96.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,176.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,1,3));
ResRA = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,44.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2,1,3));
ResIAR = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,44.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{39.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,159.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,279.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,1,3));
ResRA = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,46.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3,1,3));
ResIAR = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,46.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,232.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,392.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,1,3));
ResRA = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,29.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,49.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4,1,3));
ResIAR = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,29.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,49.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-38.287730758122741f,0.309016994374950f,9.787730758122740f,-0.809016994374948f,9.787730758122740f,-0.809016994374948f,-38.287730758122741f,0.309016994374950f,232.000000000000000f,-4.000000000000000f,-50.648410533120639f,0.309016994374947f,42.148410533120639f,-0.809016994374947f,42.148410533120639f,-0.809016994374947f,-50.648410533120639f,0.309016994374947f,392.000000000000000f,-4.000000000000000f,-63.009090308118537f,0.309016994374950f,74.509090308118544f,-0.809016994374950f,74.509090308118544f,-0.809016994374950f,-63.009090308118537f,0.309016994374950f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-6.485882188912264f,0.951056516295154f,-17.151773442753687f,0.587785252292472f,17.151773442753687f,-0.587785252292472f,6.485882188912264f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-44.528142840718402f,0.951056516295154f,-40.663183534452614f,0.587785252292473f,40.663183534452614f,-0.587785252292473f,44.528142840718402f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-82.570403492524548f,0.951056516295154f,-64.174593626151534f,0.587785252292473f,64.174593626151534f,-0.587785252292473f,82.570403492524548f,-0.951056516295154f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,1,3));
ResRA = new float[]{7.199999999999999f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f,23.200000000000003f,-0.400000000000000f,-5.064841053312064f,0.030901699437495f,4.214841053312064f,-0.080901699437495f,4.214841053312064f,-0.080901699437495f,-5.064841053312064f,0.030901699437495f,39.200000000000003f,-0.400000000000002f,-6.300909030811853f,0.030901699437495f,7.450909030811854f,-0.080901699437495f,7.450909030811854f,-0.080901699437495f,-6.300909030811853f,0.030901699437495f};
ResRA.Reshape(new ILDimension(2,5,1,3));
ResIAR = new float[]{7.199999999999999f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f,23.200000000000003f,-0.400000000000000f,-5.064841053312064f,0.030901699437495f,4.214841053312064f,-0.080901699437495f,4.214841053312064f,-0.080901699437495f,-5.064841053312064f,0.030901699437495f,39.200000000000003f,-0.400000000000002f,-6.300909030811853f,0.030901699437495f,7.450909030811854f,-0.080901699437495f,7.450909030811854f,-0.080901699437495f,-6.300909030811853f,0.030901699437495f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.648588218891226f,-0.095105651629515f,1.715177344275368f,-0.058778525229247f,-1.715177344275368f,0.058778525229247f,-0.648588218891226f,0.095105651629515f,0.000000000000000f,0.000000000000000f,4.452814284071840f,-0.095105651629515f,4.066318353445261f,-0.058778525229247f,-4.066318353445261f,0.058778525229247f,-4.452814284071840f,0.095105651629515f,0.000000000000000f,0.000000000000000f,8.257040349252454f,-0.095105651629515f,6.417459362615153f,-0.058778525229247f,-6.417459362615153f,0.058778525229247f,-8.257040349252454f,0.095105651629515f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,1,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,1,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{27.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,147.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,267.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,1,3));
ResRA = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,44.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2,1,3));
ResIAR = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,44.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{63.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,243.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,423.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,1,3));
ResRA = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3,1,3));
ResIAR = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,354.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,594.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,1,3));
ResRA = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,49.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,4,1,3));
ResIAR = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,49.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-57.895121628746530f,1.287164595108754f,-0.360113611983910f,15.895121628746532f,-0.704488531107295f,-1.722562452017550f,15.895121628746532f,-1.722562452017550f,-0.704488531107295f,-57.895121628746530f,-0.360113611983910f,1.287164595108754f,354.000000000000000f,-6.000000000000000f,-6.000000000000000f,-76.436141291243374f,1.287164595108754f,-0.360113611983910f,64.436141291243374f,-0.704488531107294f,-1.722562452017549f,64.436141291243374f,-1.722562452017549f,-0.704488531107294f,-76.436141291243374f,-0.360113611983910f,1.287164595108754f,594.000000000000000f,-6.000000000000000f,-6.000000000000000f,-94.977160953740224f,1.287164595108754f,-0.360113611983910f,112.977160953740220f,-0.704488531107297f,-1.722562452017546f,112.977160953740220f,-1.722562452017546f,-0.704488531107297f,-94.977160953740224f,-0.360113611983910f,1.287164595108754f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,-11.155408057811126f,1.158968207112914f,1.694201341772547f,-26.609338042569235f,1.582307147660746f,0.181048609216671f,26.609338042569235f,-0.181048609216671f,-1.582307147660746f,11.155408057811126f,-1.694201341772547f,-1.158968207112914f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-68.218799035520334f,1.158968207112911f,1.694201341772550f,-61.876453180117622f,1.582307147660747f,0.181048609216669f,61.876453180117622f,-0.181048609216669f,-1.582307147660747f,68.218799035520334f,-1.694201341772550f,-1.158968207112911f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-125.282190013229550f,1.158968207112917f,1.694201341772544f,-97.143568317666023f,1.582307147660745f,0.181048609216679f,97.143568317666023f,-0.181048609216679f,-1.582307147660745f,125.282190013229550f,-1.694201341772544f,-1.158968207112917f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,1,3));
ResRA = new float[]{7.600000000000001f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132260f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132260f,0.085810973007250f,23.599999999999998f,-0.400000000000000f,-0.400000000000000f,-5.095742752749558f,0.085810973007250f,-0.024007574132261f,4.295742752749558f,-0.046965902073820f,-0.114837496801170f,4.295742752749558f,-0.114837496801170f,-0.046965902073820f,-5.095742752749558f,-0.024007574132261f,0.085810973007250f,39.600000000000001f,-0.400000000000001f,-0.400000000000001f,-6.331810730249348f,0.085810973007250f,-0.024007574132261f,7.531810730249347f,-0.046965902073820f,-0.114837496801170f,7.531810730249347f,-0.114837496801170f,-0.046965902073820f,-6.331810730249348f,-0.024007574132261f,0.085810973007250f};
ResRA.Reshape(new ILDimension(3,5,1,3));
ResIAR = new float[]{7.600000000000001f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132260f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132260f,0.085810973007250f,23.599999999999998f,-0.400000000000000f,-0.400000000000000f,-5.095742752749558f,0.085810973007250f,-0.024007574132261f,4.295742752749558f,-0.046965902073820f,-0.114837496801170f,4.295742752749558f,-0.114837496801170f,-0.046965902073820f,-5.095742752749558f,-0.024007574132261f,0.085810973007250f,39.600000000000001f,-0.400000000000001f,-0.400000000000001f,-6.331810730249348f,0.085810973007250f,-0.024007574132261f,7.531810730249347f,-0.046965902073820f,-0.114837496801170f,7.531810730249347f,-0.114837496801170f,-0.046965902073820f,-6.331810730249348f,-0.024007574132261f,0.085810973007250f};
ResIAI = new float[]{0.000000000000000f,-0.230940107675850f,0.230940107675850f,0.743693870520742f,-0.077264547140861f,-0.112946756118170f,1.773955869504616f,-0.105487143177383f,-0.012069907281111f,-1.773955869504616f,0.012069907281111f,0.105487143177383f,-0.743693870520742f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,4.547919935701356f,-0.077264547140861f,-0.112946756118170f,4.125096878674508f,-0.105487143177383f,-0.012069907281111f,-4.125096878674508f,0.012069907281111f,0.105487143177383f,-4.547919935701356f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,8.352146000881971f,-0.077264547140861f,-0.112946756118170f,6.476237887844401f,-0.105487143177383f,-0.012069907281112f,-6.476237887844401f,0.012069907281112f,0.105487143177383f,-8.352146000881971f,0.112946756118170f,0.077264547140861f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,1,3));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,1,3));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{40.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,200.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,360.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,1,3));
ResRA = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2,1,3));
ResIAR = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{90.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,330.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,570.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,1,3));
ResRA = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,3,1,3));
ResIAR = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,480.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,800.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,1,3));
ResRA = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,4,1,3));
ResIAR = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-77.811529493745269f,2.520147021340203f,0.618033988749893f,-1.284079043840410f,22.811529493745269f,-0.442463484164950f,-1.618033988749895f,-2.793604493334843f,22.811529493745269f,-2.793604493334843f,-1.618033988749895f,-0.442463484164950f,-77.811529493745269f,-1.284079043840410f,0.618033988749893f,2.520147021340203f,480.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-102.532889043741060f,2.520147021340204f,0.618033988749900f,-1.284079043840411f,87.532889043741065f,-0.442463484164950f,-1.618033988749900f,-2.793604493334843f,87.532889043741065f,-2.793604493334843f,-1.618033988749900f,-0.442463484164950f,-102.532889043741060f,-1.284079043840411f,0.618033988749900f,2.520147021340204f,800.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-127.254248593736860f,2.520147021340200f,0.618033988749900f,-1.284079043840414f,152.254248593736860f,-0.442463484164946f,-1.618033988749914f,-2.793604493334840f,152.254248593736860f,-2.793604493334840f,-1.618033988749914f,-0.442463484164946f,-127.254248593736860f,-1.284079043840414f,0.618033988749900f,2.520147021340200f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-16.775990443005142f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-36.654687894677259f,2.793604493334840f,1.175570504584947f,-0.442463484164950f,36.654687894677259f,0.442463484164950f,-1.175570504584947f,-2.793604493334840f,16.775990443005142f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-92.860511746617419f,1.284079043840411f,1.902113032590307f,2.520147021340204f,-83.677508078075107f,2.793604493334843f,1.175570504584947f,-0.442463484164950f,83.677508078075107f,0.442463484164950f,-1.175570504584947f,-2.793604493334843f,92.860511746617419f,-2.520147021340204f,-1.902113032590307f,-1.284079043840411f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-168.945033050229710f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-130.700328261472980f,2.793604493334836f,1.175570504584940f,-0.442463484164950f,130.700328261472980f,0.442463484164950f,-1.175570504584940f,-2.793604493334836f,168.945033050229710f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,1,3));
ResRA = new float[]{7.999999999999999f,-0.400000000000000f,-0.399999999999999f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,24.000000000000000f,-0.399999999999999f,-0.399999999999999f,-0.399999999999999f,-5.126644452187053f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,4.376644452187053f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,4.376644452187053f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-5.126644452187053f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,40.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-6.362712429686843f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,7.612712429686843f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,7.612712429686843f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-6.362712429686843f,-0.064203952192021f,0.030901699437495f,0.126007351067010f};
ResRA.Reshape(new ILDimension(4,5,1,3));
ResIAR = new float[]{7.999999999999999f,-0.400000000000000f,-0.399999999999999f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,24.000000000000000f,-0.399999999999999f,-0.399999999999999f,-0.399999999999999f,-5.126644452187053f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,4.376644452187053f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,4.376644452187053f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-5.126644452187053f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,40.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-6.362712429686843f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,7.612712429686843f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,7.612712429686843f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-6.362712429686843f,-0.064203952192021f,0.030901699437495f,0.126007351067010f};
ResIAI = new float[]{0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,0.838799522150257f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,1.832734394733863f,-0.139680224666742f,-0.058778525229247f,0.022123174208248f,-1.832734394733863f,-0.022123174208248f,0.058778525229247f,0.139680224666742f,-0.838799522150257f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.399999999999999f,0.000000000000000f,0.399999999999999f,4.643025587330872f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,4.183875403903755f,-0.139680224666742f,-0.058778525229247f,0.022123174208247f,-4.183875403903755f,-0.022123174208247f,0.058778525229247f,0.139680224666742f,-4.643025587330872f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,8.447251652511485f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,6.535016413073648f,-0.139680224666742f,-0.058778525229248f,0.022123174208247f,-6.535016413073648f,-0.022123174208247f,0.058778525229248f,0.139680224666742f,-8.447251652511485f,0.126007351067010f,0.095105651629515f,0.064203952192021f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,1,3));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(5,1,1,3));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,255.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,455.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,1,3));
ResRA = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,2,1,3));
ResIAR = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{120.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,420.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,720.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,1,3));
ResRA = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,3,1,3));
ResIAR = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1010.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,1,3));
ResRA = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,4,1,3));
ResIAR = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-98.036954353118972f,4.045084971874739f,1.545084971874741f,0.000000000000003f,-2.499999999999996f,30.536954353118958f,-0.000000000000002f,-1.545084971874738f,-2.500000000000001f,-4.045084971874740f,30.536954353118958f,-4.045084971874740f,-2.500000000000001f,-1.545084971874738f,-0.000000000000002f,-98.036954353118972f,-2.499999999999996f,0.000000000000003f,1.545084971874741f,4.045084971874739f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-128.938653790613700f,4.045084971874736f,1.545084971874737f,-0.000000000000000f,-2.500000000000000f,111.438653790613700f,0.000000000000001f,-1.545084971874737f,-2.500000000000000f,-4.045084971874737f,111.438653790613700f,-4.045084971874737f,-2.500000000000000f,-1.545084971874737f,0.000000000000001f,-128.938653790613700f,-2.500000000000000f,-0.000000000000000f,1.545084971874737f,4.045084971874736f,1010.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-159.840353228108430f,4.045084971874726f,1.545084971874741f,0.000000000000004f,-2.500000000000012f,192.340353228108430f,0.000000000000012f,-1.545084971874746f,-2.499999999999999f,-4.045084971874725f,192.340353228108430f,-4.045084971874725f,-2.499999999999999f,-1.545084971874746f,0.000000000000012f,-159.840353228108430f,-2.500000000000012f,0.000000000000004f,1.545084971874741f,4.045084971874726f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-23.347629344494312f,1.314327780297837f,2.126627020880101f,2.628655560595667f,3.440954801177931f,-47.287822999077761f,4.253254041760197f,2.126627020880099f,0.812299240582264f,-1.314327780297834f,47.287822999077761f,1.314327780297834f,-0.812299240582264f,-2.126627020880099f,-4.253254041760197f,23.347629344494312f,-3.440954801177931f,-2.628655560595667f,-2.126627020880101f,-1.314327780297837f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-118.453280974009660f,1.314327780297834f,2.126627020880099f,2.628655560595670f,3.440954801177934f,-106.066348228325080f,4.253254041760203f,2.126627020880104f,0.812299240582267f,-1.314327780297832f,106.066348228325080f,1.314327780297832f,-0.812299240582267f,-2.126627020880104f,-4.253254041760203f,118.453280974009660f,-3.440954801177934f,-2.628655560595670f,-2.126627020880099f,-1.314327780297834f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-213.558932603525020f,1.314327780297832f,2.126627020880102f,2.628655560595666f,3.440954801177937f,-164.844873457572390f,4.253254041760201f,2.126627020880097f,0.812299240582267f,-1.314327780297838f,164.844873457572390f,1.314327780297838f,-0.812299240582267f,-2.126627020880097f,-4.253254041760201f,213.558932603525020f,-3.440954801177937f,-2.628655560595666f,-2.126627020880102f,-1.314327780297832f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,1,3));
ResRA = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874990f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,1.221478174124758f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,1.221478174124758f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874990f,24.399999999999999f,-0.399999999999998f,-0.400000000000000f,-0.400000000000000f,-0.399999999999998f,-5.157546151624548f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,4.457546151624548f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,4.457546151624548f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-5.157546151624548f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,40.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-6.393614129124338f,0.161803398874989f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,7.693614129124337f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,7.693614129124337f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-6.393614129124338f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874989f};
ResRA.Reshape(new ILDimension(5,5,1,3));
ResIAR = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874990f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,1.221478174124758f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,1.221478174124758f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874990f,24.399999999999999f,-0.399999999999998f,-0.400000000000000f,-0.400000000000000f,-0.399999999999998f,-5.157546151624548f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,4.457546151624548f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,4.457546151624548f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-5.157546151624548f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,40.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-6.393614129124338f,0.161803398874989f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,7.693614129124337f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,7.693614129124337f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-6.393614129124338f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874989f};
ResIAI = new float[]{0.000000000000000f,-0.550552768188469f,-0.129967878493163f,0.129967878493163f,0.550552768188469f,0.933905173779772f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,1.891512919963110f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-1.891512919963110f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-0.933905173779772f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188469f,-0.129967878493162f,0.129967878493162f,0.550552768188469f,4.738131238960387f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,4.242653929133004f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-4.242653929133004f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-4.738131238960387f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188470f,-0.129967878493162f,0.129967878493162f,0.550552768188470f,8.542357304141001f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047118f,6.593794938302895f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-6.593794938302895f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-8.542357304141001f,0.137638192047118f,0.105146222423827f,0.085065080835204f,0.052573111211913f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(6,0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,1,3));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f};
ResRA.Reshape(new ILDimension(6,1,1,3));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f,0.000000000000000f,2.886751345948129f,3.464101615137755f,0.000000000000000f,-3.464101615137755f,-2.886751345948129f,0.000000000000000f,5.773502691896257f,6.350852961085884f,0.000000000000000f,-6.350852961085884f,-5.773502691896257f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new float[]{55.000000000000000f,-14.500000000000000f,2.500000000000000f,11.000000000000000f,2.500000000000000f,-14.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,255.000000000000000f,-34.500000000000000f,22.500000000000000f,51.000000000000000f,22.500000000000000f,-34.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,455.000000000000000f,-54.500000000000000f,42.500000000000000f,91.000000000000000f,42.500000000000000f,-54.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f};
ResultI = new float[]{0.000000000000000f,-4.330127018922193f,-11.258330249197702f,0.000000000000000f,11.258330249197702f,4.330127018922193f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-38.971143170299740f,-45.899346400575247f,0.000000000000000f,45.899346400575247f,38.971143170299740f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-73.612159321677282f,-80.540362551952796f,0.000000000000000f,80.540362551952796f,73.612159321677282f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,1,3));
ResRA = new float[]{4.583333333333333f,-1.208333333333333f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,21.250000000000000f,-2.875000000000000f,1.875000000000000f,4.250000000000000f,1.875000000000000f,-2.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,37.916666666666664f,-4.541666666666667f,3.541666666666667f,7.583333333333333f,3.541666666666667f,-4.541666666666667f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResRA.Reshape(new ILDimension(6,2,1,3));
ResIAR = new float[]{4.583333333333333f,-1.208333333333333f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,21.250000000000000f,-2.875000000000000f,1.875000000000000f,4.250000000000000f,1.875000000000000f,-2.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,37.916666666666664f,-4.541666666666667f,3.541666666666667f,7.583333333333333f,3.541666666666667f,-4.541666666666667f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResIAI = new float[]{0.000000000000000f,0.360843918243516f,0.938194187433142f,0.000000000000000f,-0.938194187433142f,-0.360843918243516f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,3.247595264191645f,3.824945533381271f,0.000000000000000f,-3.824945533381271f,-3.247595264191645f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,6.134346610139773f,6.711696879329399f,0.000000000000000f,-6.711696879329399f,-6.134346610139773f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new float[]{120.000000000000000f,-25.500000000000000f,7.500000000000000f,24.000000000000000f,7.500000000000000f,-25.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,420.000000000000000f,-55.500000000000000f,37.500000000000000f,84.000000000000000f,37.500000000000000f,-55.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,720.000000000000000f,-85.500000000000000f,67.500000000000000f,144.000000000000000f,67.500000000000000f,-85.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f};
ResultI = new float[]{0.000000000000000f,-12.990381056766578f,-23.382685902179841f,0.000000000000000f,23.382685902179841f,12.990381056766578f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-64.951905283832900f,-75.344210129246164f,0.000000000000000f,75.344210129246164f,64.951905283832900f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-116.913429510899210f,-127.305734356312470f,0.000000000000000f,127.305734356312470f,116.913429510899210f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3,1,3));
ResRA = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f};
ResRA.Reshape(new ILDimension(6,3,1,3));
ResIAR = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f};
ResIAI = new float[]{0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,3.608439182435161f,4.185789451624786f,0.000000000000000f,-4.185789451624786f,-3.608439182435161f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,6.495190528383290f,7.072540797572915f,0.000000000000000f,-7.072540797572915f,-6.495190528383290f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,610.000000000000000f,-79.000000000000000f,55.000000000000000f,122.000000000000000f,55.000000000000000f,-79.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,1010.000000000000000f,-119.000000000000000f,95.000000000000000f,202.000000000000000f,95.000000000000000f,-119.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-95.262794416288244f,-109.119200876839260f,0.000000000000000f,109.119200876839260f,95.262794416288244f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-164.544826719043330f,-178.401233179594360f,0.000000000000000f,178.401233179594360f,164.544826719043330f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,1,3));
ResRA = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,25.416666666666668f,-3.291666666666667f,2.291666666666667f,5.083333333333333f,2.291666666666667f,-3.291666666666667f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,42.083333333333336f,-4.958333333333333f,3.958333333333334f,8.416666666666666f,3.958333333333334f,-4.958333333333333f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResRA.Reshape(new ILDimension(6,4,1,3));
ResIAR = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,25.416666666666668f,-3.291666666666667f,2.291666666666667f,5.083333333333333f,2.291666666666667f,-3.291666666666667f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,42.083333333333336f,-4.958333333333333f,3.958333333333334f,8.416666666666666f,3.958333333333334f,-4.958333333333333f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResIAI = new float[]{0.000000000000000f,1.082531754730548f,1.659882023920174f,0.000000000000000f,-1.659882023920174f,-1.082531754730548f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,3.969283100678677f,4.546633369868302f,0.000000000000000f,-4.546633369868302f,-3.969283100678677f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,6.856034446626805f,7.433384715816431f,0.000000000000000f,-7.433384715816431f,-6.856034446626805f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-98.036954353118958f,9.621261194543136f,-14.207737073390824f,-19.607390870623789f,-4.472602814108122f,12.767282625455183f,30.536954353118958f,-13.357652230006455f,-6.859358218078331f,6.107390870623791f,10.539698105577276f,-0.030891589991866f,30.536954353118958f,-0.030891589991866f,10.539698105577276f,6.107390870623791f,-6.859358218078331f,-13.357652230006455f,-98.036954353118958f,12.767282625455183f,-4.472602814108122f,-19.607390870623789f,-14.207737073390824f,9.621261194543136f,610.000000000000000f,-79.000000000000000f,55.000000000000000f,122.000000000000000f,55.000000000000000f,-79.000000000000000f,-128.938653790613700f,-3.761350932634024f,-33.770689088066938f,-25.787730758122741f,8.910009313069033f,32.330234640131295f,111.438653790613700f,-31.628561382858472f,-8.949927483431399f,22.287730758122741f,28.810607258429304f,2.059677675361201f,111.438653790613700f,2.059677675361201f,28.810607258429304f,22.287730758122741f,-8.949927483431399f,-31.628561382858472f,-128.938653790613700f,32.330234640131295f,8.910009313069033f,-25.787730758122741f,-33.770689088066938f,-3.761350932634024f,1010.000000000000000f,-119.000000000000000f,95.000000000000000f,202.000000000000000f,95.000000000000000f,-119.000000000000000f,-159.840353228108460f,-17.143963059811188f,-53.333641102743044f,-31.968070645621687f,22.292621440246208f,51.893186654807408f,192.340353228108460f,-49.899470535710492f,-11.040496748784474f,38.468070645621687f,47.081516411281314f,4.150246940714272f,192.340353228108460f,4.150246940714272f,47.081516411281314f,38.468070645621687f,-11.040496748784474f,-49.899470535710492f,-159.840353228108460f,51.893186654807408f,22.292621440246208f,-31.968070645621687f,-53.333641102743044f,-17.143963059811188f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,-23.347629344494312f,22.792166151679456f,16.339937003214402f,-4.669525868898862f,-18.156293323227807f,-9.563131636124215f,-47.287822999077761f,4.186548098088650f,-9.836889335492469f,-9.457564599815553f,2.142680492554329f,10.561083772359158f,47.287822999077761f,-10.561083772359158f,-2.142680492554329f,9.457564599815553f,9.836889335492469f,-4.186548098088650f,23.347629344494312f,9.563131636124215f,18.156293323227807f,4.669525868898862f,-16.339937003214402f,-22.792166151679456f,0.000000000000000f,-95.262794416288244f,-109.119200876839260f,0.000000000000000f,109.119200876839260f,95.262794416288244f,-118.453280974009660f,37.655062661227333f,12.181703186859213f,-23.690656194801932f,-33.019189832775680f,-5.404897819769023f,-106.066348228325070f,-3.948184763427351f,-29.727327242857928f,-21.213269645665015f,10.277413354070337f,30.451521679724628f,106.066348228325070f,-30.451521679724628f,-10.277413354070337f,21.213269645665015f,29.727327242857928f,3.948184763427351f,118.453280974009660f,5.404897819769023f,33.019189832775680f,23.690656194801932f,-12.181703186859213f,-37.655062661227333f,0.000000000000000f,-164.544826719043330f,-178.401233179594360f,0.000000000000000f,178.401233179594360f,164.544826719043330f,-213.558932603525020f,52.517959170775221f,8.023469370504035f,-42.711786520705004f,-47.882086342323575f,-1.246664003413834f,-164.844873457572390f,-12.082917624943352f,-49.617765150223413f,-32.968974691514475f,18.412146215586340f,50.341959587090088f,164.844873457572390f,-50.341959587090088f,-18.412146215586340f,32.968974691514475f,49.617765150223413f,12.082917624943352f,213.558932603525020f,1.246664003413834f,47.882086342323575f,42.711786520705004f,-8.023469370504035f,-52.517959170775221f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5,1,3));
ResRA = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437299f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666396f,1.017898478437299f,-0.001029719666396f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437299f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f,20.333333333333332f,-2.633333333333333f,1.833333333333333f,4.066666666666666f,1.833333333333333f,-2.633333333333333f,-4.297955126353790f,-0.125378364421134f,-1.125689636268898f,-0.859591025270758f,0.297000310435635f,1.077674488004377f,3.714621793020457f,-1.054285379428616f,-0.298330916114380f,0.742924358604091f,0.960353575280976f,0.068655922512040f,3.714621793020457f,0.068655922512040f,0.960353575280976f,0.742924358604091f,-0.298330916114380f,-1.054285379428616f,-4.297955126353790f,1.077674488004377f,0.297000310435635f,-0.859591025270758f,-1.125689636268898f,-0.125378364421134f,33.666666666666664f,-3.966666666666667f,3.166666666666667f,6.733333333333332f,3.166666666666667f,-3.966666666666667f,-5.328011774270282f,-0.571465435327039f,-1.777788036758101f,-1.065602354854056f,0.743087381341540f,1.729772888493580f,6.411345107603616f,-1.663315684523683f,-0.368016558292816f,1.282269021520723f,1.569383880376044f,0.138341564690476f,6.411345107603616f,0.138341564690476f,1.569383880376044f,1.282269021520723f,-0.368016558292816f,-1.663315684523683f,-5.328011774270282f,1.729772888493580f,0.743087381341540f,-1.065602354854056f,-1.777788036758101f,-0.571465435327039f};
ResRA.Reshape(new ILDimension(6,5,1,3));
ResIAR = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437299f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666396f,1.017898478437299f,-0.001029719666396f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437299f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f,20.333333333333332f,-2.633333333333333f,1.833333333333333f,4.066666666666666f,1.833333333333333f,-2.633333333333333f,-4.297955126353790f,-0.125378364421134f,-1.125689636268898f,-0.859591025270758f,0.297000310435635f,1.077674488004377f,3.714621793020457f,-1.054285379428616f,-0.298330916114380f,0.742924358604091f,0.960353575280976f,0.068655922512040f,3.714621793020457f,0.068655922512040f,0.960353575280976f,0.742924358604091f,-0.298330916114380f,-1.054285379428616f,-4.297955126353790f,1.077674488004377f,0.297000310435635f,-0.859591025270758f,-1.125689636268898f,-0.125378364421134f,33.666666666666664f,-3.966666666666667f,3.166666666666667f,6.733333333333332f,3.166666666666667f,-3.966666666666667f,-5.328011774270282f,-0.571465435327039f,-1.777788036758101f,-1.065602354854056f,0.743087381341540f,1.729772888493580f,6.411345107603616f,-1.663315684523683f,-0.368016558292816f,1.282269021520723f,1.569383880376044f,0.138341564690476f,6.411345107603616f,0.138341564690476f,1.569383880376044f,1.282269021520723f,-0.368016558292816f,-1.663315684523683f,-5.328011774270282f,1.729772888493580f,0.743087381341540f,-1.065602354854056f,-1.777788036758101f,-0.571465435327039f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,1.327905619136139f,0.000000000000000f,-1.327905619136139f,-0.866025403784439f,0.778254311483144f,-0.759738871722649f,-0.544664566773813f,0.155650862296629f,0.605209777440927f,0.318771054537474f,1.576260766635925f,-0.139551603269622f,0.327896311183082f,0.315252153327185f,-0.071422683085144f,-0.352036125745305f,-1.576260766635925f,0.352036125745305f,0.071422683085144f,-0.315252153327185f,-0.327896311183082f,0.139551603269622f,-0.778254311483144f,-0.318771054537474f,-0.605209777440927f,-0.155650862296629f,0.544664566773813f,0.759738871722649f,0.000000000000000f,3.175426480542942f,3.637306695894643f,0.000000000000000f,-3.637306695894643f,-3.175426480542942f,3.948442699133655f,-1.255168755374245f,-0.406056772895307f,0.789688539826731f,1.100639661092522f,0.180163260658967f,3.535544940944169f,0.131606158780912f,0.990910908095264f,0.707108988188834f,-0.342580445135678f,-1.015050722657487f,-3.535544940944169f,1.015050722657487f,0.342580445135678f,-0.707108988188834f,-0.990910908095264f,-0.131606158780912f,-3.948442699133655f,-0.180163260658967f,-1.100639661092522f,-0.789688539826731f,0.406056772895307f,1.255168755374245f,0.000000000000000f,5.484827557301444f,5.946707772653145f,0.000000000000000f,-5.946707772653145f,-5.484827557301444f,7.118631086784167f,-1.750598639025841f,-0.267448979016801f,1.423726217356834f,1.596069544744120f,0.041555466780461f,5.494829115252412f,0.402763920831445f,1.653925505007447f,1.098965823050482f,-0.613738207186212f,-1.678065319569670f,-5.494829115252412f,1.678065319569670f,0.613738207186212f,-1.098965823050482f,-1.653925505007447f,-0.402763920831445f,-7.118631086784167f,-0.041555466780461f,-1.596069544744120f,-1.423726217356834f,0.267448979016801f,1.750598639025841f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_float_fcomplex_17() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
A.Reshape(new ILDimension(5,4,3));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,26.000000000000000f,27.000000000000000f,28.000000000000000f,29.000000000000000f,30.000000000000000f,31.000000000000000f,32.000000000000000f,33.000000000000000f,34.000000000000000f,35.000000000000000f,36.000000000000000f,37.000000000000000f,38.000000000000000f,39.000000000000000f,40.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f,46.000000000000000f,47.000000000000000f,48.000000000000000f,49.000000000000000f,50.000000000000000f,51.000000000000000f,52.000000000000000f,53.000000000000000f,54.000000000000000f,55.000000000000000f,56.000000000000000f,57.000000000000000f,58.000000000000000f,59.000000000000000f,60.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,21.000000000000000f,22.000000000000000f,23.000000000000000f,24.000000000000000f,25.000000000000000f,41.000000000000000f,42.000000000000000f,43.000000000000000f,44.000000000000000f,45.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{7.000000000000000f,9.000000000000000f,11.000000000000000f,13.000000000000000f,15.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,47.000000000000000f,49.000000000000000f,51.000000000000000f,53.000000000000000f,55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,87.000000000000000f,89.000000000000000f,91.000000000000000f,93.000000000000000f,95.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{18.000000000000000f,21.000000000000000f,24.000000000000000f,27.000000000000000f,30.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,78.000000000000000f,81.000000000000000f,84.000000000000000f,87.000000000000000f,90.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,138.000000000000000f,141.000000000000000f,144.000000000000000f,147.000000000000000f,150.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,3,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,3);
ResultR = new float[]{34.000000000000000f,38.000000000000000f,42.000000000000000f,46.000000000000000f,50.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,114.000000000000000f,118.000000000000000f,122.000000000000000f,126.000000000000000f,130.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,194.000000000000000f,198.000000000000000f,202.000000000000000f,206.000000000000000f,210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,10.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,4,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,4);
ResultR = new float[]{34.000000000000000f,38.000000000000000f,42.000000000000000f,46.000000000000000f,50.000000000000000f,-18.989356881873896f,-19.298373876248846f,-19.607390870623792f,-19.916407864998739f,-20.225424859373685f,4.489356881873896f,5.298373876248844f,6.107390870623792f,6.916407864998739f,7.725424859373685f,4.489356881873896f,5.298373876248844f,6.107390870623792f,6.916407864998739f,7.725424859373685f,-18.989356881873896f,-19.298373876248846f,-19.607390870623792f,-19.916407864998739f,-20.225424859373685f,114.000000000000000f,118.000000000000000f,122.000000000000000f,126.000000000000000f,130.000000000000000f,-25.169696769372845f,-25.478713763747791f,-25.787730758122741f,-26.096747752497688f,-26.405764746872634f,20.669696769372845f,21.478713763747791f,22.287730758122741f,23.096747752497688f,23.905764746872634f,20.669696769372845f,21.478713763747791f,22.287730758122741f,23.096747752497688f,23.905764746872634f,-25.169696769372845f,-25.478713763747791f,-25.787730758122741f,-26.096747752497688f,-26.405764746872634f,194.000000000000000f,198.000000000000000f,202.000000000000000f,206.000000000000000f,210.000000000000000f,-31.350036656871794f,-31.659053651246744f,-31.968070645621687f,-32.277087639996637f,-32.586104634371587f,36.850036656871794f,37.659053651246744f,38.468070645621687f,39.277087639996637f,40.086104634371587f,36.850036656871794f,37.659053651246744f,38.468070645621687f,39.277087639996637f,40.086104634371587f,-31.350036656871794f,-31.659053651246744f,-31.968070645621687f,-32.277087639996637f,-32.586104634371587f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.767412836308555f,-3.718469352603709f,-4.669525868898862f,-5.620582385194015f,-6.571638901489169f,-8.281994095230607f,-8.869779347523078f,-9.457564599815552f,-10.045349852108025f,-10.633135104400498f,8.281994095230607f,8.869779347523078f,9.457564599815552f,10.045349852108025f,10.633135104400498f,2.767412836308555f,3.718469352603709f,4.669525868898862f,5.620582385194015f,6.571638901489169f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.788543162211624f,-22.739599678506778f,-23.690656194801932f,-24.641712711097085f,-25.592769227392239f,-20.037699141080068f,-20.625484393372542f,-21.213269645665015f,-21.801054897957489f,-22.388840150249962f,20.037699141080068f,20.625484393372542f,21.213269645665015f,21.801054897957489f,22.388840150249962f,21.788543162211624f,22.739599678506778f,23.690656194801932f,24.641712711097085f,25.592769227392239f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.809673488114697f,-41.760730004409851f,-42.711786520705004f,-43.662843037000158f,-44.613899553295312f,-31.793404186929532f,-32.381189439222005f,-32.968974691514475f,-33.556759943806952f,-34.144545196099422f,31.793404186929532f,32.381189439222005f,32.968974691514475f,33.556759943806952f,34.144545196099422f,40.809673488114697f,41.760730004409851f,42.711786520705004f,43.662843037000158f,44.613899553295312f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,5,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,5);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f,21.000000000000000f,26.000000000000000f,31.000000000000000f,36.000000000000000f,41.000000000000000f,46.000000000000000f,51.000000000000000f,56.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,3));
ResRA = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,3));
ResIAR = new float[]{1.000000000000000f,21.000000000000000f,41.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{7.000000000000000f,-5.000000000000000f,47.000000000000000f,-5.000000000000000f,87.000000000000000f,-5.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,3));
ResRA = new float[]{3.500000000000000f,-2.500000000000000f,23.500000000000000f,-2.500000000000000f,43.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,2,3));
ResIAR = new float[]{3.500000000000000f,-2.500000000000000f,23.500000000000000f,-2.500000000000000f,43.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{18.000000000000000f,-7.500000000000000f,-7.500000000000000f,78.000000000000000f,-7.500000000000000f,-7.500000000000000f,138.000000000000000f,-7.500000000000000f,-7.500000000000000f};
ResultI = new float[]{0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f,0.000000000000000f,4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,3,3));
ResRA = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f,26.000000000000000f,-2.500000000000000f,-2.500000000000000f,46.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,3,3));
ResIAR = new float[]{6.000000000000000f,-2.500000000000000f,-2.500000000000000f,26.000000000000000f,-2.500000000000000f,-2.500000000000000f,46.000000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f,0.000000000000000f,-1.443375672974064f,1.443375672974064f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,3);
ResultR = new float[]{34.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,114.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,194.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f,0.000000000000000f,10.000000000000000f,0.000000000000000f,-10.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,4,3));
ResRA = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,28.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,48.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResRA.Reshape(new ILDimension(1,4,3));
ResIAR = new float[]{8.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,28.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,48.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,2.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,4);
ResultR = new float[]{34.000000000000000f,-18.989356881873896f,4.489356881873896f,4.489356881873896f,-18.989356881873896f,114.000000000000000f,-25.169696769372845f,20.669696769372845f,20.669696769372845f,-25.169696769372845f,194.000000000000000f,-31.350036656871794f,36.850036656871794f,36.850036656871794f,-31.350036656871794f};
ResultI = new float[]{0.000000000000000f,-2.767412836308555f,-8.281994095230607f,8.281994095230607f,2.767412836308555f,0.000000000000000f,-21.788543162211624f,-20.037699141080068f,20.037699141080068f,21.788543162211624f,0.000000000000000f,-40.809673488114697f,-31.793404186929532f,31.793404186929532f,40.809673488114697f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,5,3));
ResRA = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f,22.800000000000001f,-5.033939353874569f,4.133939353874569f,4.133939353874569f,-5.033939353874569f,38.799999999999997f,-6.270007331374359f,7.370007331374358f,7.370007331374358f,-6.270007331374359f};
ResRA.Reshape(new ILDimension(1,5,3));
ResIAR = new float[]{6.800000000000000f,-3.797871376374779f,0.897871376374779f,0.897871376374779f,-3.797871376374779f,22.800000000000001f,-5.033939353874569f,4.133939353874569f,4.133939353874569f,-5.033939353874569f,38.799999999999997f,-6.270007331374359f,7.370007331374358f,7.370007331374358f,-6.270007331374359f};
ResIAI = new float[]{0.000000000000000f,0.553482567261711f,1.656398819046121f,-1.656398819046121f,-0.553482567261711f,0.000000000000000f,4.357708632442325f,4.007539828216014f,-4.007539828216014f,-4.357708632442325f,0.000000000000000f,8.161934697622939f,6.358680837385906f,-6.358680837385906f,-8.161934697622939f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,5);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,53.000000000000000f,-1.000000000000000f,63.000000000000000f,-1.000000000000000f,73.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f,93.000000000000000f,-1.000000000000000f,103.000000000000000f,-1.000000000000000f,113.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,43.000000000000000f,-1.000000000000000f,83.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,3));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,3));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,21.500000000000000f,-0.500000000000000f,41.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{16.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,96.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f,176.000000000000000f,-2.000000000000000f,-10.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,3));
ResRA = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,44.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,2,3));
ResIAR = new float[]{4.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,24.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,44.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{39.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,159.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f,279.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,-15.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,3,3));
ResRA = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,46.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,3,3));
ResIAR = new float[]{6.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,26.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,46.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-1.443375672974064f,0.000000000000000f,1.443375672974064f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,3);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,232.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,392.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-20.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,4,3));
ResRA = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,29.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,49.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(2,4,3));
ResIAR = new float[]{9.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,29.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,49.000000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,4);
ResultR = new float[]{72.000000000000000f,-4.000000000000000f,-38.287730758122741f,0.309016994374950f,9.787730758122740f,-0.809016994374948f,9.787730758122740f,-0.809016994374948f,-38.287730758122741f,0.309016994374950f,232.000000000000000f,-4.000000000000000f,-50.648410533120639f,0.309016994374947f,42.148410533120639f,-0.809016994374947f,42.148410533120639f,-0.809016994374947f,-50.648410533120639f,0.309016994374947f,392.000000000000000f,-4.000000000000000f,-63.009090308118537f,0.309016994374950f,74.509090308118544f,-0.809016994374950f,74.509090308118544f,-0.809016994374950f,-63.009090308118537f,0.309016994374950f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-6.485882188912264f,0.951056516295154f,-17.151773442753687f,0.587785252292472f,17.151773442753687f,-0.587785252292472f,6.485882188912264f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-44.528142840718402f,0.951056516295154f,-40.663183534452614f,0.587785252292473f,40.663183534452614f,-0.587785252292473f,44.528142840718402f,-0.951056516295154f,0.000000000000000f,0.000000000000000f,-82.570403492524548f,0.951056516295154f,-64.174593626151534f,0.587785252292473f,64.174593626151534f,-0.587785252292473f,82.570403492524548f,-0.951056516295154f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,5,3));
ResRA = new float[]{7.199999999999999f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f,23.200000000000003f,-0.400000000000000f,-5.064841053312064f,0.030901699437495f,4.214841053312064f,-0.080901699437495f,4.214841053312064f,-0.080901699437495f,-5.064841053312064f,0.030901699437495f,39.200000000000003f,-0.400000000000002f,-6.300909030811853f,0.030901699437495f,7.450909030811854f,-0.080901699437495f,7.450909030811854f,-0.080901699437495f,-6.300909030811853f,0.030901699437495f};
ResRA.Reshape(new ILDimension(2,5,3));
ResIAR = new float[]{7.199999999999999f,-0.400000000000000f,-3.828773075812274f,0.030901699437495f,0.978773075812274f,-0.080901699437495f,0.978773075812274f,-0.080901699437495f,-3.828773075812274f,0.030901699437495f,23.200000000000003f,-0.400000000000000f,-5.064841053312064f,0.030901699437495f,4.214841053312064f,-0.080901699437495f,4.214841053312064f,-0.080901699437495f,-5.064841053312064f,0.030901699437495f,39.200000000000003f,-0.400000000000002f,-6.300909030811853f,0.030901699437495f,7.450909030811854f,-0.080901699437495f,7.450909030811854f,-0.080901699437495f,-6.300909030811853f,0.030901699437495f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.648588218891226f,-0.095105651629515f,1.715177344275368f,-0.058778525229247f,-1.715177344275368f,0.058778525229247f,-0.648588218891226f,0.095105651629515f,0.000000000000000f,0.000000000000000f,4.452814284071840f,-0.095105651629515f,4.066318353445261f,-0.058778525229247f,-4.066318353445261f,0.058778525229247f,-4.452814284071840f,0.095105651629515f,0.000000000000000f,0.000000000000000f,8.257040349252454f,-0.095105651629515f,6.417459362615153f,-0.058778525229247f,-6.417459362615153f,0.058778525229247f,-8.257040349252454f,0.095105651629515f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,5);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,81.000000000000000f,-1.500000000000000f,-1.500000000000000f,96.000000000000000f,-1.500000000000000f,-1.500000000000000f,111.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f,141.000000000000000f,-1.500000000000000f,-1.500000000000000f,156.000000000000000f,-1.500000000000000f,-1.500000000000000f,171.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,66.000000000000000f,-1.500000000000000f,-1.500000000000000f,126.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,3));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,3));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,22.000000000000000f,-0.500000000000000f,-0.500000000000000f,42.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{27.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,147.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f,267.000000000000000f,-3.000000000000000f,-3.000000000000000f,-15.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.732050807568877f,-1.732050807568877f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,3));
ResRA = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,44.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,2,3));
ResIAR = new float[]{4.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,24.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,44.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{63.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,243.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,423.000000000000000f,-4.500000000000000f,-4.500000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f,-22.500000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.598076211353316f,-2.598076211353316f,12.990381056766578f,0.000000000000000f,0.000000000000000f,-12.990381056766578f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,3,3));
ResRA = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,3,3));
ResIAR = new float[]{7.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,27.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,47.000000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,3);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,354.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,594.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,4,3));
ResRA = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,49.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(3,4,3));
ResIAR = new float[]{9.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,29.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,49.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,4);
ResultR = new float[]{114.000000000000000f,-6.000000000000000f,-6.000000000000000f,-57.895121628746530f,1.287164595108754f,-0.360113611983910f,15.895121628746532f,-0.704488531107295f,-1.722562452017550f,15.895121628746532f,-1.722562452017550f,-0.704488531107295f,-57.895121628746530f,-0.360113611983910f,1.287164595108754f,354.000000000000000f,-6.000000000000000f,-6.000000000000000f,-76.436141291243374f,1.287164595108754f,-0.360113611983910f,64.436141291243374f,-0.704488531107294f,-1.722562452017549f,64.436141291243374f,-1.722562452017549f,-0.704488531107294f,-76.436141291243374f,-0.360113611983910f,1.287164595108754f,594.000000000000000f,-6.000000000000000f,-6.000000000000000f,-94.977160953740224f,1.287164595108754f,-0.360113611983910f,112.977160953740220f,-0.704488531107297f,-1.722562452017546f,112.977160953740220f,-1.722562452017546f,-0.704488531107297f,-94.977160953740224f,-0.360113611983910f,1.287164595108754f};
ResultI = new float[]{0.000000000000000f,3.464101615137754f,-3.464101615137754f,-11.155408057811126f,1.158968207112914f,1.694201341772547f,-26.609338042569235f,1.582307147660746f,0.181048609216671f,26.609338042569235f,-0.181048609216671f,-1.582307147660746f,11.155408057811126f,-1.694201341772547f,-1.158968207112914f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-68.218799035520334f,1.158968207112911f,1.694201341772550f,-61.876453180117622f,1.582307147660747f,0.181048609216669f,61.876453180117622f,-0.181048609216669f,-1.582307147660747f,68.218799035520334f,-1.694201341772550f,-1.158968207112911f,0.000000000000000f,3.464101615137754f,-3.464101615137754f,-125.282190013229550f,1.158968207112917f,1.694201341772544f,-97.143568317666023f,1.582307147660745f,0.181048609216679f,97.143568317666023f,-0.181048609216679f,-1.582307147660745f,125.282190013229550f,-1.694201341772544f,-1.158968207112917f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,5,3));
ResRA = new float[]{7.600000000000001f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132260f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132260f,0.085810973007250f,23.599999999999998f,-0.400000000000000f,-0.400000000000000f,-5.095742752749558f,0.085810973007250f,-0.024007574132261f,4.295742752749558f,-0.046965902073820f,-0.114837496801170f,4.295742752749558f,-0.114837496801170f,-0.046965902073820f,-5.095742752749558f,-0.024007574132261f,0.085810973007250f,39.600000000000001f,-0.400000000000001f,-0.400000000000001f,-6.331810730249348f,0.085810973007250f,-0.024007574132261f,7.531810730249347f,-0.046965902073820f,-0.114837496801170f,7.531810730249347f,-0.114837496801170f,-0.046965902073820f,-6.331810730249348f,-0.024007574132261f,0.085810973007250f};
ResRA.Reshape(new ILDimension(3,5,3));
ResIAR = new float[]{7.600000000000001f,-0.400000000000000f,-0.400000000000000f,-3.859674775249769f,0.085810973007250f,-0.024007574132260f,1.059674775249769f,-0.046965902073820f,-0.114837496801170f,1.059674775249769f,-0.114837496801170f,-0.046965902073820f,-3.859674775249769f,-0.024007574132260f,0.085810973007250f,23.599999999999998f,-0.400000000000000f,-0.400000000000000f,-5.095742752749558f,0.085810973007250f,-0.024007574132261f,4.295742752749558f,-0.046965902073820f,-0.114837496801170f,4.295742752749558f,-0.114837496801170f,-0.046965902073820f,-5.095742752749558f,-0.024007574132261f,0.085810973007250f,39.600000000000001f,-0.400000000000001f,-0.400000000000001f,-6.331810730249348f,0.085810973007250f,-0.024007574132261f,7.531810730249347f,-0.046965902073820f,-0.114837496801170f,7.531810730249347f,-0.114837496801170f,-0.046965902073820f,-6.331810730249348f,-0.024007574132261f,0.085810973007250f};
ResIAI = new float[]{0.000000000000000f,-0.230940107675850f,0.230940107675850f,0.743693870520742f,-0.077264547140861f,-0.112946756118170f,1.773955869504616f,-0.105487143177383f,-0.012069907281111f,-1.773955869504616f,0.012069907281111f,0.105487143177383f,-0.743693870520742f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,4.547919935701356f,-0.077264547140861f,-0.112946756118170f,4.125096878674508f,-0.105487143177383f,-0.012069907281111f,-4.125096878674508f,0.012069907281111f,0.105487143177383f,-4.547919935701356f,0.112946756118170f,0.077264547140861f,0.000000000000000f,-0.230940107675849f,0.230940107675849f,8.352146000881971f,-0.077264547140861f,-0.112946756118170f,6.476237887844401f,-0.105487143177383f,-0.012069907281112f,-6.476237887844401f,0.012069907281112f,0.105487143177383f,-8.352146000881971f,0.112946756118170f,0.077264547140861f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,5);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,110.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,130.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,150.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,190.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,210.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,230.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,90.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,170.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,3));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,3));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,22.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,42.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{40.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,200.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,360.000000000000000f,-4.000000000000000f,-4.000000000000000f,-4.000000000000000f,-20.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,4.000000000000000f,0.000000000000000f,-4.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,3));
ResRA = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,2,3));
ResIAR = new float[]{5.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{90.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,330.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,570.000000000000000f,-6.000000000000000f,-6.000000000000000f,-6.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-30.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.000000000000000f,0.000000000000000f,-6.000000000000000f,17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,3,3));
ResRA = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,3,3));
ResIAR = new float[]{7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,27.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,47.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,3);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,480.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,800.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-40.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,4,3));
ResRA = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(4,4,3));
ResIAR = new float[]{10.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,4);
ResultR = new float[]{160.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-77.811529493745269f,2.520147021340203f,0.618033988749893f,-1.284079043840410f,22.811529493745269f,-0.442463484164950f,-1.618033988749895f,-2.793604493334843f,22.811529493745269f,-2.793604493334843f,-1.618033988749895f,-0.442463484164950f,-77.811529493745269f,-1.284079043840410f,0.618033988749893f,2.520147021340203f,480.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-102.532889043741060f,2.520147021340204f,0.618033988749900f,-1.284079043840411f,87.532889043741065f,-0.442463484164950f,-1.618033988749900f,-2.793604493334843f,87.532889043741065f,-2.793604493334843f,-1.618033988749900f,-0.442463484164950f,-102.532889043741060f,-1.284079043840411f,0.618033988749900f,2.520147021340204f,800.000000000000000f,-8.000000000000000f,-8.000000000000000f,-8.000000000000000f,-127.254248593736860f,2.520147021340200f,0.618033988749900f,-1.284079043840414f,152.254248593736860f,-0.442463484164946f,-1.618033988749914f,-2.793604493334840f,152.254248593736860f,-2.793604493334840f,-1.618033988749914f,-0.442463484164946f,-127.254248593736860f,-1.284079043840414f,0.618033988749900f,2.520147021340200f};
ResultI = new float[]{0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-16.775990443005142f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-36.654687894677259f,2.793604493334840f,1.175570504584947f,-0.442463484164950f,36.654687894677259f,0.442463484164950f,-1.175570504584947f,-2.793604493334840f,16.775990443005142f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-92.860511746617419f,1.284079043840411f,1.902113032590307f,2.520147021340204f,-83.677508078075107f,2.793604493334843f,1.175570504584947f,-0.442463484164950f,83.677508078075107f,0.442463484164950f,-1.175570504584947f,-2.793604493334843f,92.860511746617419f,-2.520147021340204f,-1.902113032590307f,-1.284079043840411f,0.000000000000000f,8.000000000000000f,0.000000000000000f,-8.000000000000000f,-168.945033050229710f,1.284079043840414f,1.902113032590307f,2.520147021340200f,-130.700328261472980f,2.793604493334836f,1.175570504584940f,-0.442463484164950f,130.700328261472980f,0.442463484164950f,-1.175570504584940f,-2.793604493334836f,168.945033050229710f,-2.520147021340200f,-1.902113032590307f,-1.284079043840414f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,5,3));
ResRA = new float[]{7.999999999999999f,-0.400000000000000f,-0.399999999999999f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,24.000000000000000f,-0.399999999999999f,-0.399999999999999f,-0.399999999999999f,-5.126644452187053f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,4.376644452187053f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,4.376644452187053f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-5.126644452187053f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,40.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-6.362712429686843f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,7.612712429686843f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,7.612712429686843f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-6.362712429686843f,-0.064203952192021f,0.030901699437495f,0.126007351067010f};
ResRA.Reshape(new ILDimension(4,5,3));
ResIAR = new float[]{7.999999999999999f,-0.400000000000000f,-0.399999999999999f,-0.400000000000000f,-3.890576474687264f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,1.140576474687264f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,1.140576474687264f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-3.890576474687264f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,24.000000000000000f,-0.399999999999999f,-0.399999999999999f,-0.399999999999999f,-5.126644452187053f,0.126007351067010f,0.030901699437495f,-0.064203952192020f,4.376644452187053f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,4.376644452187053f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-5.126644452187053f,-0.064203952192020f,0.030901699437495f,0.126007351067010f,40.000000000000000f,-0.400000000000000f,-0.400000000000006f,-0.400000000000000f,-6.362712429686843f,0.126007351067010f,0.030901699437495f,-0.064203952192021f,7.612712429686843f,-0.022123174208247f,-0.080901699437495f,-0.139680224666742f,7.612712429686843f,-0.139680224666742f,-0.080901699437495f,-0.022123174208247f,-6.362712429686843f,-0.064203952192021f,0.030901699437495f,0.126007351067010f};
ResIAI = new float[]{0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,0.838799522150257f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,1.832734394733863f,-0.139680224666742f,-0.058778525229247f,0.022123174208248f,-1.832734394733863f,-0.022123174208248f,0.058778525229247f,0.139680224666742f,-0.838799522150257f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.399999999999999f,0.000000000000000f,0.399999999999999f,4.643025587330872f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,4.183875403903755f,-0.139680224666742f,-0.058778525229247f,0.022123174208247f,-4.183875403903755f,-0.022123174208247f,0.058778525229247f,0.139680224666742f,-4.643025587330872f,0.126007351067010f,0.095105651629515f,0.064203952192021f,0.000000000000000f,-0.400000000000000f,0.000000000000000f,0.400000000000000f,8.447251652511485f,-0.064203952192021f,-0.095105651629515f,-0.126007351067010f,6.535016413073648f,-0.139680224666742f,-0.058778525229248f,0.022123174208247f,-6.535016413073648f,-0.022123174208247f,0.058778525229248f,0.139680224666742f,-8.447251652511485f,0.126007351067010f,0.095105651629515f,0.064203952192021f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,5);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,140.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,165.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,190.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,240.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,265.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,290.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,115.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,215.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,3));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(5,1,3));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,23.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,43.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{55.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,255.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,455.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-5.000000000000000f,-25.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,6.881909602355867f,1.624598481164532f,-1.624598481164532f,-6.881909602355867f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,3));
ResRA = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,2,3));
ResIAR = new float[]{5.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,25.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,45.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{120.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,420.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,720.000000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-7.500000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,10.322864403533801f,2.436897721746798f,-2.436897721746798f,-10.322864403533801f,21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-21.650635094610962f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,3,3));
ResRA = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,3,3));
ResIAR = new float[]{8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,28.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,48.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1.443375672974064f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,3);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,1010.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-50.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,4,3));
ResRA = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResRA.Reshape(new ILDimension(5,4,3));
ResIAR = new float[]{10.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,30.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,50.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,-2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,2.500000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,4);
ResultR = new float[]{210.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-98.036954353118972f,4.045084971874739f,1.545084971874741f,0.000000000000003f,-2.499999999999996f,30.536954353118958f,-0.000000000000002f,-1.545084971874738f,-2.500000000000001f,-4.045084971874740f,30.536954353118958f,-4.045084971874740f,-2.500000000000001f,-1.545084971874738f,-0.000000000000002f,-98.036954353118972f,-2.499999999999996f,0.000000000000003f,1.545084971874741f,4.045084971874739f,610.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-128.938653790613700f,4.045084971874736f,1.545084971874737f,-0.000000000000000f,-2.500000000000000f,111.438653790613700f,0.000000000000001f,-1.545084971874737f,-2.500000000000000f,-4.045084971874737f,111.438653790613700f,-4.045084971874737f,-2.500000000000000f,-1.545084971874737f,0.000000000000001f,-128.938653790613700f,-2.500000000000000f,-0.000000000000000f,1.545084971874737f,4.045084971874736f,1010.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-10.000000000000000f,-159.840353228108430f,4.045084971874726f,1.545084971874741f,0.000000000000004f,-2.500000000000012f,192.340353228108430f,0.000000000000012f,-1.545084971874746f,-2.499999999999999f,-4.045084971874725f,192.340353228108430f,-4.045084971874725f,-2.499999999999999f,-1.545084971874746f,0.000000000000012f,-159.840353228108430f,-2.500000000000012f,0.000000000000004f,1.545084971874741f,4.045084971874726f};
ResultI = new float[]{0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-23.347629344494312f,1.314327780297837f,2.126627020880101f,2.628655560595667f,3.440954801177931f,-47.287822999077761f,4.253254041760197f,2.126627020880099f,0.812299240582264f,-1.314327780297834f,47.287822999077761f,1.314327780297834f,-0.812299240582264f,-2.126627020880099f,-4.253254041760197f,23.347629344494312f,-3.440954801177931f,-2.628655560595667f,-2.126627020880101f,-1.314327780297837f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-118.453280974009660f,1.314327780297834f,2.126627020880099f,2.628655560595670f,3.440954801177934f,-106.066348228325080f,4.253254041760203f,2.126627020880104f,0.812299240582267f,-1.314327780297832f,106.066348228325080f,1.314327780297832f,-0.812299240582267f,-2.126627020880104f,-4.253254041760203f,118.453280974009660f,-3.440954801177934f,-2.628655560595670f,-2.126627020880099f,-1.314327780297834f,0.000000000000000f,13.763819204711734f,3.249196962329064f,-3.249196962329064f,-13.763819204711734f,-213.558932603525020f,1.314327780297832f,2.126627020880102f,2.628655560595666f,3.440954801177937f,-164.844873457572390f,4.253254041760201f,2.126627020880097f,0.812299240582267f,-1.314327780297838f,164.844873457572390f,1.314327780297838f,-0.812299240582267f,-2.126627020880097f,-4.253254041760201f,213.558932603525020f,-3.440954801177937f,-2.628655560595666f,-2.126627020880102f,-1.314327780297832f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,5,3));
ResRA = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874990f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,1.221478174124758f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,1.221478174124758f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874990f,24.399999999999999f,-0.399999999999998f,-0.400000000000000f,-0.400000000000000f,-0.399999999999998f,-5.157546151624548f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,4.457546151624548f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,4.457546151624548f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-5.157546151624548f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,40.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-6.393614129124338f,0.161803398874989f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,7.693614129124337f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,7.693614129124337f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-6.393614129124338f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874989f};
ResRA.Reshape(new ILDimension(5,5,3));
ResIAR = new float[]{8.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-3.921478174124759f,0.161803398874990f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,1.221478174124758f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,1.221478174124758f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-3.921478174124759f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874990f,24.399999999999999f,-0.399999999999998f,-0.400000000000000f,-0.400000000000000f,-0.399999999999998f,-5.157546151624548f,0.161803398874989f,0.061803398874989f,-0.000000000000000f,-0.100000000000000f,4.457546151624548f,-0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874990f,4.457546151624548f,-0.161803398874990f,-0.100000000000000f,-0.061803398874990f,-0.000000000000000f,-5.157546151624548f,-0.100000000000000f,-0.000000000000000f,0.061803398874989f,0.161803398874989f,40.399999999999999f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-0.400000000000000f,-6.393614129124338f,0.161803398874989f,0.061803398874990f,0.000000000000000f,-0.100000000000000f,7.693614129124337f,0.000000000000000f,-0.061803398874990f,-0.100000000000000f,-0.161803398874989f,7.693614129124337f,-0.161803398874989f,-0.100000000000000f,-0.061803398874990f,0.000000000000000f,-6.393614129124338f,-0.100000000000000f,0.000000000000000f,0.061803398874990f,0.161803398874989f};
ResIAI = new float[]{0.000000000000000f,-0.550552768188469f,-0.129967878493163f,0.129967878493163f,0.550552768188469f,0.933905173779772f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,1.891512919963110f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-1.891512919963110f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-0.933905173779772f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188469f,-0.129967878493162f,0.129967878493162f,0.550552768188469f,4.738131238960387f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047117f,4.242653929133004f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-4.242653929133004f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-4.738131238960387f,0.137638192047117f,0.105146222423827f,0.085065080835204f,0.052573111211913f,0.000000000000000f,-0.550552768188470f,-0.129967878493162f,0.129967878493162f,0.550552768188470f,8.542357304141001f,-0.052573111211913f,-0.085065080835204f,-0.105146222423827f,-0.137638192047118f,6.593794938302895f,-0.170130161670408f,-0.085065080835204f,-0.032491969623291f,0.052573111211913f,-6.593794938302895f,-0.052573111211913f,0.032491969623291f,0.085065080835204f,0.170130161670408f,-8.542357304141001f,0.137638192047118f,0.105146222423827f,0.085065080835204f,0.052573111211913f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,5);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,140.000000000000000f,-18.500000000000000f,12.500000000000000f,28.000000000000000f,12.500000000000000f,-18.500000000000000f,165.000000000000000f,-21.000000000000000f,15.000000000000000f,33.000000000000000f,15.000000000000000f,-21.000000000000000f,190.000000000000000f,-23.500000000000000f,17.500000000000000f,38.000000000000000f,17.500000000000000f,-23.500000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f,240.000000000000000f,-28.500000000000000f,22.500000000000000f,48.000000000000000f,22.500000000000000f,-28.500000000000000f,265.000000000000000f,-31.000000000000000f,25.000000000000000f,53.000000000000000f,25.000000000000000f,-31.000000000000000f,290.000000000000000f,-33.500000000000000f,27.500000000000000f,58.000000000000000f,27.500000000000000f,-33.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-21.650635094610966f,-25.114736709748719f,0.000000000000000f,25.114736709748719f,21.650635094610966f,0.000000000000000f,-25.980762113533157f,-29.444863728670914f,0.000000000000000f,29.444863728670914f,25.980762113533157f,0.000000000000000f,-30.310889132455351f,-33.774990747593108f,0.000000000000000f,33.774990747593108f,30.310889132455351f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f,0.000000000000000f,-38.971143170299740f,-42.435244785437490f,0.000000000000000f,42.435244785437490f,38.971143170299740f,0.000000000000000f,-43.301270189221931f,-46.765371804359681f,0.000000000000000f,46.765371804359681f,43.301270189221931f,0.000000000000000f,-47.631397208144122f,-51.095498823281879f,0.000000000000000f,51.095498823281879f,47.631397208144122f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(6,0,3));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,115.000000000000000f,-16.000000000000000f,10.000000000000000f,23.000000000000000f,10.000000000000000f,-16.000000000000000f,215.000000000000000f,-26.000000000000000f,20.000000000000000f,43.000000000000000f,20.000000000000000f,-26.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-17.320508075688771f,-20.784609690826528f,0.000000000000000f,20.784609690826528f,17.320508075688771f,0.000000000000000f,-34.641016151377542f,-38.105117766515299f,0.000000000000000f,38.105117766515299f,34.641016151377542f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,3));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f};
ResRA.Reshape(new ILDimension(6,1,3));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,19.166666666666668f,-2.666666666666667f,1.666666666666667f,3.833333333333334f,1.666666666666667f,-2.666666666666667f,35.833333333333336f,-4.333333333333333f,3.333333333333334f,7.166666666666667f,3.333333333333334f,-4.333333333333333f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f,0.000000000000000f,2.886751345948129f,3.464101615137755f,0.000000000000000f,-3.464101615137755f,-2.886751345948129f,0.000000000000000f,5.773502691896257f,6.350852961085884f,0.000000000000000f,-6.350852961085884f,-5.773502691896257f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new float[]{55.000000000000000f,-14.500000000000000f,2.500000000000000f,11.000000000000000f,2.500000000000000f,-14.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,255.000000000000000f,-34.500000000000000f,22.500000000000000f,51.000000000000000f,22.500000000000000f,-34.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f,455.000000000000000f,-54.500000000000000f,42.500000000000000f,91.000000000000000f,42.500000000000000f,-54.500000000000000f,-25.000000000000000f,2.500000000000000f,-2.500000000000000f,-5.000000000000000f,-2.500000000000000f,2.500000000000000f};
ResultI = new float[]{0.000000000000000f,-4.330127018922193f,-11.258330249197702f,0.000000000000000f,11.258330249197702f,4.330127018922193f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-38.971143170299740f,-45.899346400575247f,0.000000000000000f,45.899346400575247f,38.971143170299740f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f,0.000000000000000f,-73.612159321677282f,-80.540362551952796f,0.000000000000000f,80.540362551952796f,73.612159321677282f,0.000000000000000f,4.330127018922193f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,3));
ResRA = new float[]{4.583333333333333f,-1.208333333333333f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,21.250000000000000f,-2.875000000000000f,1.875000000000000f,4.250000000000000f,1.875000000000000f,-2.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,37.916666666666664f,-4.541666666666667f,3.541666666666667f,7.583333333333333f,3.541666666666667f,-4.541666666666667f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResRA.Reshape(new ILDimension(6,2,3));
ResIAR = new float[]{4.583333333333333f,-1.208333333333333f,0.208333333333333f,0.916666666666667f,0.208333333333333f,-1.208333333333333f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,21.250000000000000f,-2.875000000000000f,1.875000000000000f,4.250000000000000f,1.875000000000000f,-2.875000000000000f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,37.916666666666664f,-4.541666666666667f,3.541666666666667f,7.583333333333333f,3.541666666666667f,-4.541666666666667f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f};
ResIAI = new float[]{0.000000000000000f,0.360843918243516f,0.938194187433142f,0.000000000000000f,-0.938194187433142f,-0.360843918243516f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,3.247595264191645f,3.824945533381271f,0.000000000000000f,-3.824945533381271f,-3.247595264191645f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,0.000000000000000f,6.134346610139773f,6.711696879329399f,0.000000000000000f,-6.711696879329399f,-6.134346610139773f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
ResultR = new float[]{120.000000000000000f,-25.500000000000000f,7.500000000000000f,24.000000000000000f,7.500000000000000f,-25.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,420.000000000000000f,-55.500000000000000f,37.500000000000000f,84.000000000000000f,37.500000000000000f,-55.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f,720.000000000000000f,-85.500000000000000f,67.500000000000000f,144.000000000000000f,67.500000000000000f,-85.500000000000000f,-37.500000000000000f,7.500000000000000f,-0.000000000000000f,-7.500000000000000f,-7.500000000000000f,0.000000000000000f,-37.500000000000000f,0.000000000000000f,-7.500000000000000f,-7.500000000000000f,-0.000000000000000f,7.500000000000000f};
ResultI = new float[]{0.000000000000000f,-12.990381056766578f,-23.382685902179841f,0.000000000000000f,23.382685902179841f,12.990381056766578f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-64.951905283832900f,-75.344210129246164f,0.000000000000000f,75.344210129246164f,64.951905283832900f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f,0.000000000000000f,-116.913429510899210f,-127.305734356312470f,0.000000000000000f,127.305734356312470f,116.913429510899210f,21.650635094610962f,4.330127018922193f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-21.650635094610962f,8.660254037844386f,4.330127018922193f,-4.330127018922193f,-8.660254037844386f,-4.330127018922193f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,3,3));
ResRA = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f};
ResRA.Reshape(new ILDimension(6,3,3));
ResIAR = new float[]{6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,23.333333333333332f,-3.083333333333334f,2.083333333333334f,4.666666666666667f,2.083333333333334f,-3.083333333333334f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f,40.000000000000000f,-4.750000000000000f,3.750000000000000f,8.000000000000000f,3.750000000000000f,-4.750000000000000f,-2.083333333333334f,0.416666666666667f,-0.000000000000000f,-0.416666666666667f,-0.416666666666667f,0.000000000000000f,-2.083333333333334f,0.000000000000000f,-0.416666666666667f,-0.416666666666667f,-0.000000000000000f,0.416666666666667f};
ResIAI = new float[]{0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,3.608439182435161f,4.185789451624786f,0.000000000000000f,-4.185789451624786f,-3.608439182435161f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f,0.000000000000000f,6.495190528383290f,7.072540797572915f,0.000000000000000f,-7.072540797572915f,-6.495190528383290f,-1.202813060811720f,-0.240562612162344f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,1.202813060811720f,-0.481125224324688f,-0.240562612162344f,0.240562612162344f,0.481125224324688f,0.240562612162344f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,3,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,3);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,610.000000000000000f,-79.000000000000000f,55.000000000000000f,122.000000000000000f,55.000000000000000f,-79.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f,1010.000000000000000f,-119.000000000000000f,95.000000000000000f,202.000000000000000f,95.000000000000000f,-119.000000000000000f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,-50.000000000000000f,5.000000000000000f,-5.000000000000000f,-10.000000000000000f,-5.000000000000000f,5.000000000000000f,-50.000000000000000f,-3.660254037844386f,-13.660254037844386f,-10.000000000000000f,3.660254037844386f,13.660254037844386f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-95.262794416288244f,-109.119200876839260f,0.000000000000000f,109.119200876839260f,95.262794416288244f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f,0.000000000000000f,-164.544826719043330f,-178.401233179594360f,0.000000000000000f,178.401233179594360f,164.544826719043330f,50.000000000000000f,3.660254037844386f,13.660254037844386f,10.000000000000000f,-3.660254037844386f,-13.660254037844386f,0.000000000000000f,8.660254037844386f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-8.660254037844386f,-50.000000000000000f,13.660254037844386f,3.660254037844386f,-10.000000000000000f,-13.660254037844386f,-3.660254037844386f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,4,3));
ResRA = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,25.416666666666668f,-3.291666666666667f,2.291666666666667f,5.083333333333333f,2.291666666666667f,-3.291666666666667f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,42.083333333333336f,-4.958333333333333f,3.958333333333334f,8.416666666666666f,3.958333333333334f,-4.958333333333333f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResRA.Reshape(new ILDimension(6,4,3));
ResIAR = new float[]{8.750000000000000f,-1.625000000000000f,0.625000000000000f,1.750000000000000f,0.625000000000000f,-1.625000000000000f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,25.416666666666668f,-3.291666666666667f,2.291666666666667f,5.083333333333333f,2.291666666666667f,-3.291666666666667f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,42.083333333333336f,-4.958333333333333f,3.958333333333334f,8.416666666666666f,3.958333333333334f,-4.958333333333333f,-2.083333333333334f,0.569177251576849f,0.152510584910183f,-0.416666666666667f,-0.569177251576849f,-0.152510584910183f,-2.083333333333334f,0.208333333333333f,-0.208333333333333f,-0.416666666666667f,-0.208333333333333f,0.208333333333333f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f};
ResIAI = new float[]{0.000000000000000f,1.082531754730548f,1.659882023920174f,0.000000000000000f,-1.659882023920174f,-1.082531754730548f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,3.969283100678677f,4.546633369868302f,0.000000000000000f,-4.546633369868302f,-3.969283100678677f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f,0.000000000000000f,6.856034446626805f,7.433384715816431f,0.000000000000000f,-7.433384715816431f,-6.856034446626805f,-2.083333333333334f,-0.152510584910183f,-0.569177251576849f,-0.416666666666667f,0.152510584910183f,0.569177251576849f,0.000000000000000f,-0.360843918243516f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.360843918243516f,2.083333333333334f,-0.569177251576849f,-0.152510584910183f,0.416666666666667f,0.569177251576849f,0.152510584910183f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,4,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,4);
ResultR = new float[]{210.000000000000000f,-39.000000000000000f,15.000000000000000f,42.000000000000000f,15.000000000000000f,-39.000000000000000f,-98.036954353118958f,9.621261194543136f,-14.207737073390824f,-19.607390870623789f,-4.472602814108122f,12.767282625455183f,30.536954353118958f,-13.357652230006455f,-6.859358218078331f,6.107390870623791f,10.539698105577276f,-0.030891589991866f,30.536954353118958f,-0.030891589991866f,10.539698105577276f,6.107390870623791f,-6.859358218078331f,-13.357652230006455f,-98.036954353118958f,12.767282625455183f,-4.472602814108122f,-19.607390870623789f,-14.207737073390824f,9.621261194543136f,610.000000000000000f,-79.000000000000000f,55.000000000000000f,122.000000000000000f,55.000000000000000f,-79.000000000000000f,-128.938653790613700f,-3.761350932634024f,-33.770689088066938f,-25.787730758122741f,8.910009313069033f,32.330234640131295f,111.438653790613700f,-31.628561382858472f,-8.949927483431399f,22.287730758122741f,28.810607258429304f,2.059677675361201f,111.438653790613700f,2.059677675361201f,28.810607258429304f,22.287730758122741f,-8.949927483431399f,-31.628561382858472f,-128.938653790613700f,32.330234640131295f,8.910009313069033f,-25.787730758122741f,-33.770689088066938f,-3.761350932634024f,1010.000000000000000f,-119.000000000000000f,95.000000000000000f,202.000000000000000f,95.000000000000000f,-119.000000000000000f,-159.840353228108460f,-17.143963059811188f,-53.333641102743044f,-31.968070645621687f,22.292621440246208f,51.893186654807408f,192.340353228108460f,-49.899470535710492f,-11.040496748784474f,38.468070645621687f,47.081516411281314f,4.150246940714272f,192.340353228108460f,4.150246940714272f,47.081516411281314f,38.468070645621687f,-11.040496748784474f,-49.899470535710492f,-159.840353228108460f,51.893186654807408f,22.292621440246208f,-31.968070645621687f,-53.333641102743044f,-17.143963059811188f};
ResultI = new float[]{0.000000000000000f,-25.980762113533157f,-39.837168574084174f,0.000000000000000f,39.837168574084174f,25.980762113533157f,-23.347629344494312f,22.792166151679456f,16.339937003214402f,-4.669525868898862f,-18.156293323227807f,-9.563131636124215f,-47.287822999077761f,4.186548098088650f,-9.836889335492469f,-9.457564599815553f,2.142680492554329f,10.561083772359158f,47.287822999077761f,-10.561083772359158f,-2.142680492554329f,9.457564599815553f,9.836889335492469f,-4.186548098088650f,23.347629344494312f,9.563131636124215f,18.156293323227807f,4.669525868898862f,-16.339937003214402f,-22.792166151679456f,0.000000000000000f,-95.262794416288244f,-109.119200876839260f,0.000000000000000f,109.119200876839260f,95.262794416288244f,-118.453280974009660f,37.655062661227333f,12.181703186859213f,-23.690656194801932f,-33.019189832775680f,-5.404897819769023f,-106.066348228325070f,-3.948184763427351f,-29.727327242857928f,-21.213269645665015f,10.277413354070337f,30.451521679724628f,106.066348228325070f,-30.451521679724628f,-10.277413354070337f,21.213269645665015f,29.727327242857928f,3.948184763427351f,118.453280974009660f,5.404897819769023f,33.019189832775680f,23.690656194801932f,-12.181703186859213f,-37.655062661227333f,0.000000000000000f,-164.544826719043330f,-178.401233179594360f,0.000000000000000f,178.401233179594360f,164.544826719043330f,-213.558932603525020f,52.517959170775221f,8.023469370504035f,-42.711786520705004f,-47.882086342323575f,-1.246664003413834f,-164.844873457572390f,-12.082917624943352f,-49.617765150223413f,-32.968974691514475f,18.412146215586340f,50.341959587090088f,164.844873457572390f,-50.341959587090088f,-18.412146215586340f,32.968974691514475f,49.617765150223413f,12.082917624943352f,213.558932603525020f,1.246664003413834f,47.882086342323575f,42.711786520705004f,-8.023469370504035f,-52.517959170775221f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,5,3));
ResRA = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437299f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666396f,1.017898478437299f,-0.001029719666396f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437299f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f,20.333333333333332f,-2.633333333333333f,1.833333333333333f,4.066666666666666f,1.833333333333333f,-2.633333333333333f,-4.297955126353790f,-0.125378364421134f,-1.125689636268898f,-0.859591025270758f,0.297000310435635f,1.077674488004377f,3.714621793020457f,-1.054285379428616f,-0.298330916114380f,0.742924358604091f,0.960353575280976f,0.068655922512040f,3.714621793020457f,0.068655922512040f,0.960353575280976f,0.742924358604091f,-0.298330916114380f,-1.054285379428616f,-4.297955126353790f,1.077674488004377f,0.297000310435635f,-0.859591025270758f,-1.125689636268898f,-0.125378364421134f,33.666666666666664f,-3.966666666666667f,3.166666666666667f,6.733333333333332f,3.166666666666667f,-3.966666666666667f,-5.328011774270282f,-0.571465435327039f,-1.777788036758101f,-1.065602354854056f,0.743087381341540f,1.729772888493580f,6.411345107603616f,-1.663315684523683f,-0.368016558292816f,1.282269021520723f,1.569383880376044f,0.138341564690476f,6.411345107603616f,0.138341564690476f,1.569383880376044f,1.282269021520723f,-0.368016558292816f,-1.663315684523683f,-5.328011774270282f,1.729772888493580f,0.743087381341540f,-1.065602354854056f,-1.777788036758101f,-0.571465435327039f};
ResRA.Reshape(new ILDimension(6,5,3));
ResIAR = new float[]{7.000000000000000f,-1.300000000000000f,0.500000000000000f,1.400000000000000f,0.500000000000000f,-1.300000000000000f,-3.267898478437299f,0.320708706484771f,-0.473591235779694f,-0.653579695687460f,-0.149086760470271f,0.425576087515173f,1.017898478437299f,-0.445255074333548f,-0.228645273935944f,0.203579695687460f,0.351323270185909f,-0.001029719666396f,1.017898478437299f,-0.001029719666396f,0.351323270185909f,0.203579695687460f,-0.228645273935944f,-0.445255074333548f,-3.267898478437299f,0.425576087515173f,-0.149086760470271f,-0.653579695687460f,-0.473591235779694f,0.320708706484771f,20.333333333333332f,-2.633333333333333f,1.833333333333333f,4.066666666666666f,1.833333333333333f,-2.633333333333333f,-4.297955126353790f,-0.125378364421134f,-1.125689636268898f,-0.859591025270758f,0.297000310435635f,1.077674488004377f,3.714621793020457f,-1.054285379428616f,-0.298330916114380f,0.742924358604091f,0.960353575280976f,0.068655922512040f,3.714621793020457f,0.068655922512040f,0.960353575280976f,0.742924358604091f,-0.298330916114380f,-1.054285379428616f,-4.297955126353790f,1.077674488004377f,0.297000310435635f,-0.859591025270758f,-1.125689636268898f,-0.125378364421134f,33.666666666666664f,-3.966666666666667f,3.166666666666667f,6.733333333333332f,3.166666666666667f,-3.966666666666667f,-5.328011774270282f,-0.571465435327039f,-1.777788036758101f,-1.065602354854056f,0.743087381341540f,1.729772888493580f,6.411345107603616f,-1.663315684523683f,-0.368016558292816f,1.282269021520723f,1.569383880376044f,0.138341564690476f,6.411345107603616f,0.138341564690476f,1.569383880376044f,1.282269021520723f,-0.368016558292816f,-1.663315684523683f,-5.328011774270282f,1.729772888493580f,0.743087381341540f,-1.065602354854056f,-1.777788036758101f,-0.571465435327039f};
ResIAI = new float[]{0.000000000000000f,0.866025403784439f,1.327905619136139f,0.000000000000000f,-1.327905619136139f,-0.866025403784439f,0.778254311483144f,-0.759738871722649f,-0.544664566773813f,0.155650862296629f,0.605209777440927f,0.318771054537474f,1.576260766635925f,-0.139551603269622f,0.327896311183082f,0.315252153327185f,-0.071422683085144f,-0.352036125745305f,-1.576260766635925f,0.352036125745305f,0.071422683085144f,-0.315252153327185f,-0.327896311183082f,0.139551603269622f,-0.778254311483144f,-0.318771054537474f,-0.605209777440927f,-0.155650862296629f,0.544664566773813f,0.759738871722649f,0.000000000000000f,3.175426480542942f,3.637306695894643f,0.000000000000000f,-3.637306695894643f,-3.175426480542942f,3.948442699133655f,-1.255168755374245f,-0.406056772895307f,0.789688539826731f,1.100639661092522f,0.180163260658967f,3.535544940944169f,0.131606158780912f,0.990910908095264f,0.707108988188834f,-0.342580445135678f,-1.015050722657487f,-3.535544940944169f,1.015050722657487f,0.342580445135678f,-0.707108988188834f,-0.990910908095264f,-0.131606158780912f,-3.948442699133655f,-0.180163260658967f,-1.100639661092522f,-0.789688539826731f,0.406056772895307f,1.255168755374245f,0.000000000000000f,5.484827557301444f,5.946707772653145f,0.000000000000000f,-5.946707772653145f,-5.484827557301444f,7.118631086784167f,-1.750598639025841f,-0.267448979016801f,1.423726217356834f,1.596069544744120f,0.041555466780461f,5.494829115252412f,0.402763920831445f,1.653925505007447f,1.098965823050482f,-0.613738207186212f,-1.678065319569670f,-5.494829115252412f,1.678065319569670f,0.613738207186212f,-1.098965823050482f,-1.653925505007447f,-0.402763920831445f,-7.118631086784167f,-0.041555466780461f,-1.596069544744120f,-1.423726217356834f,0.267448979016801f,1.750598639025841f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,5,3));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,5);
}
private static void TEST_FFT_float_fcomplex_18() { 
ILArray<float> A,ResultR,ResultI,ResRA,ResIAI,ResIAR;
ILArray<fcomplex> Result,ResIA;
A = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f};
A.Reshape(new ILDimension(5,1,4));
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,0);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,1,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,1);
ResultR = new float[]{1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,1.000000000000000f,2.000000000000000f,3.000000000000000f,4.000000000000000f,5.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,6.000000000000000f,7.000000000000000f,8.000000000000000f,9.000000000000000f,10.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,11.000000000000000f,12.000000000000000f,13.000000000000000f,14.000000000000000f,15.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f,16.000000000000000f,17.000000000000000f,18.000000000000000f,19.000000000000000f,20.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(0,2,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(0,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,0,2);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(1,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,0);
ResultR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,1,4));
ResRA = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f};
ResRA.Reshape(new ILDimension(1,1,4));
ResIAR = new float[]{1.000000000000000f,6.000000000000000f,11.000000000000000f,16.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,1);
ResultR = new float[]{1.000000000000000f,1.000000000000000f,6.000000000000000f,6.000000000000000f,11.000000000000000f,11.000000000000000f,16.000000000000000f,16.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(1,2,4));
ResRA = new float[]{0.500000000000000f,0.500000000000000f,3.000000000000000f,3.000000000000000f,5.500000000000000f,5.500000000000000f,8.000000000000000f,8.000000000000000f};
ResRA.Reshape(new ILDimension(1,2,4));
ResIAR = new float[]{0.500000000000000f,0.500000000000000f,3.000000000000000f,3.000000000000000f,5.500000000000000f,5.500000000000000f,8.000000000000000f,8.000000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(1,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,1,2);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(2,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,0);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,1,4));
ResRA = new float[]{1.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,11.500000000000000f,-0.500000000000000f,16.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(2,1,4));
ResIAR = new float[]{1.500000000000000f,-0.500000000000000f,6.500000000000000f,-0.500000000000000f,11.500000000000000f,-0.500000000000000f,16.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,1);
ResultR = new float[]{3.000000000000000f,-1.000000000000000f,3.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,13.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,23.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f,33.000000000000000f,-1.000000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(2,2,4));
ResRA = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(2,2,4));
ResIAR = new float[]{0.750000000000000f,-0.250000000000000f,0.750000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,3.250000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,5.750000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f,8.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f,0.000000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(2,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,2,2);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(3,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,0);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,1,4));
ResRA = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,7.000000000000000f,-0.500000000000000f,-0.500000000000000f,12.000000000000000f,-0.500000000000000f,-0.500000000000000f,17.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(3,1,4));
ResIAR = new float[]{2.000000000000000f,-0.500000000000000f,-0.500000000000000f,7.000000000000000f,-0.500000000000000f,-0.500000000000000f,12.000000000000000f,-0.500000000000000f,-0.500000000000000f,17.000000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,0.288675134594813f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,1);
ResultR = new float[]{6.000000000000000f,-1.500000000000000f,-1.500000000000000f,6.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,21.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,36.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f,51.000000000000000f,-1.500000000000000f,-1.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f,0.000000000000000f,0.866025403784439f,-0.866025403784439f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(3,2,4));
ResRA = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(3,2,4));
ResIAR = new float[]{1.000000000000000f,-0.250000000000000f,-0.250000000000000f,1.000000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,3.500000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,6.000000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f,8.500000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f,0.000000000000000f,-0.144337567297406f,0.144337567297406f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(3,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,3,2);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(4,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,0);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,1,4));
ResRA = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,12.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,17.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(4,1,4));
ResIAR = new float[]{2.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,7.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,12.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,17.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f,0.000000000000000f,-0.500000000000000f,0.000000000000000f,0.500000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,1);
ResultR = new float[]{10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,10.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,30.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,50.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f,70.000000000000000f,-2.000000000000000f,-2.000000000000000f,-2.000000000000000f};
ResultI = new float[]{0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f,0.000000000000000f,2.000000000000000f,0.000000000000000f,-2.000000000000000f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(4,2,4));
ResRA = new float[]{1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(4,2,4));
ResIAR = new float[]{1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,3.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,8.750000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.250000000000000f,0.000000000000000f,0.250000000000000f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(4,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,4,2);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(5,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,0);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,1,4));
ResRA = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,13.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,18.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResRA.Reshape(new ILDimension(5,1,4));
ResIAR = new float[]{3.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,8.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,13.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,18.000000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f,-0.500000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f,0.000000000000000f,-0.688190960235587f,-0.162459848116453f,0.162459848116453f,0.688190960235587f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,1);
ResultR = new float[]{15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,15.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,40.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,65.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,90.000000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f,-2.500000000000000f};
ResultI = new float[]{0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f,0.000000000000000f,3.440954801177933f,0.812299240582266f,-0.812299240582266f,-3.440954801177933f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(5,2,4));
ResRA = new float[]{1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResRA.Reshape(new ILDimension(5,2,4));
ResIAR = new float[]{1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,1.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,4.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,6.500000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,9.000000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f,-0.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f,0.000000000000000f,-0.344095480117793f,-0.081229924058227f,0.081229924058227f,0.344095480117793f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(5,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,5,2);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4));
ResRA = new float[]{};
ResRA.Reshape(new ILDimension(6,0,4));
ResIAR = new float[]{};
ResIAI = new float[]{};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,0,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,0);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,1,4));
ResRA = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,10.833333333333334f,-1.833333333333333f,0.833333333333333f,2.166666666666667f,0.833333333333333f,-1.833333333333333f,15.000000000000000f,-2.250000000000000f,1.250000000000000f,3.000000000000000f,1.250000000000000f,-2.250000000000000f};
ResRA.Reshape(new ILDimension(6,1,4));
ResIAR = new float[]{2.500000000000000f,-1.000000000000000f,-0.000000000000000f,0.500000000000000f,0.000000000000000f,-1.000000000000000f,6.666666666666667f,-1.416666666666667f,0.416666666666667f,1.333333333333333f,0.416666666666667f,-1.416666666666667f,10.833333333333334f,-1.833333333333333f,0.833333333333333f,2.166666666666667f,0.833333333333333f,-1.833333333333333f,15.000000000000000f,-2.250000000000000f,1.250000000000000f,3.000000000000000f,1.250000000000000f,-2.250000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.577350269189626f,0.000000000000000f,-0.577350269189626f,-0.000000000000000f,0.000000000000000f,0.721687836487032f,1.299038105676658f,0.000000000000000f,-1.299038105676658f,-0.721687836487032f,0.000000000000000f,1.443375672974064f,2.020725942163690f,0.000000000000000f,-2.020725942163690f,-1.443375672974064f,0.000000000000000f,2.165063509461096f,2.742413778650722f,0.000000000000000f,-2.742413778650722f,-2.165063509461096f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,1,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,1);
ResultR = new float[]{15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,15.000000000000000f,-6.000000000000000f,0.000000000000000f,3.000000000000000f,0.000000000000000f,-6.000000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,40.000000000000000f,-8.500000000000000f,2.500000000000000f,8.000000000000000f,2.500000000000000f,-8.500000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,65.000000000000000f,-11.000000000000000f,5.000000000000000f,13.000000000000000f,5.000000000000000f,-11.000000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f,90.000000000000000f,-13.500000000000000f,7.500000000000000f,18.000000000000000f,7.500000000000000f,-13.500000000000000f};
ResultI = new float[]{0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,0.000000000000000f,-3.464101615137754f,0.000000000000000f,3.464101615137754f,0.000000000000000f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-4.330127018922193f,-7.794228634059947f,0.000000000000000f,7.794228634059947f,4.330127018922193f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-8.660254037844386f,-12.124355652982141f,0.000000000000000f,12.124355652982141f,8.660254037844386f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f,0.000000000000000f,-12.990381056766578f,-16.454482671904334f,0.000000000000000f,16.454482671904334f,12.990381056766578f};
Result = ILMath.ccomplex(ResultR,ResultI);
Result.Reshape(new ILDimension(6,2,4));
ResRA = new float[]{1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f};
ResRA.Reshape(new ILDimension(6,2,4));
ResIAR = new float[]{1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,1.250000000000000f,-0.500000000000000f,-0.000000000000000f,0.250000000000000f,0.000000000000000f,-0.500000000000000f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,3.333333333333334f,-0.708333333333333f,0.208333333333333f,0.666666666666667f,0.208333333333333f,-0.708333333333333f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,5.416666666666667f,-0.916666666666667f,0.416666666666667f,1.083333333333333f,0.416666666666667f,-0.916666666666667f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f,7.500000000000000f,-1.125000000000000f,0.625000000000000f,1.500000000000000f,0.625000000000000f,-1.125000000000000f};
ResIAI = new float[]{0.000000000000000f,-0.000000000000000f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,-0.000000000000000f,0.000000000000000f,-0.000000000000000f,0.288675134594813f,0.000000000000000f,-0.288675134594813f,-0.000000000000000f,0.000000000000000f,0.360843918243516f,0.649519052838329f,0.000000000000000f,-0.649519052838329f,-0.360843918243516f,0.000000000000000f,0.360843918243516f,0.649519052838329f,0.000000000000000f,-0.649519052838329f,-0.360843918243516f,0.000000000000000f,0.721687836487032f,1.010362971081845f,0.000000000000000f,-1.010362971081845f,-0.721687836487032f,0.000000000000000f,0.721687836487032f,1.010362971081845f,0.000000000000000f,-1.010362971081845f,-0.721687836487032f,0.000000000000000f,1.082531754730548f,1.371206889325361f,0.000000000000000f,-1.371206889325361f,-1.082531754730548f,0.000000000000000f,1.082531754730548f,1.371206889325361f,0.000000000000000f,-1.371206889325361f,-1.082531754730548f};
ResIA = ILMath.ccomplex(ResIAR,ResIAI);
ResIA.Reshape(new ILDimension(6,2,4));
TEST_ILMath_fft_HELPER.forwBackwCheck2Dmn(A, Result,ResRA,ResIA,6,2);
}
public static void TEST_ALL() {
	TEST_FFT_double_complex_1();
	TEST_FFT_double_complex_2();
	TEST_FFT_double_complex_3();
	TEST_FFT_double_complex_4();
	TEST_FFT_double_complex_5();
	TEST_FFT_double_complex_6();
	TEST_FFT_double_complex_7();
	TEST_FFT_double_complex_8();
	TEST_FFT_double_complex_9();
	TEST_FFT_double_complex_10();
	TEST_FFT_double_complex_11();
	TEST_FFT_double_complex_12();
	TEST_FFT_double_complex_13();
	TEST_FFT_double_complex_14();
	TEST_FFT_double_complex_15();
	TEST_FFT_double_complex_16();
	TEST_FFT_double_complex_17();
	TEST_FFT_double_complex_18();
	TEST_FFT_float_fcomplex_1();
	TEST_FFT_float_fcomplex_2();
	TEST_FFT_float_fcomplex_3();
	TEST_FFT_float_fcomplex_4();
	TEST_FFT_float_fcomplex_5();
	TEST_FFT_float_fcomplex_6();
	TEST_FFT_float_fcomplex_7();
	TEST_FFT_float_fcomplex_8();
	TEST_FFT_float_fcomplex_9();
	TEST_FFT_float_fcomplex_10();
	TEST_FFT_float_fcomplex_11();
	TEST_FFT_float_fcomplex_12();
	TEST_FFT_float_fcomplex_13();
	TEST_FFT_float_fcomplex_14();
	TEST_FFT_float_fcomplex_15();
	TEST_FFT_float_fcomplex_16();
	TEST_FFT_float_fcomplex_17();
	TEST_FFT_float_fcomplex_18();
}
}
}
